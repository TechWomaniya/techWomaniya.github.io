%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Digital device users spending time together.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 8/1/2020
%%BoundingBox: 0 0 3800 2000
%%HiResBoundingBox: 0 0 3800 2000
%%CropBox: 0 0 3800 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Digital device users spending time together</rdf:li>
               <rdf:li xml:lang="x-repair">Digital device users spending time together</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Digital device users spending time together. Group of men and women using laptop computers, tablet, smartphone. Vector illustration for web browsing, internet surfing, public access concept</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>laptop</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>girl</rdf:li>
               <rdf:li>vector</rdf:li>
               <rdf:li>access</rdf:li>
               <rdf:li>browsing</rdf:li>
               <rdf:li>lady</rdf:li>
               <rdf:li>lying</rdf:li>
               <rdf:li>people</rdf:li>
               <rdf:li>person</rdf:li>
               <rdf:li>public</rdf:li>
               <rdf:li>surfing</rdf:li>
               <rdf:li>user</rdf:li>
               <rdf:li>watching</rdf:li>
               <rdf:li>wifi</rdf:li>
               <rdf:li>woman</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>digital</rdf:li>
               <rdf:li>device</rdf:li>
               <rdf:li>together</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>using</rdf:li>
               <rdf:li>smartphone</rdf:li>
               <rdf:li>tablet</rdf:li>
               <rdf:li>pc</rdf:li>
               <rdf:li>internet</rdf:li>
               <rdf:li>online</rdf:li>
               <rdf:li>chatting</rdf:li>
               <rdf:li>social</rdf:li>
               <rdf:li>media</rdf:li>
               <rdf:li>network</rdf:li>
               <rdf:li>addiction</rdf:li>
               <rdf:li>communication</rdf:li>
               <rdf:li>technology</rdf:li>
               <rdf:li>wireless</rdf:li>
               <rdf:li>connection</rdf:li>
               <rdf:li>meeting</rdf:li>
               <rdf:li>gathering</rdf:li>
               <rdf:li>phone</rdf:li>
               <rdf:li>holding</rdf:li>
               <rdf:li>smart</rdf:li>
               <rdf:li>lifestyle</rdf:li>
               <rdf:li>message</rdf:li>
               <rdf:li>working</rdf:li>
               <rdf:li>information</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2020-08-01T15:17:58+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2020-08-01T15:17:58+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2020-08-01T15:17:57+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>136</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqx3zp5on0K0tl&#xA;tIFnv76QxW4lJES8ULs78dyAB0HXMzR6XxpGzQDTny8AS/yb501LU9Tk0nVoYFu/Ra5t7i2DrG6I&#xA;yo6lJGdlZS6n7RqPCmXa3QjFESiTXLdrwZzM0ebMJJI442kkYJGgLO7EAAAVJJPQDNa5SQ2n5g+R&#xA;ryJJbbX7CRJCQtLiMH4a1JBIKj4TucsOGY6FbTu0u7W8tYbu0mjubW4RZbe4iYPHJG45K6OpKsrA&#xA;1BGQII2KqepalZabZS317J6VrDQyScWanIhR8KhmNSQNhjGJJoKx5fzT/L1ioGu2wLUoCWHVuIBq&#xA;BQ17Zb+Xn3Itklje2l/ZW99ZyrPaXUaT208ZqjxyKGR1PcMpqMqIINFKhq+t6Ro9ulzql3HZ28ji&#xA;JZpjxTmVLULHYfCpNTthjAy5KgLbzz5NuZoobbW7KaaeRYYY4542ZpGNFUAGvxH7Pj2yRxSHQrae&#xA;ZWrsVdirsVdirsVdirsVdirsVdirsVdirsVQf1yb0PrLCOGA0KlySeLH4SaDatemXcAutyWHEatq&#xA;C9a4YrBLDIwFaAt0xlj4eYKiV8ll/rMdjpsl7NGeUZ4GIHq9aUB8O9fDJYsBnMRBRPJwxspLF50v&#xA;pbc3Eeks8IrV1mrTj1/YzLPZ8QaM9/d+1oGpJF8K6HzuRexWt5p723qFRyL8iORoDxKrtgl2d6TK&#xA;MrSNTvRFMozWuU7FXYqk3mnyxa+YLOKKSV7a5tpPVtbqMAsj0KmqtsyspoQcydNqZYZWN7asuITF&#xA;FB+VfJMOh3Ut/Ndvf6hLH6AmZFiVIuQYqiKT9pgCxJPQZZqtacoAqoscOAQ36skdFdSjgMjAhlIq&#xA;CD1BGYTegv0FogbkNPtuXxfF6Mdf3hq/b9o9fHJcZ71RkUUUMSRRIscUahI40AVVVRQAAbAAZFVx&#xA;AIoRUdd/bfFUONN05ZHkFrCJJCGdxGvJio4gk03oNsPEVV1VVUKoCqooANgAMCrLi1trmMxXESTR&#xA;nqkih16U6GvY4QaVQXR9JSUSpZW6yqwdZBEgYMOhBpWuHiPeqLyKuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxVDiz4p6aTOsQ+zHRCAB0A5KTQZZ4nWt/ix4XLZsgok7qPZYh1/2GJnfT7/1rw+ay40u0&#xA;ubF7KcF4n3Yk/EWJ5cq+Nd8MM0oy4hzQYAiikw8iaUqlVubpVb7Sh0AP/CZl/wApT7o/j4tP5WPe&#xA;Va18l6Tb3SXJead4yCqyspWq9Oir0yM+0Mko1sPcmOmiDafZguQ7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqoXGoWVtcWttPOkU9&#xA;67RWkTEBpXSNpWVB3IjRm+QwgEqr4FdirsVdirsVdirsVdirsVdirsVdirsVQGk+YNC1gXB0nULb&#xA;UBaSejctaypMI5AASjFC1Dv0wmJHNUfgV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVh/n&#xA;u31Rdb8parZadcalDpN/cTXkNr6XqiOXT7m3VgJXiU/vJlr8WX4iKkCasfpCCxbUNL883fm2TUre&#xA;z1SGW7u7eazuXu1js7bShZqtxZzWqXDL67XAc7RtVirchx2tEoCNbftvmqS2/kb8ybaTyksVxqKR&#xA;R6ZYPfP68t1JDqiyepfmZn1G1HGRKJ8STJxBVVH7Vhy4zxcuZ+XTp+pFK17+WnmmXSbucTau2pS6&#xA;NqU8cP6TuAg1mOblpzKomCqwRiFA+Cg3FcAzxvpVjp06rT2i0M5tYTP/AH/pr6vT7dBy6bdcwSyV&#xA;cCuxV2KuxV2KuxV2KuxV82/85JaL+ZvmDUWhsFeTQLGeCK00y3bi8xliRmu33AbjKxi3+zTl3Y5f&#xA;hzQiaPNvjppyhxDfdP8A/nEfy0mn+Qr7WXjljutXuyjGQng0NoCsbRrT+eSQE96e2S1MrlTjh7nm&#xA;Ml2KuxV2KuxV2KvHPzg/PrUPJPma18taNoR1bUZrdbqVmZgAjFgERI1ZmNIySe3vmbp9KJxMpGgo&#xA;BJoCyz38uvOw85+WINaOm3OlSuzRzWd0jKVdNiY3ZUEieDAe2xBzHzY+CVXakEc2TZUrsVdirsVd&#xA;irsVdirsVdirBvzM/MJ/Jk+jTunqWNwb6S+iWMPI8VlYy3XGNjJGEYmMbkH6MyMGHjv4feglIZ/+&#xA;ci/K1tpT3t3pOp2s6y2cYsp1to2ZNQhknt5vVecQiNo4W3Zwa7UywaKRNAjr9i2mN9+d/l+zRmk0&#xA;69HG9sbAoyxo4k1GwOoRllL7cIxxb/K6VG+RGlkeo5H7DS2ltj/zkZ5cuDa+roWr2sdytnMZpY7f&#xA;00t7+QQwTkrOTwMp40Ar3pkjopDqOv2LaJ/OD82bjytbXem6JazTa3BDZ3U14I45LS1hub1Lcevy&#xA;dW5SAOqhVO9K4NNp+Pc8t/uUlJvO/wDzkHZ2/lvWZNCtrqz1CGOdtD1G9hjNpetZXUdvdejR2Y8O&#xA;Z2ZRtvk8WjJkL5dfK0Ep5qP59+VrG81KB7C/aCx+vpb3wjiFvdz6UnqXkMDGTkSi9CyhW3odsrjp&#xA;JEDcdPt5JtnPlrWn1vRLXVWsLnTfrQZls71VS4RA5VC6qWC81AYCvQ5ROPCau0pnkFdirsVUb2+s&#xA;rG1ku724jtbWIVluJnWONBWlWdiFG574QCeSrbTUdPvLJL+zuYrmxkUvHdQuskTKP2ldSVI27HAR&#xA;XNIF7B5zrnnvS9RuKLayRpEaJcVBZ132KbUHfrmtyamMjyes0nZGTFH6gb6d3xTLQfzKgmvYrG7t&#xA;lt7dyI4bhTQLsAvNegBPcHbLMess0XE1fYJhAygbI6fqZ5mc867piqEn1KJDSMcz49stjiJ5sDNi&#xA;/mH8yNC0O6jtdTvhbTyrzEaRvIQvTk3BXIrgnLHA1JyMGkzZhcBsmFhrcWpWcV7ZXXr2swJjlQmh&#xA;oSp8OhFMuiIkWHGyRnCRjLYhX9eY/wC7G+85PhDCy801ybQr3za+qIoW8MMdhJevuPTikdqildqy&#xA;GviAM0+p1YmeAGogvY9m9nTw4jMi5kXXX3e96PYSSWtpDDBLWKNAEOxBFOv05tIYoiIDymfNKczI&#xA;8yUbHqko/vFDDxGxwHCOjWJo+C5imFUO46qeoymUCGwG1TIpdirsVdirsVdirsVYn+Yv5f6f5y0d&#xA;7eZzFfwW17Fps9SI45b21ktS8ij7ShZOmXYcxgfLZBCR6X+RHk6Dy6mm3hu5ryVLb6/fpeXIkka2&#xA;gMAjVmc/uAjMqxnYA+wpZLVy4rH3LStcfkP+XUt5Bdra3EDW62qxxRXUwiJsYPq0DtGWZWdYfg5E&#xA;Vp8zUDVzqvxutK5/JfyObeKD0rj04bWxsU/fGvo6bN69uOnUP9o98H5mf3/atIzzh+VXk/zbfrf6&#xA;tFcC69FLaR7e4lgWWKKX14llRGCSBJfiXkvX6KRx6iUBQUhL778jPy7vTqfq2k4XVVlWSMXMxjhF&#xA;xMtxP9WjZmSH1ZYwzcR7Cg2yY1UxXktK99+S/kG9vtSvZrSb1dUS5WZFuZvSje+XhdSwxFjHHJMt&#xA;A7Be2AamYAHd+haZrDCkMMcKfYjUItfBRQZjlK/FXYq7FUl86eXk8xeV9R0ZxE31uIqgnjWWPmp5&#xA;RsyMCDxdQw9xhjIxIIbMRAlvyeSfl4115N/LW/8AKWoXrXGoJNKLOIwtEIoZyvqR1JbuXfcD7WY+&#xA;t18clkAxPm77Q9jThlhMmMoc7H2fag/qdx66QcP3sgVkXbo6hl/A5qOE3T1PiRonoP0LlspvrDw8&#xA;TK8anksI9QhuwNPfrkuA3TA5hXFYA89npnkPzxpupaatlcXQbUrRSHQBmZ41oFcUBr1oc32LTZhA&#xA;GcSPe8F2jPB458KQlE77Jxe6zbykokgEX01PzzKx4CN6dbLICgZdSsYozJJKFRdyxr/TLhjkejDi&#xA;DxG8s7Tzj+YerH62wslXkk0YqGSIxxhRy6A9a5oNQeLIXttFE49PEVv+vd6n5F0zT9Psb2PTz/oj&#xA;XRKKp5KCkMcbUNT+0h5e+bDRCofF0Ha87yi+kf0lOdXna30q8mQ0eOFyp8DxNPxy7PLhgT5OHosY&#xA;nmhE8jIfe8jzl3056T5Junn0GNXPIwO0QJ8BRgPoDZ0HZ8+LF7nge3sIhqSR/EAfx8k+zNdMujke&#xA;Nw6GjDARagp3DIJYlkH7Q/HMOQo03g2vwJdirsVdirsVdiqU6/rlxpSK8Wm3Ooh0dglohkf1FaMK&#xA;lKcRyV2bkzAfD75OEL60qRr5/wBX+ryTSeUtViEdaq6ISeJXlQIXP2CSu25FNu1ngj+cEW3Yef8A&#xA;U7qWGN/KesW3qPxkM0SAInPhzJDFe3KgNadsThA/iC2p2H5g61dalDZyeUdTto5WCNcSKOMZZqIX&#xA;22XjuzdB0HLE4QBfEFtv/lYGtBGc+UNW4mVYolVELkFHJd1JAVeUYXZj9odMfBH84Lab+XvM1zq1&#xA;1cQT6ReaYIkR43ukIWQlmV1DKCgKFRtyqa9NshOFdbSnuVq7FWmdUUsxoo6k4QLVLp9SckrCOI/m&#xA;PXL44u9qM+5CPLI/22LfM5aAAwtbhVjvnl9ItNDuNV1GOKttwVJ5TxCmSRY05NUbBn6HbMTV4RKB&#xA;Ijcg7XsnVTjlEOPggefd9vK+VvOxO7N6yuSz1b1AevLvUeOc7Zt9AERVdE28v6ibDyz5q2IkktFR&#xA;ZR1BctH19/U/DN32NDizD3h5X2pNY4n3/oYr5C1D6j5s0+QmiSyeg/gRKCgr/siDnZauHFjLweE1&#xA;IPYr2P07pwKAN8YA9+v/AAwOajGbDmSG7APzZXUf8OSNaVIWhZAaAgdj7V45XrAThPvF+5z+ySBq&#xA;BfOjw/1nzdHe/mh5FvxrEq3VhLcAwLPcIJIZVPx8Ry5xt0qKZkQx6bLHhjVeTfPJqMcuKRN+b3T/&#xA;AJxZ8xeZ9V0bWItUuhd6fDccrMyMTMkr/HMoFKem3NWG+xrQb5VqYwhIRiK2cXJGUo+Id96ex+Yf&#xA;+OHff8YX/VmBqv7uXubuzf8AGMf9YPJkO7DuDnNF9JZZ5O8y6dptvJaXztF6knqJLxJTdQtDSpH2&#xA;fDNnoNTCAMZd7zXbnZuXNMTgLoV5s5guracAwSpKCA3wMDseh2zbxmDyLyWTDOH1Aj3oPRHae0e9&#xA;ZiwvZXniqdvSPww8R2BiVW+ZOX5hR4e7b49ftagybTT/AKN8mOYOXm3Q5IrKmbsVdirsVdirsVYd&#xA;+ZFpJc2+niPStQ1UiVgV024W3eMFR8bsxXbbsa/eRl+A1e4HvQWAyeXryK5Rv8K65LFMgBjTUCUj&#xA;MoMdGRwF4IkCduQJ+zSmZHGP50fkhMbfQG02506eDy1rlwLWSBvSa9VkDrXm0imnqqK/tdaD7ORM&#xA;7vePySlp8pKpMzeWtfeNUIq99znKKKD9ktyT9heX6gMl4nnH5IRV5oGpWWpQNYeX9aMCTR3dxJFe&#xA;qHlqh5xv8NPhDmhVgxYD4qEnAJgjcj5Kj/K6ap5Wv7mPSfKWrMl3KIbhrq5hkR/SqkVyZArMPhU8&#xA;vi7jY7ZHJUxvIJZnoXmbX9R1j6neeXrjTLNYJZGvJ3VlMqNEqRqFH7Qkc1P8vzpROEQLBtWSZUlK&#xA;L26M0hVT+7XoPH3zKxwoNMpWhssYuxVxIAqTQDqTirzT8/720n/KPzDHDKsjJ9T5cTUCt7D3G2ZW&#xA;DHITBIRGQJfIVrrmtWMRSy1C5tUHRIZpIx9ykDMnNpsUgTKIJ9zl49TlhtGUh7iXoH5V+dtambXt&#xA;J1G/muotRtIpEE8jykS29zGwC8iePwSPWmVaLDGOQcIAcbXZ55I+uRl7zbMYpHikSVDxdGDK3gQa&#xA;g5uiLdSo/mtqX5oeZNW1q/0W8ubfQ9FFkkVjZyvCzpc26zvKyxkF+JcElug6dDnNyyRxy4Dz3d5h&#xA;05yQ4wOSdfkh5n1XzFouueWvMkk1zfaS9FN5y+senJzRo5eXxco3Qg8t96dsyIEEd4P3OPkBhKxs&#xA;R94RP5seXLrzl5Bhs/LcS3t7pV6qtArohHoI8MkdZCoqOYNK75rYSjptTK/pd4eLUaaJG8kT/wA4&#xA;8aFqvlby7cfpa0ltbme9l9aCRSHCCONVIHQqStQw2P0Y63VROUTG8eGlw6QzwSgRU+Kxf497JfzC&#xA;/NK2sJJNH0+FbsyQkXUzEqIy42UADdgNzmJqdUCOGO9hv7N7LlGYyT2MZbD3MGtNb9S1e/vjFZWw&#xA;NElkkCBqfaNWoKDNSMZJ4Yiy9Z4wA4pERCN8qeePy41TWX0O+1gRXknEWk67W7ua1jMpBQk7U3p2&#xA;rXbNpg7ImYmUwR+O50XaHbvhyAxET7/0UXrUfk+1jBCXdxESpj5QsEPFhQjcNmw02MYjdA/Afoed&#xA;1mvlnAFUPeT96eRRRxRJFGoSONQqKOgUCgAywmzZcBO7FONqnian78w8h9TdHkr5Bk7FXYq7FXYq&#xA;7FUt1/zDpuhWYur5m4u3CONBydmpWgFQOg7nIZMggLLlaTSTzy4YJDH+Z2kyf3enai423WFG+0AR&#xA;0k78hlP5odxc89iZBznD5n9S9fzI05lLLpepMobgSIENGqRx/vOtVOH8yO4sT2PMfx4/mf1Lbf8A&#xA;NHy5LdrayxXVqzMFLzxqqqT/ADcXYj7sA1UbrdM+w8wjxAxl7j+xl+ZLp3Yq7FVG9kMds5HU7D6c&#xA;njFljI7JLmW0sfPm1BcMhgpGCQrctyR0rttU5m/k9rto8fdGaf5isbthG1YZSaBX6EnwOVZNNKO/&#xA;MMo5QWN675hBiuWu5PRgVlSKLfry8BuzGnTM7Bp6Irm0zmTbBvP/AOktT8g6xaiIW1qtvJcem3xT&#xA;SGIeoCQDRPsbDc/I5kGEQb5lGOVEPm/y95fu9evpbG1/vUtbq6p1qLW3efiAO7+nxHucozGoue9B&#xA;8k6T5elstJuYbuC1lnhIvrjixaF1dkZCVDNyYKG3p18KZy2pzZceQgSkPjT1Oiw4cmEHgifgDv8A&#xA;Fn3+E9U+rrNZMmp2tSqXNuwbkB05LXkD450Oh7VxnGBOVTHf1+LzXaPZOSOUnHH0E/L4LPLNz540&#xA;rzjfyz2002jtaxQPawwjnytlJiYyMAu3NxXluKDsM03aWqx5ZHgv3u57L0GXDEGZAvo831mbUdE1&#xA;fWfNejXclsL+Z5Luy5MA0VzMGZPUUqT8bfy5b2f2hUoxMR/Y19qdkgQlPi6/e9D8h+cb7TtRt7kz&#xA;yNZsVNxESSHif7VV6FhWo986jU6eM4bDm8jiyGMuaXf85EwecvKnmO28waHrmoQ6LrAIEKXMrQw3&#xA;CirIqlmQLIvxqKfzU2GaXDpsWSJiYi3d49XkG4kfveJzecvNDMZHv2dmNWZkjLEnckkrvXI5ezMQ&#xA;3r73JHaecChL7B+p7J5Uj0z80fy0Hlu/ijHmq19T9C6qERWWaFeawyOKHhIux7b9KqMtlgqAnDbh&#xA;2dZLNI5DxGyd3gkq3FtdS2l3E0FzA7RTRsKFZEJVlPgQRl2LU2akKLbT6D/5x/8Azyv4b+08neZZ&#xA;2uLS5ZYNJv5DV4ZDskEjHdkY/Ch6qdvs/ZjqdOK4gxIfTea9inNlIr2yU6qOJHuMxMgot0Tsr5Bk&#xA;7FXYq7FXYq7FUj82+VoPMVjHbyTNbywvzilA5gEihBWq1qPfKsuLjFOdoNcdPMyAsFj0X5Z6rFF6&#xA;MXmKRIqcSiwEAjYUP73/ACRlI0x/nOyl21jJs4hfv/462n5bauiGNPMkyoSSVEJpVupp6uP5aX85&#xA;B7Zxk34Q+f8Ax1SX8phLfC51DV3uwWDTD0uLuB25mR6fdg/Kb2SyPb1Q4YQEe7fl8Keg5mPPOxV2&#xA;KoTVP951/wBcfqOW4ebCfJKsyWpi3mPTJ0leeKJBbH4mkUBSCdiDvvvmx02UEUTu42WB59EqsrFr&#xA;q7jgjcUY0aShoNq/w2zInk4Y2WqMbNIDzvd6XZeYlv7kFbGzCWrTFWZBezKZTUKPtCFVqf8AK+eT&#xA;0QlLHwjmd/8ANG33/c25Y9zH/MHnjy6dPlETRXRlQxtaR81Lq/wn4iHC0Br0zKxaOZNFq6vLf+ca&#xA;Y43/ADSt+ShgtpclajxSn6jmt1X0OwKF0fSo/Ln5o6/pFo7rBYyXMVty2PFJl4V/2HfLMGGE41IA&#xA;7MMueeMAwJib6PVNN8ya080LfWCCrUNAAGHfkOhzle2cMMGYRx7Dhv73tvZ/JLU6cyy7niofIJ9f&#xA;eYtaltJEtHiguCP3cvDl8XuGLD8M1XjF2n5CHm8I8/3F8dKvjf7XMsqI4Cqg5BwxPFAq9s2HZwvK&#xA;C6ntf04CPd96e+XJYpLOFo25K0KFD4igz0EG4gh82IqRe0y6HY+fvyn/AEXfIZZYE4xkGjLPamsR&#xA;DeLJQH2JzSZP3efyP6XYY5Ew25vjPVrMWmo3lmAaQTSRrXrRWIGZuSNghvgbAL0H/nHzWTZ+c4LR&#xA;moks0Mq/7GQI9Pmj/hmNiNxlHyas43B82Uf85E6Jd+UPO9zrWlpGlh5wspIL2N41kT1lZPXKqwIV&#xA;jSNw3UMSRvlOmiJc+jcED/zj9+UGpeYdcs/NGoo1voGmTrPAzAhrqeFuSLH/AMVq4HNv9iO9LtTm&#xA;ERQ5qS+uc1jFUhnkhbkhp4jscjKIPNINJjBqMT0EnwN49soliI5Ngmi8qZuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxVC6ktbav8rA/wAP45biO7CfJKcyWpxAIoemKse1nzNY2ZubR7ab1IeNHQR8eZAdGHxg&#xA;9SO2Y09fHHOpA7fjvdrpuxcueAlEx9XffT4ME1eez1zS7rTNRe4gtnuLm6ga3SNnaWW4keFpSzr8&#xA;McLKnAe/xbDMnF7QYschKMZE0BvXcLrfqerkH2Y1B/ih8z/xKTeTvy1j1HWA0t60H1X4z6UEZWWI&#xA;UX4uTMqMa7jiwObSPtLjzXGEZcuvT5fscDW9iZdNESnKO5ra/wBIDD/yY0r9Efn/AKlpYXitk2ow&#xA;IB04I5C09uNMhnleK/c4Z5Mj/OLydJpH5kWXmu3T/cfriG1vWA2S7SOiVp09VI1p7g5PQZf4WjOL&#xA;g3pEX72P/JBY/T/t5x/aufxNRMjldfLZ9J7F03g6SETzqz8d02eVRIqV+I709uma8OyYl+Y3lOLW&#xA;dOWUMYzE6tMVFSVFRX5iv+dM2fY8x48Yy5S2dH7QYTLTSlHnHf5fsS3RdPtrSzijhrxiX01B7AeP&#xA;uc9DrhHCOQfL7s2Xs/5P3ITSL6ORwqC4DKCe5QA/8RGaftGNyHuczTHYvnD87PLUdr5kv9Ts1/0Y&#xA;3UsE4HQFZCsbfSop/t5mgExB8g2YMm5ilnl3y/rNr5m0XWdGsp7u1vAjuLaN5BE8o4SK/AHiodqq&#xA;T/DMaQGOYJ2jJlRnGQAsxe7/APOV62k/5cWs6kNPb6lD6bDqA8UqsPp2zBwmUS2RO7N/yW81w+Zv&#xA;y20a+QKk8EIsruJAFCzWwEZ+FaBeQAcAdjlUxRSWb5BDsVdiqYaZOxJhY1AFV/plGaPVsgeiYZQ2&#xA;OxV2KuxV2KuxV2KuxV2KuxVCanq2m6XAtxqFwttCzCNXfoWIJA+5ThAtUpn87+UJIXT9KQVI23PX&#xA;t2ycYkFB3CT/AOMvLH/Vxi/H+mZTTTv8ZeWP+rjF+P8ATFaYz5p8weVbqX1IbzlOFCSqscpV16ij&#xA;BSOQrmu1uHiNi79z0XY+qOKNSMeG9vULHwvkxF7+xDUWUlT0JRx9/wAOav8AK5P5pelHaWCvrj8w&#xA;zPyjr3lPT4JFa/H1uWjSu8ciKAOiqWUdK5t9DhEB/SPk8n21qpZ5AiuAcqIJ95p57YrYaf8A85HX&#xA;WvI3+4W/s2kF6qMYVlaFUZGcCgYvGTQ+Obg5AcXD1dLWzPPzC86+UpfL1zYNG+rTXCVgggikcLKp&#xA;DRyNIF4pwcBhvXbMHLklAem+LycrRYYyyAzIEAd7PMdzzCw8wPGXDafcKWHws0b7EeNB0zU4ezzO&#xA;UYm43zPc9fqO24QhKUalX0gHcq1tqlJlmuA4Yt8VY3G3tt2y3tLQCGT91vCh+P0sOx+145cP76Qj&#xA;kBPPbrY/V8EzutSsGtplJaQFGBRUdiailKAZiafS5fEjQrcb9zl6rtHT+FK5AijtztjWiWFxOTGw&#xA;9BS27zhowPfcV+4Z6Jl1eMdQ+VQwT7mev5p0fyvoX1HSRJqOotVi6Qy+n6jbc3bjSgpsoNdu3XMA&#xA;SjllciAPe38JiKAsvMplub6Rl1G2muoJ3rdRyRyASAtVgSFqK+IzOy5sfARGUbrbf5NeGEhkBkDV&#xA;7+7qzzytZaDpV0kemPLotoYQEi9RLiJDUsQXlZpSrE9CK19unNZJZM0RDL/Cb4hX2h6MTxYZHJio&#xA;8VAxIN/Asr1iz8n+YfK19oHmLVoL1L0EJPHGYnhYbxulS/xo29e/Q7ZOBkBRNuBlMTK4x4fK7ePf&#xA;kn5q1H8tda1zy/rNhf32gz3BNtqNlbSyxerExj9ZVAqY5o6Goqdhtls6kxIt9Fp508ruiuNQjAYA&#xA;gMGU7+IIBH05Uxpv/GXlj/q4xfj/AEwLTv8AGXlj/q4xfj/TFaROn+dPKq3HJtShUAHck/0yvKDT&#xA;KA3T3TfM2gancG3sL2O4nClzGhNeIoCenvmOYkNqZ5FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:7BA71DFEF0D3EA11BCD7C5230AF4E61A</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:7BA71DFEF0D3EA11BCD7C5230AF4E61A</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:b4f7a389-aae9-1a43-b561-52f8d670fcac</stRef:instanceID>
            <stRef:documentID>xmp.did:b4f7a389-aae9-1a43-b561-52f8d670fcac</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71</stEvt:instanceID>
                  <stEvt:when>2017-01-20T09:07:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:02801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T18:36:10+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:05801174072068118083F6D0A67B0728</stEvt:instanceID>
                  <stEvt:when>2017-01-20T21:11:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:577FABBD61206811822AA8872E1D75D1</stEvt:instanceID>
                  <stEvt:when>2019-04-07T19:22:06+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0880117407206811822A8072EAEFE205</stEvt:instanceID>
                  <stEvt:when>2019-05-11T00:15:08+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811822AB2A6B75D99AD</stEvt:instanceID>
                  <stEvt:when>2019-05-18T09:11:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:37e9aa8b-7bc9-034e-9f49-2a1ed12c38ad</stEvt:instanceID>
                  <stEvt:when>2020-03-14T15:46:17+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b4f7a389-aae9-1a43-b561-52f8d670fcac</stEvt:instanceID>
                  <stEvt:when>2020-06-24T12:27:46+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7BA71DFEF0D3EA11BCD7C5230AF4E61A</stEvt:instanceID>
                  <stEvt:when>2020-08-01T15:17:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>3800.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255 1</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=105 B=102</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>105</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=54 G=98 B=193</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>54</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>193</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=109 G=137 B=207</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>137</xmpG:green>
                           <xmpG:blue>207</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=179 B=244</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>244</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=190 G=210 B=250</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>189</xmpG:red>
                           <xmpG:green>209</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=221 G=232 B=253</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>221</xmpG:red>
                           <xmpG:green>232</xmpG:green>
                           <xmpG:blue>253</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=51 B=46</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=231 G=87 B=85</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>86</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=114 B=105</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>114</xmpG:green>
                           <xmpG:blue>105</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=136 B=136</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>233</xmpG:red>
                           <xmpG:green>135</xmpG:green>
                           <xmpG:blue>135</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=146 B=144</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>145</xmpG:green>
                           <xmpG:blue>144</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=1 G=1 B=23</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>1</xmpG:red>
                           <xmpG:green>1</xmpG:green>
                           <xmpG:blue>22</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=6 G=6 B=50</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>5</xmpG:red>
                           <xmpG:green>5</xmpG:green>
                           <xmpG:blue>49</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=11 G=7 B=84</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>10</xmpG:red>
                           <xmpG:green>7</xmpG:green>
                           <xmpG:blue>84</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=168 G=63 B=63</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>168</xmpG:red>
                           <xmpG:green>63</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=58 G=73 B=205</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>58</xmpG:red>
                           <xmpG:green>73</xmpG:green>
                           <xmpG:blue>205</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3800 2000 li
3800 0 li
cp
clp
0 0 mo
0 2000 li
3800 2000 li
3800 0 li
0 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
1072.64 1650.03 mo
1072.64 1650.03 929.472 1296.03 1138.92 1084.66 cv
1409.07 812.025 1758.18 1039.92 1889.18 1033.27 cv
2020.17 1026.63 2027.55 765.033 2418.95 733.787 cv
2721.58 709.628 3218.58 707.724 3112.55 1135.12 cv
3031.94 1460.06 3480.45 1291.75 3393.12 1650.72 cv
1072.64 1650.03 li
cp
.866667 .909804 .992157 rgb
f
1511.58 1434.08 mo
1511.58 1434.08 1477.51 1394.34 1509.48 1369.1 cv
1509.48 1369.1 1532.82 1354.96 1551.86 1356.11 cv
1551.86 1356.11 1524.89 1401.34 1533.61 1405.84 cv
1542.34 1410.34 1560.04 1353.27 1560.04 1353.27 cv
1560.04 1353.27 1613.17 1348.12 1630.26 1356.34 cv
1630.26 1356.34 1584.84 1393.51 1594.41 1395.72 cv
1603.97 1397.93 1653.03 1361.45 1653.03 1361.45 cv
1653.03 1361.45 1702.48 1369.86 1699.85 1400.03 cv
1697.21 1430.2 1680.17 1439.51 1672.68 1438.71 cv
1665.19 1437.91 1621.38 1421.19 1620.43 1427.32 cv
1619.48 1433.46 1645.85 1453.51 1664.31 1454.45 cv
1664.31 1454.45 1629.45 1492.9 1606.28 1481.8 cv
1583.11 1470.7 1581.13 1453.11 1566.69 1446.52 cv
1552.24 1439.92 1539.91 1439.94 1545.88 1446.67 cv
1551.84 1453.39 1577.98 1459.93 1586.24 1474.54 cv
1594.5 1489.15 1601.91 1499.01 1577.94 1495.4 cv
1553.97 1491.79 1515 1474.25 1513.29 1454.17 cv
1511.58 1434.08 1511.58 1434.08 1511.58 1434.08 cv
cp
.227451 .286275 .803922 rgb
f
1675.55 1400.84 mo
1675.55 1400.84 1541.24 1395.67 1511.58 1434.08 cv
1511.58 1434.08 1505.02 1453.73 1484.83 1471.61 cv
1481.69 1480.19 li
1481.69 1480.19 1504.96 1455.65 1513.29 1454.17 cv
1513.29 1454.17 1500.26 1406.58 1675.55 1400.84 cv
cp
f
1484.83 1471.61 mo
1484.83 1471.61 1456 1492.94 1454 1531.03 cv
1459.23 1531.5 li
1459.23 1531.5 1468.44 1492.11 1485.08 1476.71 cv
1501.72 1461.3 1484.83 1471.61 1484.83 1471.61 cv
cp
f
1392.48 1384.1 mo
1392.48 1384.1 1446.67 1353.76 1421.38 1312.57 cv
1421.38 1312.57 1401.15 1287.29 1379.47 1280.79 cv
1379.47 1280.79 1391.03 1342.2 1379.47 1343.64 cv
1367.91 1345.09 1371.53 1274.28 1371.53 1274.28 cv
1371.53 1274.28 1314.45 1246.83 1292.05 1249 cv
1292.05 1249 1327.45 1308.96 1315.89 1307.52 cv
1304.33 1306.07 1264.6 1245.38 1264.6 1245.38 cv
1264.6 1245.38 1206.07 1234.54 1196.68 1269.22 cv
1187.29 1303.9 1202.46 1321.25 1211.13 1323.41 cv
1219.8 1325.58 1275.43 1324.86 1273.99 1332.08 cv
1272.54 1339.31 1234.97 1350.87 1214.02 1344.36 cv
1214.02 1344.36 1237.14 1401.44 1267.49 1398.55 cv
1297.83 1395.66 1307.22 1376.88 1326.01 1375.43 cv
1344.79 1373.99 1358.52 1379.04 1349.13 1384.1 cv
1339.74 1389.16 1307.95 1385.76 1292.77 1398.66 cv
1277.6 1411.56 1265.32 1419.5 1293.5 1425.28 cv
1321.67 1431.06 1372.25 1427.45 1382.36 1405.78 cv
1392.48 1384.1 1392.48 1384.1 1392.48 1384.1 cv
cp
.576471 .701961 .956863 rgb
f
1223.41 1280.06 mo
1223.41 1280.06 1375.14 1329.19 1392.48 1384.1 cv
1392.48 1384.1 1391.75 1408.67 1406.93 1436.84 cv
1406.93 1447.68 li
1406.93 1447.68 1391.03 1410.83 1382.36 1405.78 cv
1382.36 1405.78 1416.32 1358.09 1223.41 1280.06 cv
cp
f
1406.93 1436.84 mo
1406.93 1436.84 1430.33 1472.38 1416.99 1515.63 cv
1410.97 1514.01 li
1410.97 1514.01 1416.81 1466.37 1404.57 1442.41 cv
1392.33 1418.45 1406.93 1436.84 1406.93 1436.84 cv
cp
f
1478.69 1342.25 mo
1478.69 1342.25 1407.26 1302.25 1440.59 1247.97 cv
1440.59 1247.97 1467.26 1214.63 1495.83 1206.06 cv
1495.83 1206.06 1480.59 1287.01 1495.83 1288.92 cv
1511.07 1290.82 1506.3 1197.49 1506.3 1197.49 cv
1506.3 1197.49 1581.54 1161.3 1611.07 1164.16 cv
1611.07 1164.16 1564.4 1243.2 1579.64 1241.3 cv
1594.88 1239.4 1647.26 1159.39 1647.26 1159.39 cv
1647.26 1159.39 1724.4 1145.11 1736.78 1190.82 cv
1749.16 1236.54 1729.16 1259.39 1717.73 1262.25 cv
1706.31 1265.11 1632.97 1264.16 1634.88 1273.68 cv
1636.78 1283.21 1686.3 1298.44 1713.92 1289.87 cv
1713.92 1289.87 1683.45 1365.11 1643.45 1361.3 cv
1603.45 1357.49 1591.07 1332.73 1566.3 1330.82 cv
1541.54 1328.92 1523.45 1335.59 1535.83 1342.25 cv
1548.21 1348.92 1590.11 1344.44 1610.11 1361.44 cv
1630.11 1378.44 1646.3 1388.92 1609.16 1396.54 cv
1572.02 1404.16 1505.35 1399.39 1492.02 1370.82 cv
1478.69 1342.25 1478.69 1342.25 1478.69 1342.25 cv
cp
f
1701.54 1205.11 mo
1701.54 1205.11 1501.54 1269.87 1478.69 1342.25 cv
1478.69 1342.25 1479.64 1374.63 1459.64 1411.78 cv
1459.64 1426.06 li
1459.64 1426.06 1480.59 1377.49 1492.02 1370.82 cv
1492.02 1370.82 1447.26 1307.97 1701.54 1205.11 cv
cp
.227451 .286275 .803922 rgb
f
1459.64 1411.78 mo
1459.64 1411.78 1428.79 1458.61 1446.38 1515.63 cv
1454.31 1513.5 li
1454.31 1513.5 1446.61 1450.7 1462.75 1419.11 cv
1478.88 1387.53 1459.64 1411.78 1459.64 1411.78 cv
cp
f
1476.28 1639.26 mo
1553.55 1639.26 1616.2 1576.62 1616.2 1499.35 cv
1336.36 1499.35 li
1336.36 1576.62 1399 1639.26 1476.28 1639.26 cv
cp
.980392 .447059 .411765 rgb
f
1510.71 1638.19 mo
1505.02 1638.91 1499.21 1639.27 1493.32 1639.27 cv
1416.05 1639.27 1353.41 1576.62 1353.41 1499.35 cv
1388.17 1499.35 li
1388.17 1570.74 1441.64 1629.63 1510.71 1638.19 cv
cp
.988235 .572549 .564706 rgb
f
1618.13 1646.38 mo
1334.43 1646.38 li
1334.43 1646.38 li
1334.43 1636.85 1342.16 1629.12 1351.69 1629.12 cv
1600.87 1629.12 li
1610.4 1629.12 1618.13 1636.85 1618.13 1646.38 cv
1618.13 1646.38 li
cp
.980392 .447059 .411765 rgb
f
1619.38 1503.64 mo
1331.76 1503.64 li
1331.76 1499.35 li
1619.38 1499.35 li
1619.38 1503.64 li
cp
.905882 .341176 .333333 rgb
f
2860.38 1599.02 mo
2860.38 1599.02 2863.28 1645.79 2872.33 1646.46 cv
2873.53 1646.55 2918.22 1646.55 2918.22 1646.55 cv
2975.27 1646.22 li
2975.27 1646.22 2974.89 1632.47 2958.22 1629.57 cv
2941.54 1626.66 2913.63 1614.94 2903.53 1592.9 cv
2892.9 1569.72 2860.38 1599.02 2860.38 1599.02 cv
cp
.023529 .023529 .196078 rgb
f
2829.93 1045.91 mo
2829.93 1045.91 2856.86 1061.23 2864.4 1061.22 cv
2871.94 1061.22 2901.54 1055.5 2909.79 1059.72 cv
2918.04 1063.93 2932.97 1080.89 2935.77 1086.43 cv
2940.81 1096.4 2915.49 1092 2903.52 1083.51 cv
2901.78 1082.28 2899.62 1081.82 2897.54 1082.28 cv
2891.34 1083.63 2878.46 1085.97 2872.25 1083.67 cv
2863.89 1080.57 2819.85 1077.14 2819.85 1077.14 cv
2829.93 1045.91 li
cp
.988235 .572549 .564706 rgb
f
2625.03 837.338 mo
2625.03 837.338 2652.95 1035.77 2699.18 1053.54 cv
2721.99 1062.31 2822.8 1082.19 2852.62 1084.18 cv
2852.62 1084.18 2859.93 1078.26 2858.15 1054.14 cv
2858.15 1054.14 2752.53 1015.36 2737.52 994.272 cv
2715.19 962.887 2751.38 866.058 2723.36 836.581 cv
2695.34 807.105 2648.14 794.437 2625.03 837.338 cv
cp
.929412 .411765 .4 rgb
f
2634.44 1255.39 mo
2642.58 1269.2 2652 1282.15 2661.71 1294.41 cv
2691.72 1332.29 2724.38 1363.52 2730.07 1393.04 cv
2731.2 1398.93 2733 1405.27 2735.35 1411.94 cv
2737.72 1418.71 2740.66 1425.82 2744.05 1433.17 cv
2756.78 1460.83 2775.82 1491.82 2794.84 1519.99 cv
2827.7 1568.69 2858.61 1609.33 2858.61 1609.33 cv
2915.29 1606.91 li
2913.02 1601.23 2888.29 1533.99 2855.23 1451.81 cv
2841.8 1418.45 2827.52 1382.97 2813.74 1348.75 cv
2811.91 1344.18 2810.07 1339.63 2808.25 1335.12 cv
2804.04 1324.65 2799.9 1314.34 2795.85 1304.3 cv
2764.8 1227.14 2740.07 1165.7 2740.07 1165.7 cv
2740.07 1165.7 2615.97 1118.69 2603.08 1149.15 cv
2592.45 1174.27 2601.11 1198.87 2634.44 1255.39 cv
cp
.0117647 .00784314 .192157 rgb
f
2729.14 1465.41 mo
2729.14 1465.41 2689.72 1490.74 2693.54 1498.97 cv
2694.05 1500.06 2715.84 1539.08 2715.84 1539.08 cv
2743.94 1588.73 li
2743.94 1588.73 2755.76 1581.71 2750.17 1565.73 cv
2744.57 1549.75 2741.2 1519.67 2755.52 1500.11 cv
2770.58 1479.52 2729.14 1465.41 2729.14 1465.41 cv
cp
.023529 .023529 .196078 rgb
f
2748.43 1509.94 mo
2748.43 1509.94 2723.79 1488.21 2719.45 1472.27 cv
2719.45 1472.27 2820.96 1350.63 2842.99 1323.37 cv
2844 1322.12 2843.74 1320.74 2842.4 1319.24 cv
2825.78 1300.49 2641.07 1262.38 2616.92 1224.82 cv
2608.6 1211.88 2603.89 1199.59 2601.33 1188.86 cv
2595.85 1165.94 2600.18 1150.11 2600.18 1150.11 cv
2784.65 1144.78 li
2784.65 1144.78 2938.25 1240.41 2955.64 1305.62 cv
2973.03 1370.83 2748.43 1509.94 2748.43 1509.94 cv
cp
.043137 .027451 .329412 rgb
f
2842.4 1319.24 mo
2825.78 1300.49 2641.07 1262.38 2616.92 1224.82 cv
2608.6 1211.88 2603.89 1199.59 2601.33 1188.86 cv
2601.33 1165.51 li
2679.73 1153.18 li
2679.73 1153.18 2701.96 1221.6 2767.82 1247.25 cv
2829.49 1271.29 2841.17 1313.93 2842.4 1319.24 cv
cp
.00392199 .00392199 .090196 rgb
f
2734.17 824.833 mo
2696.86 834.479 2634.99 799.904 2634.99 799.904 cv
2634.99 799.904 2659.01 783.757 2667.92 748.292 cv
2668.37 746.505 2668.77 744.674 2669.14 742.793 cv
2673.05 741.964 2680.42 740.398 2688.3 738.731 cv
2716.81 764.269 li
2716.81 764.269 2716.16 774.872 2712.59 793.096 cv
2711.97 796.278 2711.27 799.689 2710.44 803.325 cv
2725.74 812.8 2734.17 824.833 2734.17 824.833 cv
cp
.988235 .572549 .564706 rgb
f
2595.48 979.521 mo
2600.82 1051.42 2593.79 1160.76 2599.85 1179.7 cv
2605.09 1196.03 2664.72 1186.32 2688.52 1180.87 cv
2697.33 1178.85 2708 1175.96 2719.02 1172.55 cv
2749.76 1163.04 2783.26 1149.44 2786.85 1139.35 cv
2786.99 1138.96 2787.11 1138.57 2787.18 1138.19 cv
2787.51 1136.73 2787.44 1135.35 2787.12 1133.96 cv
2785.92 1128.82 2781.3 1123.26 2780.76 1110.52 cv
2780.15 1096.3 2780.24 1079.56 2779.71 1061.55 cv
2779.68 1059.53 2779.65 1057.31 2779.43 1055.3 cv
2779.42 1054.56 li
2779.41 1054.17 2779.4 1053.79 2779.4 1053.41 cv
2778.88 1033.33 2777.83 1012.22 2776.61 991.28 cv
2775.84 978.131 2774.95 965.11 2773.91 952.633 cv
2771.23 920.427 2767.62 891.787 2762.84 873.68 cv
2755.02 844.165 2737.79 824.915 2722.11 810.808 cv
2710.76 801.076 li
2698.1 803.841 2683.14 802.007 2669.6 795.594 cv
2654.95 788.637 2649.89 783.651 2647.34 785.531 cv
2613.5 811.637 2589.16 891.631 2595.48 979.521 cv
cp
.980392 .447059 .411765 rgb
f
2719.02 1172.55 mo
2749.76 1163.04 2783.26 1149.44 2786.85 1139.35 cv
2786.99 1138.96 2787.11 1138.57 2787.18 1138.19 cv
2787.16 1136.78 2787.15 1135.37 2787.12 1133.96 cv
2785.92 1128.82 2781.3 1123.26 2780.76 1110.52 cv
2780.15 1096.3 2780.24 1079.56 2779.71 1061.55 cv
2779.68 1059.53 2779.65 1057.31 2779.43 1055.3 cv
2779.42 1054.56 li
2779.41 1054.17 2779.4 1053.79 2779.4 1053.41 cv
2655.12 895.076 li
2655.12 895.076 2571.58 1069.03 2719.02 1172.55 cv
cp
.929412 .411765 .4 rgb
f
2716.81 764.269 mo
2716.81 764.269 2716.16 774.872 2712.59 793.096 cv
2684.75 784.1 2672.13 758.957 2667.92 748.292 cv
2668.37 746.505 2668.77 744.674 2669.14 742.793 cv
2673.05 741.964 2680.42 740.398 2688.3 738.731 cv
2716.81 764.269 li
cp
.917647 .533333 .533333 rgb
f
2720.55 780.338 mo
2720.55 780.338 2659.85 770.208 2666.74 732.503 cv
2673.63 694.798 2670.44 668.096 2709.48 672.97 cv
2748.53 677.844 2753.41 693.604 2754.17 706.749 cv
2754.93 719.894 2736.52 782.002 2720.55 780.338 cv
cp
.988235 .572549 .564706 rgb
f
2959.49 1102.95 mo
2964.84 1104.69 li
3010.39 964.523 li
3005.04 962.783 li
2959.49 1102.95 li
cp
.227451 .286275 .803922 rgb
f
2810.42 1092.14 mo
2965.04 1095.44 li
2964.84 1104.69 li
2810.22 1101.39 li
2810.42 1092.14 li
cp
f
2813.32 1108.77 mo
2813.32 1108.77 2863 1121.87 2881.63 1120.5 cv
2900.26 1119.12 2915.76 1110.26 2918.1 1105.64 cv
2920.44 1101.01 2925.37 1092.81 2912.69 1094.32 cv
2900 1095.84 2882.68 1098.53 2882.15 1096.09 cv
2881.61 1093.66 2892.49 1093.89 2892.49 1093.89 cv
2892.49 1093.89 2895.78 1089.11 2891.64 1088.94 cv
2887.49 1088.76 2875.42 1085.49 2870.93 1087.73 cv
2866.45 1089.97 2862.31 1098.25 2859.03 1097.91 cv
2855.75 1097.56 2817.46 1080.65 2817.46 1080.65 cv
2813.32 1108.77 li
cp
.988235 .572549 .564706 rgb
f
2637.35 845.48 mo
2637.35 845.48 2643.22 1045.78 2687.21 1068.54 cv
2708.92 1079.77 2806.92 1110.64 2836.34 1115.91 cv
2836.34 1115.91 2844.25 1110.83 2845.14 1086.66 cv
2845.14 1086.66 2744.44 1036.47 2731.85 1013.86 cv
2713.12 980.204 2759.77 887.954 2735.17 855.569 cv
2710.57 823.183 2665.05 805.389 2637.35 845.48 cv
cp
.980392 .447059 .411765 rgb
f
2667.92 748.292 mo
2667.92 748.292 2667.22 735.356 2675.2 727.944 cv
2675.2 727.944 2672.42 714.975 2677.55 712.836 cv
2682.68 710.698 2683.75 721.603 2686.1 719.892 cv
2688.46 718.182 2698.93 710.057 2703.42 698.084 cv
2707.91 686.112 2749 700.612 2753.79 702.769 cv
2758.58 704.926 2773.98 697.015 2776.97 690.601 cv
2776.97 690.601 2768.42 683.759 2764.57 678.629 cv
2760.72 673.497 2733.78 638.862 2696.15 648.697 cv
2658.52 658.532 2653.39 676.49 2655.53 691.884 cv
2657.67 707.277 2652.5 743.127 2667.92 748.292 cv
cp
.0718428 .0566274 .34953 rgb
f
1526.83 825.185 mo
1559.21 822.092 li
1561.81 821.844 1564.27 823.319 1565.27 825.73 cv
1589.72 884.586 li
1591.25 888.28 1588.78 892.404 1584.79 892.785 cv
1551.09 896.003 li
1548.45 896.255 1545.96 894.727 1544.99 892.257 cv
1521.86 833.274 li
1520.41 829.598 1522.89 825.562 1526.83 825.185 cv
cp
.0528231 .0528231 .220196 rgb
f
1937.48 1602.85 mo
1920.3 1611.97 li
1920.3 1611.97 1827.38 1513.44 1805.04 1418.89 cv
1801.05 1402.01 1799.44 1385.36 1801.15 1369.56 cv
1801.15 1369.56 1799.8 1365.28 1797.43 1357.71 cv
1797.33 1357.38 1797.22 1357.04 1797.12 1356.7 cv
1796.08 1353.38 1794.84 1349.47 1793.46 1345.04 cv
1788.98 1330.76 1782.81 1311.21 1775.79 1288.95 cv
1759.62 1237.72 1722.63 1122.2 1706.82 1074.14 cv
1820.43 1033.04 li
1820.43 1033.04 1833.33 1062.46 1851.88 1142.45 cv
1854.73 1152.89 1857.59 1164.43 1860.27 1177.01 cv
1863.3 1191.25 1866.12 1206.83 1868.48 1223.66 cv
1872.46 1252.17 1875.12 1284.24 1875.29 1319.42 cv
1875.35 1333.74 1875 1348.58 1874.15 1363.89 cv
1873.53 1375.12 1875.2 1390.08 1878.33 1407.1 cv
1892.64 1484.91 1937.48 1602.85 1937.48 1602.85 cv
cp
.0718428 .0566274 .34953 rgb
f
1999.69 1646.38 mo
1907.84 1646.38 li
1907.84 1646.38 1904.4 1631.73 1910.43 1621.77 cv
1915.77 1612.95 1913.73 1607.92 1909.77 1600.62 cv
1913.93 1602.33 1919.32 1603.88 1925.24 1603.54 cv
1929.82 1603.27 1934.66 1601.2 1938.9 1598.73 cv
1942.86 1603.24 1959.78 1622.42 1965.07 1626.22 cv
1971.08 1630.54 1997.84 1629 1999.69 1646.38 cv
cp
.0528231 .0528231 .220196 rgb
f
1868.48 1223.66 mo
1797.12 1356.7 li
1796.08 1353.38 1794.84 1349.47 1793.46 1345.04 cv
1788.98 1330.76 1782.81 1311.21 1775.79 1288.95 cv
1759.62 1237.72 1722.63 1122.2 1706.82 1074.14 cv
1820.43 1033.04 li
1820.43 1033.04 1833.33 1062.46 1851.88 1142.45 cv
1854.73 1152.89 1857.59 1164.43 1860.27 1177.01 cv
1863.3 1191.25 1866.12 1206.83 1868.48 1223.66 cv
cp
f
1559.16 930.269 mo
1558.59 930.76 1531.36 902.93 1516.83 887.51 cv
1531.39 878.645 li
1610.9 928.56 li
1559.16 930.269 li
cp
.991764 .700784 .695294 rgb
f
1704.97 1617.63 mo
1704.97 1617.63 1702.83 1633.23 1708.82 1646.38 cv
1746.87 1646.38 li
1746.87 1646.38 1747.16 1635.02 1737.47 1620.77 cv
1727.77 1606.52 1704.97 1617.63 1704.97 1617.63 cv
cp
.0528231 .0528231 .220196 rgb
f
1779.96 602.366 mo
1780.48 599.933 1786.97 573.88 1827.39 579.496 cv
1827.39 579.496 1807.22 578.412 1802.29 586.505 cv
1802.29 586.505 1817.62 578.113 1827.97 583.472 cv
1838.33 588.832 1841.42 609.149 1840.39 615.476 cv
1839.36 621.801 1829.73 641.097 1822.47 641.617 cv
1819.72 641.814 1816.72 641.111 1814.04 640.162 cv
1815.39 643.373 1816.65 646.875 1817.77 650.737 cv
1828.07 686.443 1805.94 715.735 1792.98 709.818 cv
1784.67 706.023 1779.62 720.452 1779.62 720.452 cv
1706.96 637.252 li
1706.96 637.252 1749.21 578.374 1779.96 602.366 cv
cp
.0723525 .0723525 .236274 rgb
f
1705.59 825.476 mo
1715.07 832.053 1726.96 837.477 1741.88 840.92 cv
1797.82 853.843 1819.25 806.568 1827.3 774.117 cv
1819.67 769.752 1812.5 768.79 1808.35 768.295 cv
1804.31 767.819 1800.06 767.502 1796.54 767.327 cv
1790.25 762.517 1780.9 742.827 1778.83 712.258 cv
1776.2 712.964 li
1732.11 725.029 li
1732.11 725.029 1734.13 739.042 1735.12 752.287 cv
1735.89 762.651 1736.01 772.556 1734.04 774.979 cv
1730.6 775.725 1728.54 776.213 1728.54 776.213 cv
1728.54 776.213 1728.54 776.228 1728.52 776.254 cv
1727.93 777.225 1715.14 798.257 1705.59 825.476 cv
cp
.991764 .700784 .695294 rgb
f
1732.11 725.036 mo
1732.11 725.036 1734.14 739.038 1735.12 752.294 cv
1760.09 749.793 1771.68 726.016 1776.2 712.973 cv
1732.11 725.036 li
cp
.98847 .581098 .573412 rgb
f
1724.65 738.19 mo
1724.65 738.19 1783.93 734.92 1781.33 698.034 cv
1778.72 661.15 1784.62 635.886 1746.66 636.415 cv
1708.7 636.943 1702.35 651.537 1700.22 664.06 cv
1698.1 676.583 1709.17 738.091 1724.65 738.19 cv
cp
.991764 .700784 .695294 rgb
f
1700.51 643.428 mo
1708.87 631.677 1715.96 633.614 1720.08 636.672 cv
1751.16 616.559 1773.9 641.368 1773.9 641.368 cv
1779.76 667.548 1799.94 681.338 1799.94 681.338 cv
1799.94 681.338 1789.62 688.778 1764.28 684.166 cv
1756.54 682.756 1749.37 677.842 1743.13 671.705 cv
1754.41 687.86 1768.99 699.036 1768.99 699.036 cv
1738.29 687.431 1723.39 646.954 1721.88 642.668 cv
1718.5 646.174 1711.88 653.736 1710.21 660.803 cv
1707.93 670.407 1707.99 689.837 1702.31 689.583 cv
1702.31 689.583 1687.98 661.048 1700.51 643.428 cv
cp
.0723525 .0723525 .236274 rgb
f
1715.06 773.246 mo
1715.06 773.246 1811.63 749.8 1853.62 784.433 cv
1832.64 1077.1 li
1643.77 1031.47 li
1643.77 1031.47 1649.08 1012.96 1685.3 963.709 cv
1721.52 914.464 1705.76 842.23 1715.06 773.246 cv
cp
.991764 .700784 .695294 rgb
f
1771.36 1044.52 mo
1771.36 1044.52 1771.25 1045.52 1771.05 1047.41 cv
1770.96 1048.22 1770.85 1049.2 1770.73 1050.35 cv
1769.92 1057.93 1768.38 1072.49 1766.4 1091.41 cv
1761.22 1141.05 1753.08 1220.77 1747.54 1283.7 cv
1743.2 1332.9 1740.45 1371.83 1741.94 1378.08 cv
1746.41 1396.9 1741.94 1621.81 1741.94 1621.81 cv
1725.89 1629.51 1701.55 1621.81 1701.55 1621.81 cv
1701.55 1621.81 1658.79 1419.13 1664.77 1390.96 cv
1670.76 1362.79 1660.77 1338.75 1660.77 1338.75 cv
1627.57 1184.13 1631.21 1098.44 1637.8 1057.42 cv
1639.72 1045.49 1641.89 1037.34 1643.48 1032.37 cv
1644.82 1028.15 1645.75 1026.21 1645.75 1026.21 cv
1718.99 1006.51 1771.36 1044.52 1771.36 1044.52 cv
cp
.0718428 .0566274 .34953 rgb
f
1832.64 1077.1 mo
1810.12 1086.56 1787.67 1090.7 1766.4 1091.41 cv
1746.96 1092.06 1728.51 1089.86 1711.89 1086.24 cv
1675.67 1078.36 1648.09 1063.78 1637.8 1057.42 cv
1639.72 1045.49 1641.89 1037.34 1643.48 1032.37 cv
1665.78 1016.5 1720.9 1031.69 1765.94 1048.53 cv
1767.54 1049.13 1769.14 1049.74 1770.73 1050.35 cv
1805.22 1063.54 1832.64 1077.1 1832.64 1077.1 cv
cp
.0528231 .0528231 .220196 rgb
f
1866.64 867.908 mo
1861.98 903.117 1843.33 946.202 1836.67 969.395 cv
1836.67 969.395 1847.8 1049.91 1837.17 1072.02 cv
1835.97 1074.54 1834.47 1076.3 1832.64 1077.1 cv
1793.26 1094.25 1639.89 1077.59 1633.42 1028.12 cv
1631.06 1010.15 1691.83 946.912 1695.37 939.241 cv
1696.85 936.068 1698.41 925.78 1691.29 904.46 cv
1681.19 935.597 1662.53 971.55 1643.77 977.682 cv
1623.15 984.429 1541.63 923.676 1541.63 923.676 cv
1541.63 923.676 1541.16 916.296 1551.46 909.316 cv
1558.09 904.828 1573.31 903.314 1573.31 903.314 cv
1625.44 926.644 li
1631.99 915.449 1648.29 838.003 1666.49 803.043 cv
1680.17 776.763 1716.7 772.956 1716.7 772.956 cv
1716.7 772.956 1731.91 797.073 1768.68 793.652 cv
1805.45 790.232 1812.18 767.722 1812.18 767.722 cv
1812.18 767.722 1844.79 772.058 1854.84 780.165 cv
1856.58 781.571 1872.76 821.78 1866.64 867.908 cv
cp
.980392 .447059 .411765 rgb
f
1836.67 969.395 mo
1836.67 969.395 1847.8 1049.91 1837.17 1072.02 cv
1808.48 1057.62 1771.08 1026.53 1782.47 977.956 cv
1799 907.385 1866.64 867.908 1866.64 867.908 cv
1861.98 903.117 1843.33 946.202 1836.67 969.395 cv
cp
.929412 .411765 .4 rgb
f
1812.18 915.273 mo
1812.18 915.273 1771.33 921.192 1768.08 924.24 cv
1764.82 927.288 1753.55 945.004 1754.94 951.167 cv
1756.33 957.328 1756.18 963.68 1758.68 963.243 cv
1761.18 962.805 1769.34 947.145 1772.42 946.426 cv
1775.5 945.707 1778.04 943.598 1778.42 944.973 cv
1778.79 946.348 1772.15 952.935 1772.48 954.809 cv
1772.81 956.682 1778.04 954.488 1780.39 950.853 cv
1782.73 947.217 1788.6 945.418 1789.48 943.154 cv
1790.36 940.89 1794.41 933.391 1799.91 933.735 cv
1805.4 934.078 1812.18 915.273 1812.18 915.273 cv
cp
.991764 .700784 .695294 rgb
f
1851.92 913.665 mo
1812.18 915.273 li
1798.58 933.808 li
1852.63 935.615 li
1851.92 913.665 li
cp
f
1812.18 767.722 mo
1812.18 767.722 1859.54 773.341 1872.59 793.652 cv
1889.08 819.334 1947.34 904.502 1946.08 930.276 cv
1946.08 930.276 1909.79 944.735 1812.22 936.984 cv
1812.22 936.984 1810.44 922.225 1830.97 910.387 cv
1830.97 910.387 1883.35 903.213 1889.12 898.128 cv
1850.23 856.8 li
1812.18 767.722 li
cp
.980392 .447059 .411765 rgb
f
1519.77 825.827 mo
1552.16 822.733 li
1554.75 822.486 1557.21 823.96 1558.21 826.371 cv
1582.66 885.228 li
1584.2 888.921 1581.72 893.046 1577.74 893.426 cv
1544.04 896.646 li
1541.4 896.897 1538.91 895.369 1537.94 892.898 cv
1514.8 833.917 li
1513.36 830.238 1515.84 826.202 1519.77 825.827 cv
cp
.0718428 .0566274 .34953 rgb
f
1516.83 887.51 mo
1516.83 887.51 1508.27 872.758 1508.92 869.123 cv
1509.56 865.488 1518.41 848.634 1522.96 846.959 cv
1531.08 843.966 1542.48 842.113 1539.35 850.666 cv
1537.28 856.311 1529.08 864.491 1530.51 867.057 cv
1531.93 869.622 1531.39 878.645 1531.39 878.645 cv
1516.83 887.51 li
cp
.991764 .700784 .695294 rgb
f
2807.61 1523.66 mo
2796.01 1598.03 2720.12 1645.39 2642.28 1645.39 cv
2488.1 1645.39 li
2500.16 1211.93 li
2500.16 1211.93 2647.26 1164.71 2684.21 1209.63 cv
2716.58 1248.97 2804.35 1404.73 2808.97 1496.92 cv
2809.43 1506.18 2808.95 1515.1 2807.61 1523.66 cv
cp
.866667 .909804 .992157 rgb
f
2398.34 1257.83 mo
2398.34 1257.83 2606.32 1151.67 2645.72 1221.02 cv
2666.64 1257.84 2724.2 1404.73 2728.45 1496.92 cv
2732.58 1586.49 2654.97 1645.39 2575.14 1645.39 cv
2433.36 1645.39 li
2398.34 1257.83 li
cp
.211765 .384314 .756863 rgb
f
2437.45 1316.71 mo
2435.7 1325.73 2418.86 1334.1 2393.87 1341.51 cv
2389.46 1342.82 2384.81 1344.09 2379.94 1345.34 cv
2294.89 1367.06 2144.25 1379.19 2129.89 1372.78 cv
2110.04 1363.93 1988.27 931.252 1988.27 931.252 cv
1988.27 931.252 2104.51 926.883 2196.83 924.754 cv
2228.41 924.035 2257.19 923.574 2277.56 923.634 cv
2280.04 923.643 2282.38 923.804 2284.57 924.121 cv
2293.38 925.378 2299.92 929.056 2305.11 934.631 cv
2319.97 950.606 2323.66 982.154 2337.42 1017.03 cv
2351.02 1051.51 2367.72 1094.54 2383.56 1137.25 cv
2387.64 1148.26 2391.67 1159.24 2395.57 1170.06 cv
2396.67 1173.11 2397.76 1176.15 2398.85 1179.17 cv
2422.25 1244.67 2440.28 1302.09 2437.45 1316.71 cv
cp
.745098 .823529 .980392 rgb
f
2807.61 1523.66 mo
2796.01 1598.03 2720.12 1645.39 2642.28 1645.39 cv
2566.65 1645.39 li
2617.08 1611.21 2662.68 1505.87 2807.61 1523.66 cv
cp
f
2398.85 1179.17 mo
2394.98 1178.53 2389.99 1177.71 2384.34 1176.75 cv
2383.15 1175.55 2382.23 1174.33 2381.67 1173.12 cv
2379.4 1168.12 2380.95 1153.74 2383.56 1137.25 cv
2367.72 1094.54 2351.02 1051.51 2337.42 1017.03 cv
2323.66 982.154 2319.97 950.606 2305.11 934.631 cv
2299.92 929.056 2293.38 925.378 2284.57 924.121 cv
2272.29 924.292 2259.34 924.506 2245.97 924.754 cv
2241.22 934.17 2233.04 943.054 2218.9 950.494 cv
2155.83 983.694 2202.62 1052.11 2202.62 1052.11 cv
2203.07 1052.42 2227.65 1101.27 2227.65 1101.27 cv
2227.57 1097.85 2230.88 1091.75 2236.55 1083.97 cv
2240.73 1113.18 2247.54 1143 2255.67 1164.35 cv
2251.21 1186.9 2239.78 1220.49 2233.65 1246.18 cv
2228.75 1266.67 2227.24 1282.11 2235.33 1282.88 cv
2236.24 1282.96 2237.25 1282.95 2238.33 1282.88 cv
2237.83 1290.02 2239.22 1297.54 2243.26 1305.34 cv
2259.06 1335.9 2335.1 1341.4 2393.87 1341.51 cv
2418.86 1334.1 2435.7 1325.73 2437.45 1316.71 cv
2440.28 1302.09 2422.25 1244.67 2398.85 1179.17 cv
cp
.576471 .701961 .956863 rgb
f
2686.21 1578.79 mo
2656.45 1620.14 2610.8 1646.64 2559.95 1645.82 cv
2341.34 1645.93 li
2236.61 1645.98 li
2354.44 1257.89 li
2354.44 1257.89 2652.7 1228.21 2689.47 1267.78 cv
2706.55 1286.15 2716.14 1369.34 2721.51 1453.2 cv
2724.54 1500.49 2710.78 1544.69 2686.21 1578.79 cv
cp
.314236 .464353 .788471 rgb
f
2686.21 1578.79 mo
2656.45 1620.14 2610.8 1646.64 2559.95 1645.82 cv
2341.34 1645.93 li
2367.07 1624.34 2447.97 1563.06 2534.59 1565.96 cv
2600.25 1568.16 2652.39 1567.22 2686.21 1578.79 cv
cp
.211765 .384314 .756863 rgb
f
2417.46 986.252 mo
2417.46 986.252 2435.62 1013.13 2445.98 1069.63 cv
2455.05 1119.12 2463.01 1137.39 2476.11 1147.53 cv
2489.21 1157.68 2562.21 1187.64 2562.21 1187.64 cv
2556.76 1200.43 li
2556.76 1200.43 2449.76 1185.86 2437.74 1167.98 cv
2425.72 1150.09 2379.9 1044.44 2383.46 1020.1 cv
2387.01 995.771 2417.46 986.252 2417.46 986.252 cv
cp
.989764 .628118 .621294 rgb
f
2679.47 1576.51 mo
2678.51 1586.94 2693.04 1589.48 2709.86 1590.32 cv
2726.69 1591.16 2721.61 1594.6 2744.66 1598.78 cv
2767.72 1602.96 2776.96 1596.64 2778.63 1593.53 cv
2780.12 1590.76 2769.4 1586.44 2757.97 1581.56 cv
2756.54 1580.95 2755.1 1580.32 2753.66 1579.69 cv
2740.8 1574.03 2733.58 1562.5 2723.56 1551.81 cv
2714.06 1541.68 2705.04 1509.26 2705.04 1509.26 cv
2673.71 1502.56 li
2673.71 1502.56 2682.51 1531.75 2685.56 1544.21 cv
2687.36 1551.54 2684.71 1559.73 2682.35 1565.96 cv
2681.09 1569.36 2679.81 1572.83 2679.47 1576.51 cv
cp
.991764 .700784 .695294 rgb
f
2709.86 1590.32 mo
2726.69 1591.16 2721.61 1594.6 2744.66 1598.78 cv
2767.72 1602.96 2776.96 1596.64 2778.63 1593.53 cv
2780.12 1590.76 2769.4 1586.44 2757.97 1581.56 cv
2757.79 1581.75 li
2757.79 1581.75 2741.58 1587.26 2722.87 1582.17 cv
2707.61 1578.03 2692.86 1568.91 2682.35 1565.96 cv
2681.09 1569.36 2679.81 1572.83 2679.47 1576.51 cv
2678.51 1586.94 2693.04 1589.48 2709.86 1590.32 cv
cp
.692942 .322353 .322353 rgb
f
2367.43 1204.92 mo
2367.43 1204.92 2575.66 1189.25 2614.86 1213.99 cv
2654.06 1238.73 2716.93 1526.9 2716.93 1526.9 cv
2716.93 1526.9 2713.05 1530.01 2704.38 1530.95 cv
2696.32 1531.83 2678.57 1527.09 2678.57 1527.09 cv
2678.57 1527.09 2588.22 1398.15 2581.85 1365.67 cv
2575.49 1333.18 2577.04 1304.2 2562.55 1303.42 cv
2548.06 1302.65 2367.41 1325.38 2340.08 1277.24 cv
2312.75 1229.1 2335.34 1181.45 2335.34 1181.45 cv
2367.43 1204.92 li
cp
.023529 .023529 .196078 rgb
f
2599.8 1609.95 mo
2598.83 1620.39 2613.36 1622.92 2630.19 1623.76 cv
2647.01 1624.6 2641.93 1628.05 2664.99 1632.22 cv
2688.05 1636.4 2697.29 1630.09 2698.96 1626.97 cv
2700.44 1624.21 2689.72 1619.89 2678.3 1615 cv
2676.86 1614.39 2675.42 1613.76 2673.98 1613.13 cv
2661.12 1607.48 2653.91 1595.95 2643.88 1585.25 cv
2634.38 1575.13 2625.37 1542.7 2625.37 1542.7 cv
2594.03 1536.01 li
2594.03 1536.01 2602.83 1565.19 2605.89 1577.65 cv
2607.68 1584.98 2605.03 1593.17 2602.68 1599.41 cv
2601.41 1602.8 2600.13 1606.27 2599.8 1609.95 cv
cp
.991764 .700784 .695294 rgb
f
2630.19 1623.76 mo
2647.01 1624.6 2641.93 1628.05 2664.99 1632.22 cv
2688.05 1636.4 2697.29 1630.09 2698.96 1626.97 cv
2700.44 1624.21 2689.72 1619.89 2678.3 1615 cv
2678.12 1615.2 li
2678.12 1615.2 2661.9 1620.7 2643.19 1615.61 cv
2627.94 1611.47 2613.19 1602.35 2602.68 1599.41 cv
2601.41 1602.8 2600.13 1606.27 2599.8 1609.95 cv
2598.83 1620.39 2613.36 1622.92 2630.19 1623.76 cv
cp
.692942 .322353 .322353 rgb
f
2326.65 1217.83 mo
2326.65 1217.83 2511.63 1226.58 2549.83 1252.83 cv
2588.04 1279.08 2639.65 1569.48 2639.65 1569.48 cv
2639.65 1569.48 2635.65 1572.43 2626.95 1573.03 cv
2618.86 1573.59 2601.31 1568.17 2601.31 1568.17 cv
2601.31 1568.17 2516.04 1435.81 2510.95 1403.1 cv
2505.85 1370.4 2508.53 1341.5 2494.08 1340.15 cv
2479.63 1338.82 2298.23 1354.5 2272.8 1305.34 cv
2247.37 1256.17 2326.65 1217.83 2326.65 1217.83 cv
cp
.043137 .027451 .329412 rgb
f
2392.56 810.784 mo
2384.36 805.365 2374.17 804.154 2366.99 804.101 cv
2368.96 802.322 2372.62 801.872 2372.62 801.872 cv
2368.23 800.917 2358.04 804.655 2358.04 804.655 cv
2297.94 776.774 2282.19 866.953 2282.08 888.141 cv
2281.96 909.326 2280.5 933.625 2248.44 950.496 cv
2185.37 983.692 2232.16 1052.11 2232.16 1052.11 cv
2232.62 1052.42 2257.2 1101.27 2257.2 1101.27 cv
2256.78 1084.11 2341.45 999.375 2384.3 975.162 cv
2395.27 961.117 2400.55 935.366 2400.96 933.339 cv
2397.86 953.829 2393.56 965.152 2389.98 971.451 cv
2426.87 941.776 2414.32 825.141 2392.56 810.784 cv
cp
.658824 .247059 .247059 rgb
f
2318.88 955.292 mo
2318.88 955.292 2335.21 956 2352.43 957.636 cv
2364.14 958.748 2376.63 960.037 2383.22 962.794 cv
2399.52 969.609 2397.81 998.472 2363.61 993.126 cv
2329.4 987.781 2316.48 963.851 2318.88 955.292 cv
cp
.991764 .700784 .695294 rgb
f
2381.78 976.341 mo
2381.98 976.447 2386.66 1001.17 2364.26 1000.18 cv
2349.56 999.533 2317.84 981.741 2320.64 969.151 cv
2321.98 963.167 2333.09 947.64 2335.32 912.201 cv
2338 912.917 li
2383 924.988 li
2383 924.988 2381.01 939.271 2380.08 952.791 cv
2379.29 964.142 2379.26 974.955 2381.78 976.341 cv
cp
f
2383 924.988 mo
2383 924.988 2381.01 939.271 2380.08 952.791 cv
2354.6 950.37 2342.67 926.189 2338 912.917 cv
2383 924.988 li
cp
.989764 .628118 .621294 rgb
f
2333.62 907.636 mo
2333.62 907.636 2321.65 885.612 2319.65 867.329 cv
2318.22 854.275 2327.97 806.893 2375.57 816.984 cv
2375.57 816.984 2389.44 819.291 2401.96 829.026 cv
2411.93 836.768 2425.97 852.985 2406.35 893.59 cv
2401.04 907.395 li
2333.62 907.636 li
cp
.658824 .247059 .247059 rgb
f
2390.67 938.358 mo
2390.67 938.358 2330.22 935.33 2332.69 897.713 cv
2335.16 860.098 2329.01 834.373 2367.71 834.718 cv
2406.42 835.061 2412.96 849.906 2415.2 862.662 cv
2417.43 875.417 2406.46 938.178 2390.67 938.358 cv
cp
.991764 .700784 .695294 rgb
f
2395.28 835.63 mo
2395.28 835.63 2375.8 878.654 2349.99 883.487 cv
2324.19 888.32 2313.63 880.789 2313.63 880.789 cv
2313.63 880.789 2334.13 866.625 2339.97 839.907 cv
2339.97 839.907 2384.21 813.794 2395.28 835.63 cv
cp
.658824 .247059 .247059 rgb
f
2390.94 838.938 mo
2390.94 838.938 2402.63 849.613 2405 859.393 cv
2407.37 869.171 2407.41 888.979 2413.21 888.691 cv
2413.21 888.691 2427.66 859.529 2414.79 841.629 cv
2401.15 822.648 2390.94 838.938 2390.94 838.938 cv
cp
f
2451.16 1208.07 mo
2446.27 1213.92 2430.99 1215.71 2414.67 1218.4 cv
2401.82 1220.52 2388.33 1223.18 2378.73 1228.81 cv
2356.94 1241.61 2285.75 1284.85 2264.88 1282.88 cv
2256.79 1282.12 2258.3 1266.67 2263.2 1246.18 cv
2270.92 1213.82 2287.06 1168.88 2287.06 1149.34 cv
2287.06 1138.68 2290.61 1113.44 2295.35 1084.58 cv
2295.73 1082.26 2296.13 1079.92 2296.52 1077.55 cv
2305.89 1021.45 2318.88 955.297 2318.88 955.297 cv
2318.88 955.297 2333.35 986.888 2361.57 986.888 cv
2389.77 986.888 2383.22 962.796 2383.22 962.796 cv
2383.22 962.796 2408.96 965.824 2415.04 972.375 cv
2421.13 978.925 2436.55 1007.24 2439.61 1014.96 cv
2439.61 1014.96 2440.24 1024.79 2415.91 1029.47 cv
2415.91 1029.47 2421.83 1056.14 2422.53 1073.92 cv
2423.05 1087.06 2413.57 1128.17 2410.84 1153.74 cv
2409.88 1162.79 2409.75 1169.9 2411.22 1173.12 cv
2413.1 1177.25 2419.19 1181.37 2426.12 1185.4 cv
2439.87 1193.41 2456.96 1201.11 2451.16 1208.07 cv
cp
.043137 .027451 .329412 rgb
f
2426.12 1185.4 mo
2441.73 1212.03 2383.77 1220.03 2374.17 1225.67 cv
2352.38 1238.46 2285.75 1284.85 2264.88 1282.88 cv
2256.79 1282.12 2258.3 1266.67 2263.2 1246.18 cv
2270.92 1213.82 2287.06 1168.88 2287.06 1149.34 cv
2287.06 1138.68 2290.61 1113.44 2295.35 1084.58 cv
2320.47 1060.47 li
2320.47 1060.47 2347.38 1130.03 2373.04 1141.43 cv
2386.48 1147.4 2400.52 1151.34 2410.84 1153.74 cv
2409.88 1162.79 2409.75 1169.9 2411.22 1173.12 cv
2413.1 1177.25 2419.19 1181.37 2426.12 1185.4 cv
cp
.023529 .023529 .196078 rgb
f
2311.16 976.118 mo
2311.16 976.118 2289.68 963.076 2268.92 987.816 cv
2248.15 1012.56 2283.67 1189.41 2314.44 1198.49 cv
2348.62 1208.58 2447.34 1196.88 2447.34 1196.88 cv
2445.44 1181.45 li
2445.44 1181.45 2340.34 1161.3 2335.97 1155.68 cv
2331.61 1150.07 2322.08 978.97 2311.16 976.118 cv
cp
.991764 .700784 .695294 rgb
f
2318.88 955.292 mo
2318.88 955.292 2274.77 959.271 2261.96 973.777 cv
2249.16 988.284 2245.41 1027.59 2245.41 1027.59 cv
2245.41 1027.59 2284.25 1058.94 2331.05 1046.78 cv
2318.88 955.292 li
cp
.043137 .027451 .329412 rgb
f
2515.9 1212.03 mo
2457.65 1212.03 li
2457.65 1205.14 li
2515.9 1205.14 li
2515.9 1212.03 li
cp
.619608 .2 .180392 rgb
f
2503.53 1211.08 mo
2504.1 1208.81 2557.08 1125.61 2557.08 1125.61 cv
2674.97 1125.61 li
2615.84 1208.85 li
2503.53 1211.08 li
cp
f
2508.49 1212.03 mo
2509.06 1209.75 2562.21 1125.61 2562.21 1125.61 cv
2674.97 1125.61 li
2618.71 1212.03 li
2508.49 1212.03 li
cp
.658824 .247059 .247059 rgb
f
2607.89 1169.1 mo
2606.73 1172.47 2603.06 1175.2 2599.68 1175.2 cv
2596.31 1175.2 2594.52 1172.47 2595.68 1169.1 cv
2596.84 1165.73 2600.52 1162.99 2603.89 1162.99 cv
2607.26 1162.99 2609.05 1165.73 2607.89 1169.1 cv
cp
.619608 .2 .180392 rgb
f
2436.86 1180.53 mo
2436.86 1180.53 2471.08 1173.91 2474.95 1175.57 cv
2478.81 1177.22 2500.33 1196.54 2498.13 1200.4 cv
2495.92 1204.27 2487.09 1207.03 2477.15 1203.71 cv
2467.22 1200.4 2445.69 1198.75 2441.83 1193.78 cv
2437.97 1188.81 2436.86 1180.53 2436.86 1180.53 cv
cp
.991764 .700784 .695294 rgb
f
2505.05 1527.55 mo
2492.55 1599.68 2423.95 1645.39 2353.62 1645.39 cv
2211.84 1645.39 li
2222.93 1211.93 li
2222.93 1211.93 2358.21 1164.71 2392.18 1209.63 cv
2421.95 1248.97 2502.67 1404.73 2506.92 1496.92 cv
2507.41 1507.59 2506.75 1517.82 2505.05 1527.55 cv
cp
.866667 .909804 .992157 rgb
f
2505.05 1527.55 mo
2492.55 1599.68 2423.95 1645.39 2353.62 1645.39 cv
2240.16 1645.39 li
2293.27 1609.4 2364.78 1509.94 2505.05 1527.55 cv
cp
.745098 .823529 .980392 rgb
f
2285.26 1645.08 mo
2284.2 1645.15 2283.14 1645.22 2282.08 1645.28 cv
2279.84 1645.4 2277.59 1645.48 2275.33 1645.51 cv
2274.58 1645.52 2273.83 1645.53 2273.08 1645.53 cv
2131.3 1645.53 li
2131.29 1645.46 li
2128.59 1645.5 2125.86 1645.53 2123.1 1645.56 cv
2108.5 1645.74 2093.26 1645.91 2079.11 1646.03 cv
2076.74 1646.06 2074.41 1646.08 2072.11 1646.09 cv
2071.25 1646.1 2070.4 1646.1 2069.56 1646.11 cv
2055.59 1646.21 2043.23 1646.25 2034.41 1646.19 cv
2022.02 1646.1 2010.34 1645.23 1999.35 1643.49 cv
1985.18 1641.25 1972.17 1637.57 1960.28 1632.31 cv
1955.99 1630.42 1951.85 1628.31 1947.85 1626 cv
1942.47 1622.9 1937.34 1619.4 1932.47 1615.51 cv
1919.89 1605.46 1909.01 1592.75 1899.76 1577.1 cv
1893.32 1566.22 1887.66 1553.9 1882.77 1540.07 cv
1876.61 1522.71 1871.66 1502.97 1867.85 1480.64 cv
1862.41 1448.77 1859.29 1411.65 1858.35 1368.74 cv
1857.98 1351.45 1857.95 1333.24 1858.27 1314.04 cv
1858.77 1283.37 1860.16 1250.21 1862.37 1214.42 cv
1865.49 1164.16 1870.25 1108.71 1876.54 1047.69 cv
1882.28 991.946 1888.9 952.983 1898.53 944.106 cv
1912.73 931.014 1942.36 925.746 1962.97 923.634 cv
1962.98 923.634 1962.98 923.634 1962.99 923.634 cv
1975.78 922.325 1985.08 922.223 1985.08 922.223 cv
2010.25 922.223 2032.63 940.301 2040.71 967.163 cv
2057.17 1021.86 2086.54 1119.65 2117.12 1221.94 cv
2117.27 1222.46 2117.42 1222.97 2117.58 1223.48 cv
2119.33 1229.36 2121.09 1235.25 2122.86 1241.15 cv
2123.12 1242.05 2123.39 1242.95 2123.67 1243.84 cv
2125.39 1243.07 2127.17 1242.27 2129.02 1241.46 cv
2129.08 1241.42 2129.14 1241.4 2129.21 1241.37 cv
2136.54 1238.12 2144.83 1234.57 2153.79 1230.94 cv
2153.8 1230.94 li
2158.44 1229.06 2163.25 1227.15 2168.21 1225.25 cv
2182.2 1219.89 2197.3 1214.59 2212.61 1210.02 cv
2219.4 1207.99 2226.24 1206.1 2233.04 1204.42 cv
2241.77 1202.26 2250.43 1200.43 2258.88 1199.07 cv
2259.17 1199.02 2259.41 1198.98 2259.61 1198.95 cv
2260.61 1198.78 2261.6 1198.64 2262.6 1198.49 cv
2299 1193.15 2330.59 1196.86 2343.66 1219.92 cv
2364.58 1256.84 2422.13 1404.17 2426.38 1496.62 cv
2430.32 1581.88 2360.6 1639.42 2285.26 1645.08 cv
cp
.314236 .464353 .788471 rgb
f
2057.82 1261.17 mo
2057.82 1261.17 1985.05 964.7 1979.8 939.783 cv
1977.46 928.677 1970.25 924.664 1962.98 923.632 cv
1975.77 922.324 1985.08 922.225 1985.08 922.225 cv
2010.26 922.225 2032.63 940.246 2040.71 967.03 cv
2058.34 1025.45 2090.79 1133.18 2123.67 1242.91 cv
2122 1242.86 2057.82 1261.17 2057.82 1261.17 cv
cp
.866667 .909804 .992157 rgb
f
2325.95 1403.73 mo
2306.47 1371.54 2322.83 1365.5 2319.84 1293.39 cv
2316.86 1221.29 2283.28 1227.25 2269.35 1213.3 cv
2266.8 1210.74 2264.64 1205.51 2262.6 1198.49 cv
2261.6 1198.64 2260.61 1198.78 2259.61 1198.95 cv
2259.41 1198.98 2259.17 1199.02 2258.88 1199.07 cv
2250.43 1200.43 2241.77 1202.26 2233.04 1204.42 cv
2226.24 1206.1 2219.4 1207.99 2212.61 1210.02 cv
2197.3 1214.59 2182.2 1219.89 2168.21 1225.25 cv
2163.25 1227.15 2158.44 1229.06 2153.8 1230.94 cv
2141.75 1306.58 2123.1 1645.56 2123.1 1645.56 cv
2123.26 1645.73 2123.4 1645.88 2123.56 1646.03 cv
2138.78 1645.9 2155.23 1645.72 2170.88 1645.53 cv
2173.12 1645.5 2175.33 1645.47 2177.53 1645.44 cv
2177.54 1645.51 li
2284.53 1645.51 li
2284.68 1645.44 2284.82 1645.34 2284.97 1645.26 cv
2285.06 1645.2 2285.16 1645.14 2285.26 1645.08 cv
2313.99 1627.25 2307.58 1591.5 2300.81 1569.08 cv
2298.09 1545.11 2287.5 1517.04 2278.84 1490.94 cv
2281.53 1482.99 2285.3 1478.45 2301.49 1472.47 cv
2319.47 1465.84 2324.19 1437.54 2324.19 1437.54 cv
2329 1450.19 2318.01 1467.67 2317.72 1468.13 cv
2318.34 1467.39 2345.21 1435.54 2325.95 1403.73 cv
cp
.211765 .384314 .756863 rgb
f
2086.93 1257.61 mo
2086.93 1257.61 1978.99 1304.63 1959.4 1303.78 cv
1939.8 1302.92 1819.07 1267 1819.07 1267 cv
1822.14 1287.77 li
1822.14 1287.77 1915.32 1341.36 1947.89 1344.4 cv
1979.96 1347.39 2089.62 1315.62 2100.2 1308.91 cv
2110.79 1302.2 2117.69 1264.4 2086.93 1257.61 cv
cp
.98847 .581098 .573412 rgb
f
2103.14 1084.61 mo
2103.14 1084.61 2142.96 1077.04 2162.79 1091.53 cv
2198.72 1117.76 2200.65 1208.21 2214.11 1221.68 cv
2227.58 1235.15 2260.03 1229.4 2262.92 1299.12 cv
2265.81 1368.83 2250 1374.66 2268.83 1405.78 cv
2287.66 1436.9 2260.86 1468.05 2260.86 1468.05 cv
2260.86 1468.05 2271.84 1450.87 2267.13 1438.47 cv
2267.13 1438.47 2262.57 1465.84 2245.18 1472.25 cv
2227.79 1478.66 2225.22 1483.37 2222.45 1492.77 cv
2222.45 1492.77 2074.13 1416.78 2073.97 1362.87 cv
2073.81 1308.97 2044.78 1255.57 2059.04 1232.21 cv
2059.04 1232.21 2052.69 1242.2 2051.91 1253.32 cv
2051.91 1253.32 2043.36 1236.93 2058.18 1221.68 cv
2073 1206.42 2040.79 1174.86 2045.56 1138.3 cv
2048.84 1113.2 2066.45 1085.7 2103.14 1084.61 cv
cp
.0528231 .0528231 .220196 rgb
f
2073.81 1308.97 mo
2083.29 1315.54 2095.17 1320.96 2110.1 1324.41 cv
2166.03 1337.33 2187.47 1290.06 2195.52 1257.61 cv
2187.89 1253.24 2180.71 1252.28 2176.57 1251.78 cv
2172.52 1251.31 2168.27 1250.99 2164.75 1250.82 cv
2158.47 1246 2149.11 1226.32 2147.04 1195.75 cv
2144.41 1196.45 li
2100.33 1208.52 li
2100.33 1208.52 2102.35 1222.53 2103.34 1235.77 cv
2104.1 1246.14 2104.22 1256.04 2102.26 1258.47 cv
2098.82 1259.21 2096.75 1259.7 2096.75 1259.7 cv
2096.75 1259.7 2096.75 1259.72 2096.73 1259.74 cv
2096.14 1260.71 2083.35 1281.75 2073.81 1308.97 cv
cp
.991764 .700784 .695294 rgb
f
2100.32 1208.53 mo
2100.32 1208.53 2102.35 1222.53 2103.33 1235.78 cv
2128.31 1233.28 2139.9 1209.5 2144.41 1196.46 cv
2100.32 1208.53 li
cp
.98847 .581098 .573412 rgb
f
2092.87 1221.68 mo
2092.87 1221.68 2152.15 1218.41 2149.54 1181.52 cv
2146.94 1144.64 2152.83 1119.37 2114.87 1119.9 cv
2076.92 1120.43 2070.56 1135.03 2068.44 1147.55 cv
2066.31 1160.07 2077.38 1221.58 2092.87 1221.68 cv
cp
.991764 .700784 .695294 rgb
f
2068.73 1126.92 mo
2077.09 1115.16 2084.18 1117.1 2088.29 1120.16 cv
2119.38 1100.05 2142.12 1124.86 2142.12 1124.86 cv
2147.98 1151.04 2168.15 1164.83 2168.15 1164.83 cv
2168.15 1164.83 2157.84 1172.27 2132.5 1167.65 cv
2124.76 1166.24 2117.58 1161.33 2111.35 1155.19 cv
2122.63 1171.35 2137.2 1182.53 2137.2 1182.53 cv
2106.5 1170.92 2091.6 1130.44 2090.1 1126.16 cv
2086.72 1129.66 2080.1 1137.22 2078.42 1144.29 cv
2076.14 1153.9 2066.31 1168.91 2060.63 1168.66 cv
2060.63 1168.66 2056.2 1144.54 2068.73 1126.92 cv
cp
.0528231 .0528231 .220196 rgb
f
2212.4 1429.49 mo
2217.75 1402.12 2235.21 1292.79 2217.75 1257.6 cv
2211.49 1244.96 2186.89 1243.82 2159.9 1244.93 cv
2151.5 1250.35 2119.5 1270.84 2106.36 1268.29 cv
2106.22 1268.26 2105.96 1268.2 2105.62 1268.11 cv
2099.43 1266.56 2097.09 1262.22 2102.26 1258.47 cv
2102.27 1258.46 2088.89 1257.18 2072.29 1260.3 cv
2062.92 1262.07 2037.63 1275.15 2037.63 1275.15 cv
2037.63 1275.15 2050.36 1298.16 2069.14 1306.1 cv
2065.95 1334.67 2070.7 1347.27 2100.33 1413.24 cv
2125.37 1469.01 2096.95 1519.22 2096.95 1519.22 cv
2096.95 1519.22 2244.35 1637.73 2245.17 1577.39 cv
2245.79 1531.96 2205.56 1464.47 2212.4 1429.49 cv
cp
.658824 .247059 .247059 rgb
f
2089.64 1648.08 mo
2081.63 1647.18 2074.41 1642.79 2069.93 1636.08 cv
2069.22 1635.02 2068.46 1633.87 2067.65 1632.65 cv
2050.87 1607.25 2044.34 1529.46 2006.6 1446.6 cv
1997.41 1426.42 1964.41 1422.79 1955.42 1399.99 cv
1955.42 1399.99 1933.27 1326.07 1997.8 1323.88 cv
2062.34 1321.7 2170.63 1529.56 2172.34 1551.36 cv
2174 1572.48 2215.01 1662.23 2089.64 1648.08 cv
cp
.905882 .341176 .333333 rgb
f
1833.15 1646.38 mo
1925 1646.38 li
1925 1646.38 1928.43 1631.73 1922.41 1621.77 cv
1917.07 1612.95 1919.11 1607.92 1923.07 1600.62 cv
1918.91 1602.33 1913.52 1603.88 1907.6 1603.54 cv
1903.02 1603.27 1898.18 1601.2 1893.94 1598.73 cv
1889.98 1603.24 1873.06 1622.42 1867.77 1626.22 cv
1861.76 1630.54 1835 1629 1833.15 1646.38 cv
cp
.619608 .2 .180392 rgb
f
2202.72 1286.26 mo
2202.72 1286.26 2214.67 1395.03 2137.14 1417.82 cv
2059.62 1440.61 2037.61 1317.75 2100.2 1308.91 cv
2162.8 1300.07 2202.72 1286.26 2202.72 1286.26 cv
cp
f
1953.32 1345.25 mo
1947.78 1386.72 1926.19 1517.59 1888.09 1581.44 cv
1875.8 1602.03 1919.03 1613.57 1919.27 1613.5 cv
1925.06 1611.99 1934.72 1602.74 1939.18 1598.73 cv
1970.11 1570.86 2032.9 1491.92 2032.9 1428.64 cv
2032.9 1397.78 2033.44 1338.85 2011 1323.87 cv
1997.18 1314.64 1955.51 1328.79 1953.32 1345.25 cv
cp
.905882 .341176 .333333 rgb
f
2144.41 1646.38 mo
2144.41 1646.38 2141.01 1641.65 2135.07 1632.65 cv
2128.01 1621.95 2120.19 1600.9 2110.71 1573.91 cv
2100.75 1545.57 2088.93 1510.72 2074.16 1474.45 cv
2069.6 1463.25 2064.76 1451.92 2059.61 1440.61 cv
2050.42 1420.43 2025.13 1423.22 2016.13 1400.41 cv
2016.13 1400.41 1981.03 1321.35 2045.56 1319.17 cv
2110.09 1316.99 2232.72 1530.67 2239.77 1551.36 cv
2247.48 1574.02 2285.12 1668.09 2144.41 1646.38 cv
cp
.980392 .447059 .411765 rgb
f
1900.58 1646.38 mo
1992.43 1646.38 li
1992.43 1646.38 1995.86 1631.73 1989.83 1621.77 cv
1984.49 1612.95 1986.54 1607.92 1990.49 1600.62 cv
1986.33 1602.33 1980.95 1603.88 1975.02 1603.54 cv
1970.45 1603.27 1965.6 1601.2 1961.36 1598.73 cv
1957.41 1603.24 1940.48 1622.42 1935.19 1626.22 cv
1929.19 1630.54 1902.42 1629 1900.58 1646.38 cv
cp
.658824 .247059 .247059 rgb
f
2110.71 1573.91 mo
2100.75 1545.57 2088.93 1510.72 2074.16 1474.45 cv
2078.02 1446.97 2086.34 1422.93 2100.33 1413.24 cv
2100.33 1413.24 2134.27 1518.4 2110.71 1573.91 cv
cp
.929412 .411765 .4 rgb
f
2006.93 1342.31 mo
2001.4 1383.78 1993.61 1517.59 1955.51 1581.44 cv
1943.23 1602.03 1986.46 1613.57 1986.69 1613.5 cv
1992.49 1611.99 2002.15 1602.74 2006.6 1598.73 cv
2037.53 1570.86 2100.32 1491.92 2100.32 1428.64 cv
2100.32 1397.78 2064.11 1341.32 2041.67 1326.34 cv
2027.85 1317.12 2009.13 1325.85 2006.93 1342.31 cv
cp
.980392 .447059 .411765 rgb
f
1808.1 1213.57 mo
1902.17 1203.58 li
1904.91 1203.29 1907.5 1204.88 1908.48 1207.46 cv
1942.14 1295.89 li
1943.62 1299.77 1940.86 1303.95 1936.71 1304.12 cv
1843.37 1307.88 li
1840.84 1307.98 1838.51 1306.5 1837.53 1304.16 cv
1803.14 1221.95 li
1801.58 1218.2 1804.06 1214 1808.1 1213.57 cv
cp
.619608 .2 .180392 rgb
f
1799.93 1214.42 mo
1894 1204.43 li
1896.74 1204.14 1899.33 1205.73 1900.31 1208.31 cv
1933.97 1296.75 li
1935.44 1300.62 1932.68 1304.8 1928.54 1304.97 cv
1835.2 1308.74 li
1832.67 1308.84 1830.33 1307.35 1829.36 1305.01 cv
1794.97 1222.8 li
1793.41 1219.05 1795.89 1214.85 1799.93 1214.42 cv
cp
.658824 .247059 .247059 rgb
f
1852.07 1255.71 mo
1850.92 1252.56 1852.55 1250 1855.71 1250 cv
1858.86 1250 1862.35 1252.56 1863.5 1255.71 cv
1864.65 1258.87 1863.03 1261.43 1859.87 1261.43 cv
1856.71 1261.43 1853.22 1258.87 1852.07 1255.71 cv
cp
.619608 .2 .180392 rgb
f
1802.75 1222.78 mo
1802.18 1221.23 1802.98 1219.97 1804.53 1219.97 cv
1806.09 1219.97 1807.8 1221.23 1808.36 1222.78 cv
1808.93 1224.33 1808.13 1225.59 1806.58 1225.59 cv
1805.03 1225.59 1803.31 1224.33 1802.75 1222.78 cv
cp
f
2195.52 1257.61 mo
2195.52 1257.61 2065.15 1305.62 2045.56 1304.63 cv
2032.9 1304 1927.66 1267 1927.66 1267 cv
1918.21 1284.88 li
1918.21 1284.88 2020.64 1350.71 2048.8 1350.38 cv
2104.4 1349.74 2198.21 1315.62 2208.79 1308.91 cv
2219.38 1302.2 2226.28 1264.4 2195.52 1257.61 cv
cp
.991764 .700784 .695294 rgb
f
1927.66 1267 mo
1927.66 1267 1918.21 1252.46 1908.81 1252.04 cv
1899.4 1251.61 1883.15 1258.45 1877.59 1259.52 cv
1872.03 1260.59 1856.21 1265.72 1860.92 1273.42 cv
1865.62 1281.11 1887.43 1282.82 1896.83 1281.11 cv
1906.24 1279.4 1918.21 1284.88 1918.21 1284.88 cv
1927.66 1267 li
cp
f
1911.37 1252.49 mo
1911.37 1252.49 1896.41 1245.62 1892.13 1244.34 cv
1887.85 1243.06 1888.71 1244.36 1889.99 1248.41 cv
1891.28 1252.46 1898.97 1256.33 1898.97 1257.61 cv
1898.97 1258.88 1911.37 1252.49 1911.37 1252.49 cv
cp
f
1809.62 1259.31 mo
1809.62 1259.31 1819.06 1244.39 1822.14 1243.78 cv
1831.55 1241.92 1831.55 1254.31 1829.56 1262.3 cv
1827.42 1270.87 1820.17 1278.96 1818.17 1278.26 cv
1816.16 1277.55 1807.4 1267.19 1809.62 1259.31 cv
cp
f
1809.27 1262.3 mo
1809.27 1262.3 1806.25 1279.04 1822.14 1287.77 cv
1809.27 1262.3 li
cp
f
2081.77 1200.47 mo
2081.77 1200.47 2087.37 1198.25 2103.14 1199.53 cv
2103.14 1199.53 2102.3 1205.68 2090.67 1206.29 cv
2084.09 1206.63 2081.77 1200.47 2081.77 1200.47 cv
cp
1 1 1 rgb
f
2128.35 1281.28 mo
2128.35 1281.28 2140.01 1318.19 2180.05 1326.59 cv
2180.05 1326.59 2246.18 1306.22 2213.26 1261.17 cv
2213.26 1261.17 2180.7 1236.98 2128.35 1281.28 cv
cp
.658824 .247059 .247059 rgb
f
3517.11 1653.32 mo
908.9 1653.32 li
907.161 1653.32 905.737 1651.9 905.737 1650.16 cv
905.737 1649.55 li
905.737 1647.81 907.161 1646.38 908.9 1646.38 cv
3517.11 1646.38 li
3518.85 1646.38 3520.27 1647.81 3520.27 1649.55 cv
3520.27 1650.16 li
3520.27 1651.9 3518.85 1653.32 3517.11 1653.32 cv
cp
.0528231 .0528231 .220196 rgb
f
204.374 673.883 mo
254.911 673.883 li
254.911 685.382 li
190.238 685.382 li
190.238 578.741 li
204.374 578.741 li
204.374 673.883 li
cp
.0431373 .027451 .329412 rgb
f
278.861 646.637 mo
278.861 655.426 280.899 662.482 284.977 667.804 cv
289.053 673.126 294.509 675.787 301.346 675.787 cv
308.231 675.787 313.699 673.09 317.752 667.694 cv
321.805 662.299 323.832 654.743 323.832 645.026 cv
323.832 636.335 321.768 629.291 317.643 623.895 cv
313.516 618.5 308.035 615.802 301.2 615.802 cv
294.509 615.802 289.115 618.464 285.013 623.786 cv
280.912 629.107 278.861 636.725 278.861 646.637 cv
cp
265.238 645.026 mo
265.238 637.262 266.763 630.28 269.815 624.078 cv
272.866 617.878 277.114 613.092 282.56 609.723 cv
288.003 606.354 294.216 604.669 301.2 604.669 cv
311.99 604.669 320.719 608.405 327.384 615.875 cv
334.049 623.346 337.381 633.282 337.381 645.685 cv
337.381 646.637 li
337.381 654.353 335.904 661.273 332.95 667.401 cv
329.995 673.53 325.772 678.303 320.279 681.72 cv
314.786 685.138 308.475 686.847 301.346 686.847 cv
290.604 686.847 281.9 683.111 275.235 675.641 cv
268.57 668.17 265.238 658.282 265.238 645.978 cv
265.238 645.026 li
cp
f
392.679 618.292 mo
390.628 617.952 388.406 617.78 386.014 617.78 cv
377.126 617.78 371.097 621.564 367.923 629.132 cv
367.923 685.382 li
354.374 685.382 li
354.374 606.134 li
367.557 606.134 li
367.777 615.29 li
372.219 608.21 378.518 604.669 386.673 604.669 cv
389.31 604.669 391.312 605.011 392.679 605.694 cv
392.679 618.292 li
cp
f
434.94 615.802 mo
429.471 615.802 424.88 617.792 421.17 621.771 cv
417.459 625.751 415.165 631.33 414.286 638.507 cv
453.983 638.507 li
453.983 637.482 li
453.591 630.597 451.736 625.263 448.417 621.478 cv
445.095 617.694 440.604 615.802 434.94 615.802 cv
cp
436.625 686.847 mo
425.882 686.847 417.142 683.319 410.404 676.263 cv
403.666 669.208 400.296 659.773 400.296 647.956 cv
400.296 645.465 li
400.296 637.604 401.798 630.585 404.801 624.407 cv
407.804 618.232 412.002 613.398 417.398 609.906 cv
422.793 606.415 428.641 604.669 434.94 604.669 cv
445.242 604.669 453.25 608.064 458.963 614.85 cv
464.676 621.637 467.533 631.355 467.533 644 cv
467.533 649.64 li
413.846 649.64 li
414.041 657.453 416.324 663.764 420.694 668.573 cv
425.063 673.383 430.619 675.787 437.357 675.787 cv
442.142 675.787 446.194 674.811 449.515 672.857 cv
452.835 670.906 455.741 668.317 458.231 665.094 cv
466.507 671.54 li
459.866 681.745 449.905 686.847 436.625 686.847 cv
cp
f
495.951 606.134 mo
496.317 614.923 li
502.127 608.087 509.964 604.669 519.828 604.669 cv
530.911 604.669 538.455 608.917 542.459 617.414 cv
545.096 613.605 548.526 610.528 552.75 608.185 cv
556.973 605.841 561.966 604.669 567.728 604.669 cv
585.11 604.669 593.949 613.874 594.242 632.282 cv
594.242 685.382 li
580.692 685.382 li
580.692 633.087 li
580.692 627.423 579.397 623.188 576.81 620.379 cv
574.221 617.573 569.876 616.168 563.773 616.168 cv
558.743 616.168 554.568 617.669 551.249 620.672 cv
547.927 623.675 545.999 627.716 545.462 632.794 cv
545.462 685.382 li
531.839 685.382 li
531.839 633.453 li
531.839 621.93 526.2 616.168 514.92 616.168 cv
506.033 616.168 499.954 619.953 496.683 627.521 cv
496.683 685.382 li
483.133 685.382 li
483.133 606.134 li
495.951 606.134 li
cp
f
208.329 865.382 mo
187.088 865.382 li
187.088 786.134 li
208.329 786.134 li
208.329 865.382 li
cp
185.843 765.626 mo
185.843 762.453 186.905 759.84 189.029 757.79 cv
191.153 755.739 194.046 754.713 197.708 754.713 cv
201.321 754.713 204.202 755.739 206.351 757.79 cv
208.499 759.84 209.574 762.453 209.574 765.626 cv
209.574 768.849 208.486 771.486 206.314 773.536 cv
204.141 775.587 201.272 776.613 197.708 776.613 cv
194.144 776.613 191.274 775.587 189.103 773.536 cv
186.929 771.486 185.843 768.849 185.843 765.626 cv
cp
f
275.931 824.953 mo
275.931 817.581 274.624 811.891 272.013 807.887 cv
269.4 803.884 265.604 801.881 260.624 801.881 cv
253.982 801.881 249.417 804.42 246.927 809.499 cv
246.927 841.944 li
249.515 847.17 254.129 849.782 260.77 849.782 cv
270.877 849.782 275.931 841.505 275.931 824.953 cv
cp
297.098 826.49 mo
297.098 838.698 294.326 848.476 288.785 855.824 cv
283.243 863.173 275.759 866.847 266.336 866.847 cv
258.328 866.847 251.858 864.064 246.927 858.498 cv
246.927 895.851 li
225.76 895.851 li
225.76 786.134 li
245.389 786.134 li
246.122 793.898 li
251.249 787.745 257.938 784.669 266.19 784.669 cv
275.955 784.669 283.548 788.284 288.968 795.509 cv
294.388 802.736 297.098 812.697 297.098 825.392 cv
297.098 826.49 li
cp
f
353.128 843.482 mo
353.128 840.895 351.847 838.857 349.283 837.366 cv
346.72 835.878 342.605 834.547 336.942 833.375 cv
318.093 829.42 308.67 821.412 308.67 809.352 cv
308.67 802.32 311.587 796.449 317.423 791.736 cv
323.257 787.026 330.887 784.669 340.311 784.669 cv
350.369 784.669 358.413 787.039 364.444 791.773 cv
370.474 796.51 373.49 802.662 373.49 810.231 cv
352.323 810.231 li
352.323 807.203 351.345 804.701 349.393 802.723 cv
347.439 800.745 344.387 799.757 340.238 799.757 cv
336.673 799.757 333.914 800.563 331.961 802.174 cv
330.008 803.786 329.032 805.836 329.032 808.327 cv
329.032 810.67 330.142 812.563 332.364 814.002 cv
334.585 815.444 338.333 816.689 343.607 817.737 cv
348.88 818.789 353.323 819.972 356.937 821.29 cv
368.118 825.392 373.709 832.497 373.709 842.604 cv
373.709 849.831 370.608 855.677 364.408 860.145 cv
358.206 864.612 350.199 866.847 340.384 866.847 cv
333.743 866.847 327.847 865.662 322.696 863.294 cv
317.544 860.927 313.504 857.68 310.575 853.553 cv
307.645 849.428 306.18 844.973 306.18 840.187 cv
326.249 840.187 li
326.443 843.948 327.834 846.828 330.423 848.83 cv
333.011 850.832 336.477 851.832 340.824 851.832 cv
344.876 851.832 347.939 851.063 350.016 849.524 cv
352.09 847.986 353.128 845.973 353.128 843.482 cv
cp
f
434.793 857.326 mo
429.568 863.673 422.342 866.847 413.114 866.847 cv
404.618 866.847 398.136 864.406 393.668 859.523 cv
389.2 854.641 386.917 847.486 386.82 838.063 cv
386.82 786.134 li
407.987 786.134 li
407.987 837.39 li
407.987 845.651 411.746 849.782 419.266 849.782 cv
426.444 849.782 431.375 847.289 434.061 842.301 cv
434.061 786.134 li
455.301 786.134 li
455.301 865.382 li
435.379 865.382 li
434.793 857.326 li
cp
f
491.117 786.134 mo
491.776 794.997 li
497.39 788.111 504.983 784.669 514.554 784.669 cv
524.759 784.669 531.766 788.698 535.575 796.754 cv
541.141 788.698 549.075 784.669 559.378 784.669 cv
567.972 784.669 574.368 787.172 578.568 792.176 cv
582.767 797.182 584.867 804.713 584.867 814.772 cv
584.867 865.382 li
563.626 865.382 li
563.626 814.845 li
563.626 810.353 562.748 807.069 560.99 804.994 cv
559.232 802.919 556.13 801.881 551.688 801.881 cv
545.34 801.881 540.945 804.91 538.504 810.963 cv
538.578 865.382 li
517.411 865.382 li
517.411 814.918 li
517.411 810.33 516.506 807.008 514.701 804.957 cv
512.894 802.907 509.817 801.881 505.472 801.881 cv
499.466 801.881 495.12 804.372 492.435 809.352 cv
492.435 865.382 li
471.268 865.382 li
471.268 786.134 li
491.117 786.134 li
cp
f
656.351 826.748 mo
656.351 834.182 657.644 839.879 660.233 843.839 cv
662.82 847.801 666.58 849.782 671.512 849.782 cv
678.055 849.782 682.669 847.019 685.355 841.493 cv
685.355 810.17 li
682.718 804.645 678.152 801.881 671.659 801.881 cv
661.453 801.881 656.351 810.17 656.351 826.748 cv
cp
635.184 825.172 mo
635.184 812.819 637.955 802.98 643.497 795.656 cv
649.038 788.332 656.619 784.669 666.239 784.669 cv
673.953 784.669 680.325 787.551 685.355 793.312 cv
685.355 752.882 li
706.595 752.882 li
706.595 865.382 li
687.479 865.382 li
686.454 856.959 li
681.18 863.551 674.393 866.847 666.092 866.847 cv
656.765 866.847 649.283 863.173 643.644 855.824 cv
638.004 848.476 635.184 838.258 635.184 825.172 cv
cp
f
740.873 826.528 mo
740.873 834.06 742.288 839.818 745.121 843.803 cv
747.952 847.79 752.005 849.782 757.279 849.782 cv
762.406 849.782 766.409 847.813 769.291 843.876 cv
772.171 839.94 773.612 833.644 773.612 824.987 cv
773.612 817.604 772.171 811.882 769.291 807.823 cv
766.409 803.765 762.356 801.735 757.132 801.735 cv
751.956 801.735 747.952 803.752 745.121 807.786 cv
742.288 811.822 740.873 818.069 740.873 826.528 cv
cp
719.706 825.026 mo
719.706 817.165 721.218 810.157 724.247 804.005 cv
727.273 797.853 731.631 793.092 737.32 789.723 cv
743.008 786.354 749.612 784.669 757.132 784.669 cv
767.826 784.669 776.553 787.94 783.316 794.484 cv
790.079 801.028 793.851 809.914 794.632 821.144 cv
794.779 826.564 li
794.779 838.722 791.384 848.476 784.598 855.824 cv
777.811 863.173 768.705 866.847 757.279 866.847 cv
745.853 866.847 736.734 863.185 729.923 855.861 cv
723.111 848.536 719.706 838.576 719.706 825.978 cv
719.706 825.026 li
cp
f
830.155 865.382 mo
808.915 865.382 li
808.915 752.882 li
830.155 752.882 li
830.155 865.382 li
cp
f
865.458 826.528 mo
865.458 834.06 866.873 839.818 869.706 843.803 cv
872.537 847.79 876.59 849.782 881.864 849.782 cv
886.991 849.782 890.994 847.813 893.875 843.876 cv
896.756 839.94 898.197 833.644 898.197 824.987 cv
898.197 817.604 896.756 811.882 893.875 807.823 cv
890.994 803.765 886.941 801.735 881.717 801.735 cv
876.541 801.735 872.537 803.752 869.706 807.786 cv
866.873 811.822 865.458 818.069 865.458 826.528 cv
cp
844.291 825.026 mo
844.291 817.165 845.803 810.157 848.832 804.005 cv
851.858 797.853 856.216 793.092 861.905 789.723 cv
867.593 786.354 874.197 784.669 881.717 784.669 cv
892.411 784.669 901.138 787.94 907.901 794.484 cv
914.664 801.028 918.436 809.914 919.217 821.144 cv
919.364 826.564 li
919.364 838.722 915.969 848.476 909.183 855.824 cv
902.396 863.173 893.29 866.847 881.864 866.847 cv
870.438 866.847 861.319 863.185 854.508 855.861 cv
847.696 848.536 844.291 838.576 844.291 825.978 cv
844.291 825.026 li
cp
f
976.932 805.982 mo
974.05 805.592 971.512 805.397 969.315 805.397 cv
961.306 805.397 956.058 808.107 953.568 813.527 cv
953.568 865.382 li
932.401 865.382 li
932.401 786.134 li
952.396 786.134 li
952.982 795.582 li
957.23 788.307 963.113 784.669 970.633 784.669 cv
972.977 784.669 975.174 784.988 977.225 785.622 cv
976.932 805.982 li
cp
f
192.171 1043.06 mo
208.343 1043.06 li
208.343 1046.74 li
187.648 1046.74 li
187.648 1012.62 li
192.171 1012.62 li
192.171 1043.06 li
cp
f
216.007 1034.34 mo
216.007 1037.15 216.66 1039.41 217.964 1041.12 cv
219.269 1042.82 221.015 1043.67 223.203 1043.67 cv
225.406 1043.67 227.156 1042.81 228.453 1041.08 cv
229.75 1039.35 230.398 1036.94 230.398 1033.83 cv
230.398 1031.04 229.738 1028.79 228.417 1027.06 cv
227.097 1025.34 225.343 1024.47 223.156 1024.47 cv
221.015 1024.47 219.289 1025.33 217.976 1027.03 cv
216.664 1028.73 216.007 1031.17 216.007 1034.34 cv
cp
211.648 1033.83 mo
211.648 1031.34 212.136 1029.11 213.113 1027.12 cv
214.089 1025.14 215.449 1023.61 217.191 1022.53 cv
218.933 1021.45 220.921 1020.91 223.156 1020.91 cv
226.609 1020.91 229.402 1022.11 231.535 1024.5 cv
233.667 1026.89 234.734 1030.07 234.734 1034.04 cv
234.734 1034.34 li
234.734 1036.81 234.261 1039.03 233.316 1040.99 cv
232.371 1042.95 231.019 1044.47 229.261 1045.57 cv
227.503 1046.66 225.484 1047.21 223.203 1047.21 cv
219.765 1047.21 216.98 1046.01 214.847 1043.62 cv
212.714 1041.23 211.648 1038.07 211.648 1034.13 cv
211.648 1033.83 li
cp
f
252.429 1025.27 mo
251.773 1025.16 251.062 1025.11 250.296 1025.11 cv
247.453 1025.11 245.523 1026.32 244.507 1028.74 cv
244.507 1046.74 li
240.171 1046.74 li
240.171 1021.38 li
244.39 1021.38 li
244.46 1024.31 li
245.882 1022.04 247.898 1020.91 250.507 1020.91 cv
251.351 1020.91 251.992 1021.02 252.429 1021.24 cv
252.429 1025.27 li
cp
f
265.953 1024.47 mo
264.203 1024.47 262.734 1025.11 261.546 1026.38 cv
260.359 1027.66 259.625 1029.44 259.343 1031.74 cv
272.046 1031.74 li
272.046 1031.41 li
271.921 1029.21 271.328 1027.5 270.265 1026.29 cv
269.203 1025.08 267.765 1024.47 265.953 1024.47 cv
cp
266.492 1047.21 mo
263.054 1047.21 260.257 1046.08 258.101 1043.82 cv
255.945 1041.56 254.867 1038.54 254.867 1034.76 cv
254.867 1033.97 li
254.867 1031.45 255.347 1029.21 256.308 1027.23 cv
257.269 1025.25 258.613 1023.71 260.339 1022.59 cv
262.066 1021.47 263.937 1020.91 265.953 1020.91 cv
269.25 1020.91 271.812 1022 273.64 1024.17 cv
275.468 1026.34 276.382 1029.45 276.382 1033.5 cv
276.382 1035.3 li
259.203 1035.3 li
259.265 1037.8 259.996 1039.82 261.394 1041.36 cv
262.792 1042.9 264.57 1043.67 266.726 1043.67 cv
268.257 1043.67 269.554 1043.36 270.617 1042.73 cv
271.679 1042.11 272.609 1041.28 273.406 1040.25 cv
276.054 1042.31 li
273.929 1045.58 270.742 1047.21 266.492 1047.21 cv
cp
f
285.476 1021.38 mo
285.593 1024.19 li
287.453 1022.01 289.96 1020.91 293.117 1020.91 cv
296.664 1020.91 299.078 1022.27 300.359 1024.99 cv
301.203 1023.77 302.3 1022.79 303.652 1022.04 cv
305.003 1021.29 306.601 1020.91 308.445 1020.91 cv
314.007 1020.91 316.835 1023.86 316.929 1029.75 cv
316.929 1046.74 li
312.593 1046.74 li
312.593 1030.01 li
312.593 1028.19 312.179 1026.84 311.351 1025.94 cv
310.523 1025.04 309.132 1024.59 307.179 1024.59 cv
305.57 1024.59 304.234 1025.07 303.171 1026.03 cv
302.109 1026.99 301.492 1028.29 301.32 1029.91 cv
301.32 1046.74 li
296.96 1046.74 li
296.96 1030.12 li
296.96 1026.44 295.156 1024.59 291.546 1024.59 cv
288.703 1024.59 286.757 1025.8 285.71 1028.22 cv
285.71 1046.74 li
281.375 1046.74 li
281.375 1021.38 li
285.476 1021.38 li
cp
f
340.062 1046.74 mo
335.726 1046.74 li
335.726 1021.38 li
340.062 1021.38 li
340.062 1046.74 li
cp
335.375 1014.65 mo
335.375 1013.95 335.589 1013.36 336.019 1012.87 cv
336.449 1012.39 337.085 1012.15 337.929 1012.15 cv
338.773 1012.15 339.414 1012.39 339.851 1012.87 cv
340.289 1013.36 340.507 1013.95 340.507 1014.65 cv
340.507 1015.36 340.289 1015.94 339.851 1016.41 cv
339.414 1016.88 338.773 1017.12 337.929 1017.12 cv
337.085 1017.12 336.449 1016.88 336.019 1016.41 cv
335.589 1015.94 335.375 1015.36 335.375 1014.65 cv
cp
f
364.085 1033.85 mo
364.085 1030.99 363.476 1028.73 362.257 1027.08 cv
361.039 1025.42 359.367 1024.59 357.242 1024.59 cv
354.617 1024.59 352.648 1025.76 351.335 1028.08 cv
351.335 1040.2 li
352.632 1042.51 354.617 1043.67 357.289 1043.67 cv
359.367 1043.67 361.019 1042.85 362.246 1041.2 cv
363.472 1039.55 364.085 1037.1 364.085 1033.85 cv
cp
368.421 1034.34 mo
368.421 1038.2 367.539 1041.31 365.773 1043.67 cv
364.007 1046.03 361.617 1047.21 358.601 1047.21 cv
355.523 1047.21 353.101 1046.23 351.335 1044.28 cv
351.335 1056.49 li
347 1056.49 li
347 1021.38 li
350.96 1021.38 li
351.171 1024.19 li
352.937 1022.01 355.39 1020.91 358.531 1020.91 cv
361.578 1020.91 363.988 1022.06 365.761 1024.36 cv
367.535 1026.65 368.421 1029.85 368.421 1033.94 cv
368.421 1034.34 li
cp
f
388.695 1040.01 mo
388.695 1038.84 388.253 1037.93 387.371 1037.28 cv
386.488 1036.63 384.949 1036.08 382.753 1035.61 cv
380.558 1035.14 378.816 1034.58 377.527 1033.92 cv
376.238 1033.26 375.285 1032.48 374.667 1031.58 cv
374.05 1030.67 373.742 1029.59 373.742 1028.34 cv
373.742 1026.26 374.621 1024.51 376.378 1023.07 cv
378.136 1021.63 380.382 1020.91 383.117 1020.91 cv
385.992 1020.91 388.324 1021.65 390.113 1023.14 cv
391.902 1024.62 392.796 1026.52 392.796 1028.83 cv
388.437 1028.83 li
388.437 1027.65 387.933 1026.62 386.925 1025.76 cv
385.917 1024.9 384.648 1024.47 383.117 1024.47 cv
381.539 1024.47 380.304 1024.82 379.414 1025.51 cv
378.523 1026.19 378.078 1027.09 378.078 1028.2 cv
378.078 1029.25 378.492 1030.04 379.32 1030.57 cv
380.148 1031.1 381.644 1031.61 383.808 1032.09 cv
385.972 1032.58 387.726 1033.15 389.07 1033.83 cv
390.414 1034.5 391.41 1035.31 392.058 1036.25 cv
392.707 1037.2 393.031 1038.35 393.031 1039.71 cv
393.031 1041.97 392.125 1043.79 390.312 1045.16 cv
388.5 1046.53 386.148 1047.21 383.257 1047.21 cv
381.226 1047.21 379.429 1046.85 377.867 1046.13 cv
376.304 1045.41 375.082 1044.41 374.199 1043.12 cv
373.316 1041.83 372.875 1040.44 372.875 1038.94 cv
377.21 1038.94 li
377.289 1040.39 377.871 1041.54 378.957 1042.39 cv
380.042 1043.24 381.476 1043.67 383.257 1043.67 cv
384.898 1043.67 386.214 1043.34 387.207 1042.67 cv
388.199 1042.01 388.695 1041.12 388.695 1040.01 cv
cp
f
414.335 1044.23 mo
412.648 1046.22 410.171 1047.21 406.906 1047.21 cv
404.203 1047.21 402.144 1046.42 400.73 1044.85 cv
399.316 1043.28 398.601 1040.96 398.585 1037.88 cv
398.585 1021.38 li
402.921 1021.38 li
402.921 1037.76 li
402.921 1041.61 404.484 1043.53 407.609 1043.53 cv
410.921 1043.53 413.125 1042.29 414.218 1039.83 cv
414.218 1021.38 li
418.554 1021.38 li
418.554 1046.74 li
414.429 1046.74 li
414.335 1044.23 li
cp
f
429.218 1021.38 mo
429.335 1024.19 li
431.195 1022.01 433.703 1020.91 436.859 1020.91 cv
440.406 1020.91 442.82 1022.27 444.101 1024.99 cv
444.945 1023.77 446.042 1022.79 447.394 1022.04 cv
448.746 1021.29 450.343 1020.91 452.187 1020.91 cv
457.75 1020.91 460.578 1023.86 460.671 1029.75 cv
460.671 1046.74 li
456.335 1046.74 li
456.335 1030.01 li
456.335 1028.19 455.921 1026.84 455.093 1025.94 cv
454.265 1025.04 452.875 1024.59 450.921 1024.59 cv
449.312 1024.59 447.976 1025.07 446.914 1026.03 cv
445.851 1026.99 445.234 1028.29 445.062 1029.91 cv
445.062 1046.74 li
440.703 1046.74 li
440.703 1030.12 li
440.703 1026.44 438.898 1024.59 435.289 1024.59 cv
432.445 1024.59 430.5 1025.8 429.453 1028.22 cv
429.453 1046.74 li
425.117 1046.74 li
425.117 1021.38 li
429.218 1021.38 li
cp
f
482.375 1034.34 mo
482.375 1037.22 482.968 1039.47 484.156 1041.09 cv
485.343 1042.72 486.984 1043.53 489.078 1043.53 cv
491.828 1043.53 493.835 1042.29 495.101 1039.83 cv
495.101 1028.18 li
493.804 1025.79 491.812 1024.59 489.125 1024.59 cv
487 1024.59 485.343 1025.41 484.156 1027.05 cv
482.968 1028.69 482.375 1031.12 482.375 1034.34 cv
cp
478.039 1033.85 mo
478.039 1029.96 478.96 1026.83 480.804 1024.46 cv
482.648 1022.1 485.062 1020.91 488.046 1020.91 cv
491.015 1020.91 493.367 1021.93 495.101 1023.96 cv
495.101 1010.74 li
499.437 1010.74 li
499.437 1046.74 li
495.453 1046.74 li
495.242 1044.02 li
493.507 1046.15 491.093 1047.21 488 1047.21 cv
485.062 1047.21 482.667 1046.01 480.816 1043.6 cv
478.964 1041.19 478.039 1038.05 478.039 1034.18 cv
478.039 1033.85 li
cp
f
509.375 1034.34 mo
509.375 1037.15 510.027 1039.41 511.332 1041.12 cv
512.636 1042.82 514.382 1043.67 516.57 1043.67 cv
518.773 1043.67 520.523 1042.81 521.82 1041.08 cv
523.117 1039.35 523.765 1036.94 523.765 1033.83 cv
523.765 1031.04 523.105 1028.79 521.785 1027.06 cv
520.464 1025.34 518.71 1024.47 516.523 1024.47 cv
514.382 1024.47 512.656 1025.33 511.343 1027.03 cv
510.031 1028.73 509.375 1031.17 509.375 1034.34 cv
cp
505.015 1033.83 mo
505.015 1031.34 505.503 1029.11 506.48 1027.12 cv
507.457 1025.14 508.816 1023.61 510.558 1022.53 cv
512.3 1021.45 514.289 1020.91 516.523 1020.91 cv
519.976 1020.91 522.769 1022.11 524.902 1024.5 cv
527.035 1026.89 528.101 1030.07 528.101 1034.04 cv
528.101 1034.34 li
528.101 1036.81 527.628 1039.03 526.683 1040.99 cv
525.738 1042.95 524.386 1044.47 522.628 1045.57 cv
520.871 1046.66 518.851 1047.21 516.57 1047.21 cv
513.132 1047.21 510.347 1046.01 508.214 1043.62 cv
506.082 1041.23 505.015 1038.07 505.015 1034.13 cv
505.015 1033.83 li
cp
f
538.25 1046.74 mo
533.914 1046.74 li
533.914 1010.74 li
538.25 1010.74 li
538.25 1046.74 li
cp
f
548.398 1034.34 mo
548.398 1037.15 549.05 1039.41 550.355 1041.12 cv
551.66 1042.82 553.406 1043.67 555.593 1043.67 cv
557.796 1043.67 559.546 1042.81 560.843 1041.08 cv
562.14 1039.35 562.789 1036.94 562.789 1033.83 cv
562.789 1031.04 562.128 1028.79 560.808 1027.06 cv
559.488 1025.34 557.734 1024.47 555.546 1024.47 cv
553.406 1024.47 551.679 1025.33 550.367 1027.03 cv
549.054 1028.73 548.398 1031.17 548.398 1034.34 cv
cp
544.039 1033.83 mo
544.039 1031.34 544.527 1029.11 545.503 1027.12 cv
546.48 1025.14 547.839 1023.61 549.582 1022.53 cv
551.324 1021.45 553.312 1020.91 555.546 1020.91 cv
559 1020.91 561.792 1022.11 563.925 1024.5 cv
566.058 1026.89 567.125 1030.07 567.125 1034.04 cv
567.125 1034.34 li
567.125 1036.81 566.652 1039.03 565.707 1040.99 cv
564.761 1042.95 563.41 1044.47 561.652 1045.57 cv
559.894 1046.66 557.875 1047.21 555.593 1047.21 cv
552.156 1047.21 549.371 1046.01 547.238 1043.62 cv
545.105 1041.23 544.039 1038.07 544.039 1034.13 cv
544.039 1033.83 li
cp
f
584.82 1025.27 mo
584.164 1025.16 583.453 1025.11 582.687 1025.11 cv
579.843 1025.11 577.914 1026.32 576.898 1028.74 cv
576.898 1046.74 li
572.562 1046.74 li
572.562 1021.38 li
576.781 1021.38 li
576.851 1024.31 li
578.273 1022.04 580.289 1020.91 582.898 1020.91 cv
583.742 1020.91 584.382 1021.02 584.82 1021.24 cv
584.82 1025.27 li
cp
f
615.453 1040.01 mo
615.453 1038.84 615.011 1037.93 614.128 1037.28 cv
613.246 1036.63 611.707 1036.08 609.511 1035.61 cv
607.316 1035.14 605.574 1034.58 604.285 1033.92 cv
602.996 1033.26 602.042 1032.48 601.425 1031.58 cv
600.808 1030.67 600.5 1029.59 600.5 1028.34 cv
600.5 1026.26 601.378 1024.51 603.136 1023.07 cv
604.894 1021.63 607.14 1020.91 609.875 1020.91 cv
612.75 1020.91 615.082 1021.65 616.871 1023.14 cv
618.66 1024.62 619.554 1026.52 619.554 1028.83 cv
615.195 1028.83 li
615.195 1027.65 614.691 1026.62 613.683 1025.76 cv
612.675 1024.9 611.406 1024.47 609.875 1024.47 cv
608.296 1024.47 607.062 1024.82 606.171 1025.51 cv
605.281 1026.19 604.835 1027.09 604.835 1028.2 cv
604.835 1029.25 605.25 1030.04 606.078 1030.57 cv
606.906 1031.1 608.402 1031.61 610.566 1032.09 cv
612.73 1032.58 614.484 1033.15 615.828 1033.83 cv
617.171 1034.5 618.167 1035.31 618.816 1036.25 cv
619.464 1037.2 619.789 1038.35 619.789 1039.71 cv
619.789 1041.97 618.882 1043.79 617.07 1045.16 cv
615.257 1046.53 612.906 1047.21 610.015 1047.21 cv
607.984 1047.21 606.187 1046.85 604.625 1046.13 cv
603.062 1045.41 601.839 1044.41 600.957 1043.12 cv
600.074 1041.83 599.632 1040.44 599.632 1038.94 cv
603.968 1038.94 li
604.046 1040.39 604.628 1041.54 605.714 1042.39 cv
606.8 1043.24 608.234 1043.67 610.015 1043.67 cv
611.656 1043.67 612.972 1043.34 613.964 1042.67 cv
614.957 1042.01 615.453 1041.12 615.453 1040.01 cv
cp
f
630.148 1046.74 mo
625.812 1046.74 li
625.812 1021.38 li
630.148 1021.38 li
630.148 1046.74 li
cp
625.46 1014.65 mo
625.46 1013.95 625.675 1013.36 626.105 1012.87 cv
626.535 1012.39 627.171 1012.15 628.015 1012.15 cv
628.859 1012.15 629.5 1012.39 629.937 1012.87 cv
630.375 1013.36 630.593 1013.95 630.593 1014.65 cv
630.593 1015.36 630.375 1015.94 629.937 1016.41 cv
629.5 1016.88 628.859 1017.12 628.015 1017.12 cv
627.171 1017.12 626.535 1016.88 626.105 1016.41 cv
625.675 1015.94 625.46 1015.36 625.46 1014.65 cv
cp
f
642.968 1015.24 mo
642.968 1021.38 li
647.703 1021.38 li
647.703 1024.73 li
642.968 1024.73 li
642.968 1040.48 li
642.968 1041.5 643.179 1042.26 643.601 1042.77 cv
644.023 1043.28 644.742 1043.53 645.757 1043.53 cv
646.257 1043.53 646.945 1043.44 647.82 1043.25 cv
647.82 1046.74 li
646.679 1047.05 645.57 1047.21 644.492 1047.21 cv
642.554 1047.21 641.093 1046.62 640.109 1045.45 cv
639.125 1044.28 638.632 1042.62 638.632 1040.46 cv
638.632 1024.73 li
634.015 1024.73 li
634.015 1021.38 li
638.632 1021.38 li
638.632 1015.24 li
642.968 1015.24 li
cp
f
673.109 1043.44 mo
674.468 1043.44 675.757 1043.08 676.976 1042.38 cv
678.195 1041.68 679.078 1040.76 679.625 1039.64 cv
679.625 1034.44 li
676.226 1034.44 li
670.914 1034.44 668.257 1035.99 668.257 1039.1 cv
668.257 1040.46 668.71 1041.52 669.617 1042.29 cv
670.523 1043.05 671.687 1043.44 673.109 1043.44 cv
cp
680.304 1046.74 mo
680.054 1046.24 679.851 1045.35 679.695 1044.07 cv
677.679 1046.16 675.273 1047.21 672.476 1047.21 cv
669.976 1047.21 667.925 1046.5 666.324 1045.09 cv
664.722 1043.67 663.921 1041.88 663.921 1039.71 cv
663.921 1037.07 664.925 1035.02 666.933 1033.56 cv
668.941 1032.1 671.765 1031.37 675.406 1031.37 cv
679.625 1031.37 li
679.625 1029.37 li
679.625 1027.86 679.171 1026.65 678.265 1025.75 cv
677.359 1024.85 676.023 1024.4 674.257 1024.4 cv
672.71 1024.4 671.414 1024.79 670.367 1025.58 cv
669.32 1026.36 668.796 1027.3 668.796 1028.41 cv
664.437 1028.41 li
664.437 1027.15 664.886 1025.92 665.785 1024.74 cv
666.683 1023.56 667.902 1022.63 669.441 1021.94 cv
670.98 1021.26 672.671 1020.91 674.515 1020.91 cv
677.437 1020.91 679.726 1021.64 681.382 1023.1 cv
683.039 1024.56 683.898 1026.58 683.96 1029.14 cv
683.96 1040.81 li
683.96 1043.14 684.257 1044.99 684.851 1046.37 cv
684.851 1046.74 li
680.304 1046.74 li
cp
f
694.835 1021.38 mo
694.953 1024.19 li
696.812 1022.01 699.32 1020.91 702.476 1020.91 cv
706.023 1020.91 708.437 1022.27 709.718 1024.99 cv
710.562 1023.77 711.66 1022.79 713.011 1022.04 cv
714.363 1021.29 715.96 1020.91 717.804 1020.91 cv
723.367 1020.91 726.195 1023.86 726.289 1029.75 cv
726.289 1046.74 li
721.953 1046.74 li
721.953 1030.01 li
721.953 1028.19 721.539 1026.84 720.71 1025.94 cv
719.882 1025.04 718.492 1024.59 716.539 1024.59 cv
714.929 1024.59 713.593 1025.07 712.531 1026.03 cv
711.468 1026.99 710.851 1028.29 710.679 1029.91 cv
710.679 1046.74 li
706.32 1046.74 li
706.32 1030.12 li
706.32 1026.44 704.515 1024.59 700.906 1024.59 cv
698.062 1024.59 696.117 1025.8 695.07 1028.22 cv
695.07 1046.74 li
690.734 1046.74 li
690.734 1021.38 li
694.835 1021.38 li
cp
f
742.812 1024.47 mo
741.062 1024.47 739.593 1025.11 738.406 1026.38 cv
737.218 1027.66 736.484 1029.44 736.203 1031.74 cv
748.906 1031.74 li
748.906 1031.41 li
748.781 1029.21 748.187 1027.5 747.125 1026.29 cv
746.062 1025.08 744.625 1024.47 742.812 1024.47 cv
cp
743.351 1047.21 mo
739.914 1047.21 737.117 1046.08 734.96 1043.82 cv
732.804 1041.56 731.726 1038.54 731.726 1034.76 cv
731.726 1033.97 li
731.726 1031.45 732.207 1029.21 733.167 1027.23 cv
734.128 1025.25 735.472 1023.71 737.199 1022.59 cv
738.925 1021.47 740.796 1020.91 742.812 1020.91 cv
746.109 1020.91 748.671 1022 750.5 1024.17 cv
752.328 1026.34 753.242 1029.45 753.242 1033.5 cv
753.242 1035.3 li
736.062 1035.3 li
736.125 1037.8 736.855 1039.82 738.253 1041.36 cv
739.652 1042.9 741.429 1043.67 743.585 1043.67 cv
745.117 1043.67 746.414 1043.36 747.476 1042.73 cv
748.539 1042.11 749.468 1041.28 750.265 1040.25 cv
752.914 1042.31 li
750.789 1045.58 747.601 1047.21 743.351 1047.21 cv
cp
f
764.14 1015.24 mo
764.14 1021.38 li
768.875 1021.38 li
768.875 1024.73 li
764.14 1024.73 li
764.14 1040.48 li
764.14 1041.5 764.351 1042.26 764.773 1042.77 cv
765.195 1043.28 765.914 1043.53 766.929 1043.53 cv
767.429 1043.53 768.117 1043.44 768.992 1043.25 cv
768.992 1046.74 li
767.851 1047.05 766.742 1047.21 765.664 1047.21 cv
763.726 1047.21 762.265 1046.62 761.281 1045.45 cv
760.296 1044.28 759.804 1042.62 759.804 1040.46 cv
759.804 1024.73 li
755.187 1024.73 li
755.187 1021.38 li
759.804 1021.38 li
759.804 1015.24 li
764.14 1015.24 li
cp
f
773.796 1053.54 mo
771.335 1051.85 li
772.804 1049.8 773.57 1047.69 773.632 1045.52 cv
773.632 1041.61 li
777.875 1041.61 li
777.875 1045.01 li
777.875 1046.58 777.488 1048.16 776.714 1049.74 cv
775.941 1051.32 774.968 1052.58 773.796 1053.54 cv
cp
f
197.14 1101.27 mo
198.687 1101.27 200.039 1100.8 201.195 1099.86 cv
202.351 1098.93 202.992 1097.75 203.117 1096.35 cv
207.218 1096.35 li
207.14 1097.8 206.64 1099.18 205.718 1100.5 cv
204.796 1101.81 203.566 1102.86 202.027 1103.64 cv
200.488 1104.42 198.859 1104.81 197.14 1104.81 cv
193.687 1104.81 190.941 1103.66 188.902 1101.35 cv
186.863 1099.05 185.843 1095.89 185.843 1091.89 cv
185.843 1091.17 li
185.843 1088.7 186.296 1086.5 187.203 1084.58 cv
188.109 1082.66 189.41 1081.17 191.105 1080.11 cv
192.8 1079.04 194.804 1078.51 197.117 1078.51 cv
199.96 1078.51 202.324 1079.36 204.207 1081.07 cv
206.089 1082.77 207.093 1084.98 207.218 1087.7 cv
203.117 1087.7 li
202.992 1086.06 202.371 1084.71 201.253 1083.66 cv
200.136 1082.6 198.757 1082.07 197.117 1082.07 cv
194.914 1082.07 193.207 1082.87 191.996 1084.45 cv
190.785 1086.04 190.179 1088.33 190.179 1091.33 cv
190.179 1092.15 li
190.179 1095.07 190.781 1097.32 191.984 1098.9 cv
193.187 1100.48 194.906 1101.27 197.14 1101.27 cv
cp
f
215.304 1091.94 mo
215.304 1094.75 215.957 1097.01 217.261 1098.71 cv
218.566 1100.42 220.312 1101.27 222.5 1101.27 cv
224.703 1101.27 226.453 1100.41 227.75 1098.68 cv
229.046 1096.95 229.695 1094.54 229.695 1091.43 cv
229.695 1088.64 229.035 1086.39 227.714 1084.66 cv
226.394 1082.94 224.64 1082.07 222.453 1082.07 cv
220.312 1082.07 218.585 1082.93 217.273 1084.63 cv
215.96 1086.33 215.304 1088.77 215.304 1091.94 cv
cp
210.945 1091.43 mo
210.945 1088.94 211.433 1086.71 212.41 1084.72 cv
213.386 1082.74 214.746 1081.21 216.488 1080.13 cv
218.23 1079.05 220.218 1078.51 222.453 1078.51 cv
225.906 1078.51 228.699 1079.71 230.832 1082.1 cv
232.964 1084.49 234.031 1087.67 234.031 1091.64 cv
234.031 1091.94 li
234.031 1094.41 233.558 1096.63 232.613 1098.59 cv
231.667 1100.55 230.316 1102.07 228.558 1103.17 cv
226.8 1104.26 224.781 1104.81 222.5 1104.81 cv
219.062 1104.81 216.277 1103.61 214.144 1101.22 cv
212.011 1098.83 210.945 1095.67 210.945 1091.73 cv
210.945 1091.43 li
cp
f
243.57 1078.98 mo
243.71 1082.17 li
245.648 1079.73 248.179 1078.51 251.304 1078.51 cv
256.664 1078.51 259.367 1081.54 259.414 1087.58 cv
259.414 1104.34 li
255.078 1104.34 li
255.078 1087.56 li
255.062 1085.73 254.644 1084.38 253.824 1083.5 cv
253.003 1082.63 251.726 1082.19 249.992 1082.19 cv
248.585 1082.19 247.351 1082.57 246.289 1083.32 cv
245.226 1084.07 244.398 1085.05 243.804 1086.27 cv
243.804 1104.34 li
239.468 1104.34 li
239.468 1078.98 li
243.57 1078.98 li
cp
f
280.718 1097.61 mo
280.718 1096.44 280.277 1095.53 279.394 1094.88 cv
278.511 1094.23 276.972 1093.68 274.777 1093.21 cv
272.582 1092.74 270.839 1092.18 269.55 1091.52 cv
268.261 1090.86 267.308 1090.08 266.691 1089.18 cv
266.074 1088.27 265.765 1087.19 265.765 1085.94 cv
265.765 1083.86 266.644 1082.11 268.402 1080.67 cv
270.16 1079.23 272.406 1078.51 275.14 1078.51 cv
278.015 1078.51 280.347 1079.25 282.136 1080.74 cv
283.925 1082.22 284.82 1084.12 284.82 1086.43 cv
280.46 1086.43 li
280.46 1085.25 279.957 1084.22 278.949 1083.36 cv
277.941 1082.5 276.671 1082.07 275.14 1082.07 cv
273.562 1082.07 272.328 1082.42 271.437 1083.11 cv
270.546 1083.79 270.101 1084.69 270.101 1085.8 cv
270.101 1086.85 270.515 1087.64 271.343 1088.17 cv
272.171 1088.7 273.667 1089.21 275.832 1089.69 cv
277.996 1090.18 279.75 1090.75 281.093 1091.43 cv
282.437 1092.1 283.433 1092.91 284.082 1093.85 cv
284.73 1094.8 285.054 1095.95 285.054 1097.31 cv
285.054 1099.57 284.148 1101.39 282.335 1102.76 cv
280.523 1104.13 278.171 1104.81 275.281 1104.81 cv
273.25 1104.81 271.453 1104.45 269.89 1103.73 cv
268.328 1103.01 267.105 1102.01 266.222 1100.72 cv
265.339 1099.43 264.898 1098.04 264.898 1096.54 cv
269.234 1096.54 li
269.312 1097.99 269.894 1099.14 270.98 1099.99 cv
272.066 1100.84 273.5 1101.27 275.281 1101.27 cv
276.921 1101.27 278.238 1100.94 279.23 1100.27 cv
280.222 1099.61 280.718 1098.72 280.718 1097.61 cv
cp
f
300.687 1082.07 mo
298.937 1082.07 297.468 1082.71 296.281 1083.98 cv
295.093 1085.26 294.359 1087.04 294.078 1089.34 cv
306.781 1089.34 li
306.781 1089.01 li
306.656 1086.81 306.062 1085.1 305 1083.89 cv
303.937 1082.68 302.5 1082.07 300.687 1082.07 cv
cp
301.226 1104.81 mo
297.789 1104.81 294.992 1103.68 292.835 1101.42 cv
290.679 1099.16 289.601 1096.14 289.601 1092.36 cv
289.601 1091.57 li
289.601 1089.05 290.082 1086.8 291.042 1084.83 cv
292.003 1082.85 293.347 1081.3 295.074 1080.19 cv
296.8 1079.07 298.671 1078.51 300.687 1078.51 cv
303.984 1078.51 306.546 1079.6 308.375 1081.77 cv
310.203 1083.94 311.117 1087.05 311.117 1091.1 cv
311.117 1092.9 li
293.937 1092.9 li
294 1095.4 294.73 1097.42 296.128 1098.96 cv
297.527 1100.5 299.304 1101.27 301.46 1101.27 cv
302.992 1101.27 304.289 1100.96 305.351 1100.33 cv
306.414 1099.71 307.343 1098.88 308.14 1097.85 cv
310.789 1099.91 li
308.664 1103.18 305.476 1104.81 301.226 1104.81 cv
cp
f
326.304 1101.27 mo
327.851 1101.27 329.203 1100.8 330.359 1099.86 cv
331.515 1098.93 332.156 1097.75 332.281 1096.35 cv
336.382 1096.35 li
336.304 1097.8 335.804 1099.18 334.882 1100.5 cv
333.96 1101.81 332.73 1102.86 331.191 1103.64 cv
329.652 1104.42 328.023 1104.81 326.304 1104.81 cv
322.851 1104.81 320.105 1103.66 318.066 1101.35 cv
316.027 1099.05 315.007 1095.89 315.007 1091.89 cv
315.007 1091.17 li
315.007 1088.7 315.46 1086.5 316.367 1084.58 cv
317.273 1082.66 318.574 1081.17 320.269 1080.11 cv
321.964 1079.04 323.968 1078.51 326.281 1078.51 cv
329.125 1078.51 331.488 1079.36 333.371 1081.07 cv
335.253 1082.77 336.257 1084.98 336.382 1087.7 cv
332.281 1087.7 li
332.156 1086.06 331.535 1084.71 330.417 1083.66 cv
329.3 1082.6 327.921 1082.07 326.281 1082.07 cv
324.078 1082.07 322.371 1082.87 321.16 1084.45 cv
319.949 1086.04 319.343 1088.33 319.343 1091.33 cv
319.343 1092.15 li
319.343 1095.07 319.945 1097.32 321.148 1098.9 cv
322.351 1100.48 324.07 1101.27 326.304 1101.27 cv
cp
f
347.14 1072.84 mo
347.14 1078.98 li
351.875 1078.98 li
351.875 1082.33 li
347.14 1082.33 li
347.14 1098.08 li
347.14 1099.1 347.351 1099.86 347.773 1100.37 cv
348.195 1100.88 348.914 1101.13 349.929 1101.13 cv
350.429 1101.13 351.117 1101.04 351.992 1100.85 cv
351.992 1104.34 li
350.851 1104.65 349.742 1104.81 348.664 1104.81 cv
346.726 1104.81 345.265 1104.22 344.281 1103.05 cv
343.296 1101.88 342.804 1100.21 342.804 1098.06 cv
342.804 1082.33 li
338.187 1082.33 li
338.187 1078.98 li
342.804 1078.98 li
342.804 1072.84 li
347.14 1072.84 li
cp
f
366.921 1082.07 mo
365.171 1082.07 363.703 1082.71 362.515 1083.98 cv
361.328 1085.26 360.593 1087.04 360.312 1089.34 cv
373.015 1089.34 li
373.015 1089.01 li
372.89 1086.81 372.296 1085.1 371.234 1083.89 cv
370.171 1082.68 368.734 1082.07 366.921 1082.07 cv
cp
367.46 1104.81 mo
364.023 1104.81 361.226 1103.68 359.07 1101.42 cv
356.914 1099.16 355.835 1096.14 355.835 1092.36 cv
355.835 1091.57 li
355.835 1089.05 356.316 1086.8 357.277 1084.83 cv
358.238 1082.85 359.582 1081.3 361.308 1080.19 cv
363.035 1079.07 364.906 1078.51 366.921 1078.51 cv
370.218 1078.51 372.781 1079.6 374.609 1081.77 cv
376.437 1083.94 377.351 1087.05 377.351 1091.1 cv
377.351 1092.9 li
360.171 1092.9 li
360.234 1095.4 360.964 1097.42 362.363 1098.96 cv
363.761 1100.5 365.539 1101.27 367.695 1101.27 cv
369.226 1101.27 370.523 1100.96 371.585 1100.33 cv
372.648 1099.71 373.578 1098.88 374.375 1097.85 cv
377.023 1099.91 li
374.898 1103.18 371.71 1104.81 367.46 1104.81 cv
cp
f
388.25 1072.84 mo
388.25 1078.98 li
392.984 1078.98 li
392.984 1082.33 li
388.25 1082.33 li
388.25 1098.08 li
388.25 1099.1 388.46 1099.86 388.882 1100.37 cv
389.304 1100.88 390.023 1101.13 391.039 1101.13 cv
391.539 1101.13 392.226 1101.04 393.101 1100.85 cv
393.101 1104.34 li
391.96 1104.65 390.851 1104.81 389.773 1104.81 cv
387.835 1104.81 386.375 1104.22 385.39 1103.05 cv
384.406 1101.88 383.914 1100.21 383.914 1098.06 cv
383.914 1082.33 li
379.296 1082.33 li
379.296 1078.98 li
383.914 1078.98 li
383.914 1072.84 li
388.25 1072.84 li
cp
f
413.703 1101.83 mo
412.015 1103.82 409.539 1104.81 406.273 1104.81 cv
403.57 1104.81 401.511 1104.02 400.097 1102.45 cv
398.683 1100.88 397.968 1098.56 397.953 1095.48 cv
397.953 1078.98 li
402.289 1078.98 li
402.289 1095.36 li
402.289 1099.21 403.851 1101.13 406.976 1101.13 cv
410.289 1101.13 412.492 1099.89 413.585 1097.43 cv
413.585 1078.98 li
417.921 1078.98 li
417.921 1104.34 li
413.796 1104.34 li
413.703 1101.83 li
cp
f
434.492 1082.07 mo
432.742 1082.07 431.273 1082.71 430.085 1083.98 cv
428.898 1085.26 428.164 1087.04 427.882 1089.34 cv
440.585 1089.34 li
440.585 1089.01 li
440.46 1086.81 439.867 1085.1 438.804 1083.89 cv
437.742 1082.68 436.304 1082.07 434.492 1082.07 cv
cp
435.031 1104.81 mo
431.593 1104.81 428.796 1103.68 426.64 1101.42 cv
424.484 1099.16 423.406 1096.14 423.406 1092.36 cv
423.406 1091.57 li
423.406 1089.05 423.886 1086.8 424.847 1084.83 cv
425.808 1082.85 427.152 1081.3 428.878 1080.19 cv
430.605 1079.07 432.476 1078.51 434.492 1078.51 cv
437.789 1078.51 440.351 1079.6 442.179 1081.77 cv
444.007 1083.94 444.921 1087.05 444.921 1091.1 cv
444.921 1092.9 li
427.742 1092.9 li
427.804 1095.4 428.535 1097.42 429.933 1098.96 cv
431.332 1100.5 433.109 1101.27 435.265 1101.27 cv
436.796 1101.27 438.093 1100.96 439.156 1100.33 cv
440.218 1099.71 441.148 1098.88 441.945 1097.85 cv
444.593 1099.91 li
442.468 1103.18 439.281 1104.81 435.031 1104.81 cv
cp
f
462.195 1082.87 mo
461.539 1082.76 460.828 1082.71 460.062 1082.71 cv
457.218 1082.71 455.289 1083.92 454.273 1086.34 cv
454.273 1104.34 li
449.937 1104.34 li
449.937 1078.98 li
454.156 1078.98 li
454.226 1081.91 li
455.648 1079.64 457.664 1078.51 460.273 1078.51 cv
461.117 1078.51 461.757 1078.62 462.195 1078.84 cv
462.195 1082.87 li
cp
f
486.523 1101.04 mo
487.882 1101.04 489.171 1100.68 490.39 1099.98 cv
491.609 1099.28 492.492 1098.36 493.039 1097.24 cv
493.039 1092.04 li
489.64 1092.04 li
484.328 1092.04 481.671 1093.59 481.671 1096.7 cv
481.671 1098.06 482.125 1099.12 483.031 1099.89 cv
483.937 1100.65 485.101 1101.04 486.523 1101.04 cv
cp
493.718 1104.34 mo
493.468 1103.84 493.265 1102.95 493.109 1101.67 cv
491.093 1103.76 488.687 1104.81 485.89 1104.81 cv
483.39 1104.81 481.339 1104.1 479.738 1102.69 cv
478.136 1101.27 477.335 1099.48 477.335 1097.31 cv
477.335 1094.67 478.339 1092.62 480.347 1091.16 cv
482.355 1089.7 485.179 1088.96 488.82 1088.96 cv
493.039 1088.96 li
493.039 1086.97 li
493.039 1085.46 492.585 1084.25 491.679 1083.35 cv
490.773 1082.45 489.437 1082 487.671 1082 cv
486.125 1082 484.828 1082.39 483.781 1083.18 cv
482.734 1083.96 482.21 1084.9 482.21 1086.01 cv
477.851 1086.01 li
477.851 1084.75 478.3 1083.52 479.199 1082.34 cv
480.097 1081.16 481.316 1080.23 482.855 1079.54 cv
484.394 1078.86 486.085 1078.51 487.929 1078.51 cv
490.851 1078.51 493.14 1079.24 494.796 1080.7 cv
496.453 1082.16 497.312 1084.18 497.375 1086.74 cv
497.375 1098.41 li
497.375 1100.74 497.671 1102.59 498.265 1103.96 cv
498.265 1104.34 li
493.718 1104.34 li
cp
f
507.453 1091.94 mo
507.453 1094.82 508.046 1097.07 509.234 1098.69 cv
510.421 1100.32 512.062 1101.13 514.156 1101.13 cv
516.906 1101.13 518.914 1099.89 520.179 1097.43 cv
520.179 1085.78 li
518.882 1083.39 516.89 1082.19 514.203 1082.19 cv
512.078 1082.19 510.421 1083.01 509.234 1084.65 cv
508.046 1086.29 507.453 1088.72 507.453 1091.94 cv
cp
503.117 1091.45 mo
503.117 1087.56 504.039 1084.43 505.882 1082.06 cv
507.726 1079.7 510.14 1078.51 513.125 1078.51 cv
516.093 1078.51 518.445 1079.53 520.179 1081.56 cv
520.179 1068.34 li
524.515 1068.34 li
524.515 1104.34 li
520.531 1104.34 li
520.32 1101.62 li
518.585 1103.75 516.171 1104.81 513.078 1104.81 cv
510.14 1104.81 507.746 1103.61 505.894 1101.2 cv
504.042 1098.79 503.117 1095.65 503.117 1091.78 cv
503.117 1091.45 li
cp
f
535.953 1104.34 mo
531.617 1104.34 li
531.617 1078.98 li
535.953 1078.98 li
535.953 1104.34 li
cp
531.265 1072.25 mo
531.265 1071.55 531.48 1070.96 531.91 1070.47 cv
532.339 1069.99 532.976 1069.75 533.82 1069.75 cv
534.664 1069.75 535.304 1069.99 535.742 1070.47 cv
536.179 1070.96 536.398 1071.55 536.398 1072.25 cv
536.398 1072.96 536.179 1073.54 535.742 1074.01 cv
535.304 1074.48 534.664 1074.71 533.82 1074.71 cv
532.976 1074.71 532.339 1074.48 531.91 1074.01 cv
531.48 1073.54 531.265 1072.96 531.265 1072.25 cv
cp
f
559.976 1091.45 mo
559.976 1088.59 559.367 1086.33 558.148 1084.68 cv
556.929 1083.02 555.257 1082.19 553.132 1082.19 cv
550.507 1082.19 548.539 1083.36 547.226 1085.68 cv
547.226 1097.8 li
548.523 1100.11 550.507 1101.27 553.179 1101.27 cv
555.257 1101.27 556.91 1100.45 558.136 1098.8 cv
559.363 1097.15 559.976 1094.7 559.976 1091.45 cv
cp
564.312 1091.94 mo
564.312 1095.8 563.429 1098.91 561.664 1101.27 cv
559.898 1103.63 557.507 1104.81 554.492 1104.81 cv
551.414 1104.81 548.992 1103.83 547.226 1101.88 cv
547.226 1114.09 li
542.89 1114.09 li
542.89 1078.98 li
546.851 1078.98 li
547.062 1081.79 li
548.828 1079.61 551.281 1078.51 554.421 1078.51 cv
557.468 1078.51 559.878 1079.66 561.652 1081.96 cv
563.425 1084.25 564.312 1087.45 564.312 1091.54 cv
564.312 1091.94 li
cp
f
574.531 1104.34 mo
570.195 1104.34 li
570.195 1078.98 li
574.531 1078.98 li
574.531 1104.34 li
cp
569.843 1072.25 mo
569.843 1071.55 570.058 1070.96 570.488 1070.47 cv
570.917 1069.99 571.554 1069.75 572.398 1069.75 cv
573.242 1069.75 573.882 1069.99 574.32 1070.47 cv
574.757 1070.96 574.976 1071.55 574.976 1072.25 cv
574.976 1072.96 574.757 1073.54 574.32 1074.01 cv
573.882 1074.48 573.242 1074.71 572.398 1074.71 cv
571.554 1074.71 570.917 1074.48 570.488 1074.01 cv
570.058 1073.54 569.843 1072.96 569.843 1072.25 cv
cp
f
596.234 1097.61 mo
596.234 1096.44 595.792 1095.53 594.91 1094.88 cv
594.027 1094.23 592.488 1093.68 590.292 1093.21 cv
588.097 1092.74 586.355 1092.18 585.066 1091.52 cv
583.777 1090.86 582.824 1090.08 582.207 1089.18 cv
581.589 1088.27 581.281 1087.19 581.281 1085.94 cv
581.281 1083.86 582.16 1082.11 583.917 1080.67 cv
585.675 1079.23 587.921 1078.51 590.656 1078.51 cv
593.531 1078.51 595.863 1079.25 597.652 1080.74 cv
599.441 1082.22 600.335 1084.12 600.335 1086.43 cv
595.976 1086.43 li
595.976 1085.25 595.472 1084.22 594.464 1083.36 cv
593.457 1082.5 592.187 1082.07 590.656 1082.07 cv
589.078 1082.07 587.843 1082.42 586.953 1083.11 cv
586.062 1083.79 585.617 1084.69 585.617 1085.8 cv
585.617 1086.85 586.031 1087.64 586.859 1088.17 cv
587.687 1088.7 589.183 1089.21 591.347 1089.69 cv
593.511 1090.18 595.265 1090.75 596.609 1091.43 cv
597.953 1092.1 598.949 1092.91 599.597 1093.85 cv
600.246 1094.8 600.57 1095.95 600.57 1097.31 cv
600.57 1099.57 599.664 1101.39 597.851 1102.76 cv
596.039 1104.13 593.687 1104.81 590.796 1104.81 cv
588.765 1104.81 586.968 1104.45 585.406 1103.73 cv
583.843 1103.01 582.621 1102.01 581.738 1100.72 cv
580.855 1099.43 580.414 1098.04 580.414 1096.54 cv
584.75 1096.54 li
584.828 1097.99 585.41 1099.14 586.496 1099.99 cv
587.582 1100.84 589.015 1101.27 590.796 1101.27 cv
592.437 1101.27 593.753 1100.94 594.746 1100.27 cv
595.738 1099.61 596.234 1098.72 596.234 1097.61 cv
cp
f
616.39 1101.27 mo
617.937 1101.27 619.289 1100.8 620.445 1099.86 cv
621.601 1098.93 622.242 1097.75 622.367 1096.35 cv
626.468 1096.35 li
626.39 1097.8 625.89 1099.18 624.968 1100.5 cv
624.046 1101.81 622.816 1102.86 621.277 1103.64 cv
619.738 1104.42 618.109 1104.81 616.39 1104.81 cv
612.937 1104.81 610.191 1103.66 608.152 1101.35 cv
606.113 1099.05 605.093 1095.89 605.093 1091.89 cv
605.093 1091.17 li
605.093 1088.7 605.546 1086.5 606.453 1084.58 cv
607.359 1082.66 608.66 1081.17 610.355 1080.11 cv
612.05 1079.04 614.054 1078.51 616.367 1078.51 cv
619.21 1078.51 621.574 1079.36 623.457 1081.07 cv
625.339 1082.77 626.343 1084.98 626.468 1087.7 cv
622.367 1087.7 li
622.242 1086.06 621.621 1084.71 620.503 1083.66 cv
619.386 1082.6 618.007 1082.07 616.367 1082.07 cv
614.164 1082.07 612.457 1082.87 611.246 1084.45 cv
610.035 1086.04 609.429 1088.33 609.429 1091.33 cv
609.429 1092.15 li
609.429 1095.07 610.031 1097.32 611.234 1098.9 cv
612.437 1100.48 614.156 1101.27 616.39 1101.27 cv
cp
f
636.054 1104.34 mo
631.718 1104.34 li
631.718 1078.98 li
636.054 1078.98 li
636.054 1104.34 li
cp
631.367 1072.25 mo
631.367 1071.55 631.582 1070.96 632.011 1070.47 cv
632.441 1069.99 633.078 1069.75 633.921 1069.75 cv
634.765 1069.75 635.406 1069.99 635.843 1070.47 cv
636.281 1070.96 636.5 1071.55 636.5 1072.25 cv
636.5 1072.96 636.281 1073.54 635.843 1074.01 cv
635.406 1074.48 634.765 1074.71 633.921 1074.71 cv
633.078 1074.71 632.441 1074.48 632.011 1074.01 cv
631.582 1073.54 631.367 1072.96 631.367 1072.25 cv
cp
f
647.093 1078.98 mo
647.234 1082.17 li
649.171 1079.73 651.703 1078.51 654.828 1078.51 cv
660.187 1078.51 662.89 1081.54 662.937 1087.58 cv
662.937 1104.34 li
658.601 1104.34 li
658.601 1087.56 li
658.585 1085.73 658.167 1084.38 657.347 1083.5 cv
656.527 1082.63 655.25 1082.19 653.515 1082.19 cv
652.109 1082.19 650.875 1082.57 649.812 1083.32 cv
648.75 1084.07 647.921 1085.05 647.328 1086.27 cv
647.328 1104.34 li
642.992 1104.34 li
642.992 1078.98 li
647.093 1078.98 li
cp
f
672.804 1091.94 mo
672.804 1094.8 673.39 1097.05 674.562 1098.68 cv
675.734 1100.31 677.375 1101.13 679.484 1101.13 cv
682.218 1101.13 684.226 1099.89 685.507 1097.4 cv
685.507 1085.82 li
684.179 1083.4 682.187 1082.19 679.531 1082.19 cv
677.421 1082.19 675.773 1083.01 674.585 1084.65 cv
673.398 1086.29 672.804 1088.72 672.804 1091.94 cv
cp
668.445 1091.45 mo
668.445 1087.5 669.359 1084.35 671.187 1082.02 cv
673.015 1079.68 675.437 1078.51 678.453 1078.51 cv
681.546 1078.51 683.96 1079.61 685.695 1081.79 cv
685.906 1078.98 li
689.867 1078.98 li
689.867 1103.73 li
689.867 1107.01 688.894 1109.6 686.949 1111.49 cv
685.003 1113.38 682.39 1114.32 679.109 1114.32 cv
677.281 1114.32 675.492 1113.93 673.742 1113.15 cv
671.992 1112.37 670.656 1111.3 669.734 1109.94 cv
671.984 1107.34 li
673.843 1109.64 676.117 1110.79 678.804 1110.79 cv
680.914 1110.79 682.558 1110.19 683.738 1109 cv
684.917 1107.82 685.507 1106.14 685.507 1103.99 cv
685.507 1101.81 li
683.773 1103.81 681.406 1104.81 678.406 1104.81 cv
675.437 1104.81 673.035 1103.61 671.199 1101.22 cv
669.363 1098.83 668.445 1095.57 668.445 1091.45 cv
cp
f
718.273 1082.07 mo
716.523 1082.07 715.054 1082.71 713.867 1083.98 cv
712.679 1085.26 711.945 1087.04 711.664 1089.34 cv
724.367 1089.34 li
724.367 1089.01 li
724.242 1086.81 723.648 1085.1 722.585 1083.89 cv
721.523 1082.68 720.085 1082.07 718.273 1082.07 cv
cp
718.812 1104.81 mo
715.375 1104.81 712.578 1103.68 710.421 1101.42 cv
708.265 1099.16 707.187 1096.14 707.187 1092.36 cv
707.187 1091.57 li
707.187 1089.05 707.667 1086.8 708.628 1084.83 cv
709.589 1082.85 710.933 1081.3 712.66 1080.19 cv
714.386 1079.07 716.257 1078.51 718.273 1078.51 cv
721.57 1078.51 724.132 1079.6 725.96 1081.77 cv
727.789 1083.94 728.703 1087.05 728.703 1091.1 cv
728.703 1092.9 li
711.523 1092.9 li
711.585 1095.4 712.316 1097.42 713.714 1098.96 cv
715.113 1100.5 716.89 1101.27 719.046 1101.27 cv
720.578 1101.27 721.875 1100.96 722.937 1100.33 cv
724 1099.71 724.929 1098.88 725.726 1097.85 cv
728.375 1099.91 li
726.25 1103.18 723.062 1104.81 718.812 1104.81 cv
cp
f
738.429 1104.34 mo
734.093 1104.34 li
734.093 1068.34 li
738.429 1068.34 li
738.429 1104.34 li
cp
f
750.078 1104.34 mo
745.742 1104.34 li
745.742 1078.98 li
750.078 1078.98 li
750.078 1104.34 li
cp
745.39 1072.25 mo
745.39 1071.55 745.605 1070.96 746.035 1070.47 cv
746.464 1069.99 747.101 1069.75 747.945 1069.75 cv
748.789 1069.75 749.429 1069.99 749.867 1070.47 cv
750.304 1070.96 750.523 1071.55 750.523 1072.25 cv
750.523 1072.96 750.304 1073.54 749.867 1074.01 cv
749.429 1074.48 748.789 1074.71 747.945 1074.71 cv
747.101 1074.71 746.464 1074.48 746.035 1074.01 cv
745.605 1073.54 745.39 1072.96 745.39 1072.25 cv
cp
f
762.898 1072.84 mo
762.898 1078.98 li
767.632 1078.98 li
767.632 1082.33 li
762.898 1082.33 li
762.898 1098.08 li
762.898 1099.1 763.109 1099.86 763.531 1100.37 cv
763.953 1100.88 764.671 1101.13 765.687 1101.13 cv
766.187 1101.13 766.875 1101.04 767.75 1100.85 cv
767.75 1104.34 li
766.609 1104.65 765.5 1104.81 764.421 1104.81 cv
762.484 1104.81 761.023 1104.22 760.039 1103.05 cv
759.054 1101.88 758.562 1100.21 758.562 1098.06 cv
758.562 1082.33 li
753.945 1082.33 li
753.945 1078.98 li
758.562 1078.98 li
758.562 1072.84 li
762.898 1072.84 li
cp
f
772.554 1111.14 mo
770.093 1109.45 li
771.562 1107.4 772.328 1105.29 772.39 1103.12 cv
772.39 1099.21 li
776.632 1099.21 li
776.632 1102.61 li
776.632 1104.18 776.246 1105.76 775.472 1107.34 cv
774.699 1108.92 773.726 1110.18 772.554 1111.14 cv
cp
f
201.734 1155.21 mo
201.734 1154.04 201.292 1153.13 200.41 1152.48 cv
199.527 1151.83 197.988 1151.28 195.792 1150.81 cv
193.597 1150.34 191.855 1149.78 190.566 1149.12 cv
189.277 1148.46 188.324 1147.68 187.707 1146.78 cv
187.089 1145.87 186.781 1144.79 186.781 1143.54 cv
186.781 1141.46 187.66 1139.71 189.417 1138.27 cv
191.175 1136.83 193.421 1136.11 196.156 1136.11 cv
199.031 1136.11 201.363 1136.85 203.152 1138.34 cv
204.941 1139.82 205.835 1141.72 205.835 1144.03 cv
201.476 1144.03 li
201.476 1142.85 200.972 1141.82 199.964 1140.96 cv
198.957 1140.1 197.687 1139.67 196.156 1139.67 cv
194.578 1139.67 193.343 1140.02 192.453 1140.71 cv
191.562 1141.39 191.117 1142.29 191.117 1143.4 cv
191.117 1144.45 191.531 1145.24 192.359 1145.77 cv
193.187 1146.3 194.683 1146.81 196.847 1147.29 cv
199.011 1147.78 200.765 1148.35 202.109 1149.03 cv
203.453 1149.7 204.449 1150.51 205.097 1151.45 cv
205.746 1152.4 206.07 1153.55 206.07 1154.91 cv
206.07 1157.17 205.164 1158.99 203.351 1160.36 cv
201.539 1161.73 199.187 1162.41 196.296 1162.41 cv
194.265 1162.41 192.468 1162.05 190.906 1161.33 cv
189.343 1160.61 188.121 1159.61 187.238 1158.32 cv
186.355 1157.03 185.914 1155.64 185.914 1154.14 cv
190.25 1154.14 li
190.328 1155.59 190.91 1156.74 191.996 1157.59 cv
193.082 1158.44 194.515 1158.87 196.296 1158.87 cv
197.937 1158.87 199.253 1158.54 200.246 1157.87 cv
201.238 1157.21 201.734 1156.32 201.734 1155.21 cv
cp
f
221.703 1139.67 mo
219.953 1139.67 218.484 1140.31 217.296 1141.58 cv
216.109 1142.86 215.375 1144.64 215.093 1146.94 cv
227.796 1146.94 li
227.796 1146.61 li
227.671 1144.41 227.078 1142.7 226.015 1141.49 cv
224.953 1140.28 223.515 1139.67 221.703 1139.67 cv
cp
222.242 1162.41 mo
218.804 1162.41 216.007 1161.28 213.851 1159.02 cv
211.695 1156.76 210.617 1153.75 210.617 1149.96 cv
210.617 1149.17 li
210.617 1146.65 211.097 1144.41 212.058 1142.43 cv
213.019 1140.45 214.363 1138.91 216.089 1137.79 cv
217.816 1136.67 219.687 1136.11 221.703 1136.11 cv
225 1136.11 227.562 1137.2 229.39 1139.37 cv
231.218 1141.54 232.132 1144.65 232.132 1148.7 cv
232.132 1150.5 li
214.953 1150.5 li
215.015 1153 215.746 1155.02 217.144 1156.56 cv
218.542 1158.1 220.32 1158.87 222.476 1158.87 cv
224.007 1158.87 225.304 1158.56 226.367 1157.93 cv
227.429 1157.31 228.359 1156.48 229.156 1155.45 cv
231.804 1157.51 li
229.679 1160.78 226.492 1162.41 222.242 1162.41 cv
cp
f
240.429 1149.54 mo
240.429 1152.42 241.023 1154.67 242.21 1156.29 cv
243.398 1157.92 245.039 1158.73 247.132 1158.73 cv
249.882 1158.73 251.89 1157.5 253.156 1155.03 cv
253.156 1143.38 li
251.859 1140.99 249.867 1139.79 247.179 1139.79 cv
245.054 1139.79 243.398 1140.61 242.21 1142.25 cv
241.023 1143.89 240.429 1146.32 240.429 1149.54 cv
cp
236.093 1149.05 mo
236.093 1145.16 237.015 1142.03 238.859 1139.66 cv
240.703 1137.3 243.117 1136.11 246.101 1136.11 cv
249.07 1136.11 251.421 1137.13 253.156 1139.16 cv
253.156 1125.94 li
257.492 1125.94 li
257.492 1161.94 li
253.507 1161.94 li
253.296 1159.22 li
251.562 1161.35 249.148 1162.41 246.054 1162.41 cv
243.117 1162.41 240.722 1161.21 238.871 1158.8 cv
237.019 1156.39 236.093 1153.25 236.093 1149.38 cv
236.093 1149.05 li
cp
f
279.382 1149.54 mo
279.382 1152.42 279.976 1154.67 281.164 1156.29 cv
282.351 1157.92 283.992 1158.73 286.085 1158.73 cv
288.835 1158.73 290.843 1157.5 292.109 1155.03 cv
292.109 1143.38 li
290.812 1140.99 288.82 1139.79 286.132 1139.79 cv
284.007 1139.79 282.351 1140.61 281.164 1142.25 cv
279.976 1143.89 279.382 1146.32 279.382 1149.54 cv
cp
275.046 1149.05 mo
275.046 1145.16 275.968 1142.03 277.812 1139.66 cv
279.656 1137.3 282.07 1136.11 285.054 1136.11 cv
288.023 1136.11 290.375 1137.13 292.109 1139.16 cv
292.109 1125.94 li
296.445 1125.94 li
296.445 1161.94 li
292.46 1161.94 li
292.25 1159.22 li
290.515 1161.35 288.101 1162.41 285.007 1162.41 cv
282.07 1162.41 279.675 1161.21 277.824 1158.8 cv
275.972 1156.39 275.046 1153.25 275.046 1149.38 cv
275.046 1149.05 li
cp
f
307.882 1161.94 mo
303.546 1161.94 li
303.546 1136.58 li
307.882 1136.58 li
307.882 1161.94 li
cp
303.195 1129.85 mo
303.195 1129.15 303.41 1128.56 303.839 1128.07 cv
304.269 1127.59 304.906 1127.35 305.75 1127.35 cv
306.593 1127.35 307.234 1127.59 307.671 1128.07 cv
308.109 1128.56 308.328 1129.15 308.328 1129.85 cv
308.328 1130.56 308.109 1131.14 307.671 1131.61 cv
307.234 1132.08 306.593 1132.32 305.75 1132.32 cv
304.906 1132.32 304.269 1132.08 303.839 1131.61 cv
303.41 1131.14 303.195 1130.56 303.195 1129.85 cv
cp
f
323.281 1158.64 mo
324.64 1158.64 325.929 1158.28 327.148 1157.58 cv
328.367 1156.88 329.25 1155.96 329.796 1154.84 cv
329.796 1149.64 li
326.398 1149.64 li
321.085 1149.64 318.429 1151.19 318.429 1154.3 cv
318.429 1155.66 318.882 1156.72 319.789 1157.49 cv
320.695 1158.25 321.859 1158.64 323.281 1158.64 cv
cp
330.476 1161.94 mo
330.226 1161.44 330.023 1160.55 329.867 1159.27 cv
327.851 1161.36 325.445 1162.41 322.648 1162.41 cv
320.148 1162.41 318.097 1161.7 316.496 1160.29 cv
314.894 1158.87 314.093 1157.08 314.093 1154.91 cv
314.093 1152.27 315.097 1150.22 317.105 1148.76 cv
319.113 1147.3 321.937 1146.57 325.578 1146.57 cv
329.796 1146.57 li
329.796 1144.57 li
329.796 1143.06 329.343 1141.85 328.437 1140.95 cv
327.531 1140.05 326.195 1139.6 324.429 1139.6 cv
322.882 1139.6 321.585 1140 320.539 1140.78 cv
319.492 1141.56 318.968 1142.5 318.968 1143.61 cv
314.609 1143.61 li
314.609 1142.35 315.058 1141.12 315.957 1139.94 cv
316.855 1138.76 318.074 1137.83 319.613 1137.14 cv
321.152 1136.46 322.843 1136.11 324.687 1136.11 cv
327.609 1136.11 329.898 1136.84 331.554 1138.3 cv
333.21 1139.76 334.07 1141.78 334.132 1144.34 cv
334.132 1156.01 li
334.132 1158.34 334.429 1160.19 335.023 1161.57 cv
335.023 1161.94 li
330.476 1161.94 li
cp
f
345.007 1136.58 mo
345.125 1139.39 li
346.984 1137.21 349.492 1136.11 352.648 1136.11 cv
356.195 1136.11 358.609 1137.47 359.89 1140.19 cv
360.734 1138.97 361.832 1137.99 363.183 1137.24 cv
364.535 1136.49 366.132 1136.11 367.976 1136.11 cv
373.539 1136.11 376.367 1139.06 376.46 1144.95 cv
376.46 1161.94 li
372.125 1161.94 li
372.125 1145.21 li
372.125 1143.39 371.71 1142.04 370.882 1141.14 cv
370.054 1140.24 368.664 1139.79 366.71 1139.79 cv
365.101 1139.79 363.765 1140.27 362.703 1141.23 cv
361.64 1142.19 361.023 1143.49 360.851 1145.11 cv
360.851 1161.94 li
356.492 1161.94 li
356.492 1145.32 li
356.492 1141.64 354.687 1139.79 351.078 1139.79 cv
348.234 1139.79 346.289 1141 345.242 1143.42 cv
345.242 1161.94 li
340.906 1161.94 li
340.906 1136.58 li
345.007 1136.58 li
cp
f
398.984 1136.58 mo
399.125 1139.77 li
401.062 1137.33 403.593 1136.11 406.718 1136.11 cv
412.078 1136.11 414.781 1139.14 414.828 1145.18 cv
414.828 1161.94 li
410.492 1161.94 li
410.492 1145.16 li
410.476 1143.33 410.058 1141.98 409.238 1141.1 cv
408.417 1140.23 407.14 1139.79 405.406 1139.79 cv
404 1139.79 402.765 1140.17 401.703 1140.92 cv
400.64 1141.67 399.812 1142.65 399.218 1143.87 cv
399.218 1161.94 li
394.882 1161.94 li
394.882 1136.58 li
398.984 1136.58 li
cp
f
424.578 1149.54 mo
424.578 1152.35 425.23 1154.61 426.535 1156.32 cv
427.839 1158.02 429.585 1158.87 431.773 1158.87 cv
433.976 1158.87 435.726 1158.01 437.023 1156.28 cv
438.32 1154.55 438.968 1152.14 438.968 1149.03 cv
438.968 1146.25 438.308 1143.99 436.988 1142.26 cv
435.667 1140.54 433.914 1139.67 431.726 1139.67 cv
429.585 1139.67 427.859 1140.53 426.546 1142.23 cv
425.234 1143.93 424.578 1146.37 424.578 1149.54 cv
cp
420.218 1149.03 mo
420.218 1146.54 420.707 1144.31 421.683 1142.32 cv
422.66 1140.34 424.019 1138.81 425.761 1137.73 cv
427.503 1136.65 429.492 1136.11 431.726 1136.11 cv
435.179 1136.11 437.972 1137.31 440.105 1139.7 cv
442.238 1142.09 443.304 1145.27 443.304 1149.24 cv
443.304 1149.54 li
443.304 1152.01 442.832 1154.23 441.886 1156.19 cv
440.941 1158.15 439.589 1159.67 437.832 1160.77 cv
436.074 1161.86 434.054 1162.41 431.773 1162.41 cv
428.335 1162.41 425.55 1161.21 423.417 1158.82 cv
421.285 1156.43 420.218 1153.27 420.218 1149.33 cv
420.218 1149.03 li
cp
f
452.843 1136.58 mo
452.984 1139.77 li
454.921 1137.33 457.453 1136.11 460.578 1136.11 cv
465.937 1136.11 468.64 1139.14 468.687 1145.18 cv
468.687 1161.94 li
464.351 1161.94 li
464.351 1145.16 li
464.335 1143.33 463.917 1141.98 463.097 1141.1 cv
462.277 1140.23 461 1139.79 459.265 1139.79 cv
457.859 1139.79 456.625 1140.17 455.562 1140.92 cv
454.5 1141.67 453.671 1142.65 453.078 1143.87 cv
453.078 1161.94 li
448.742 1161.94 li
448.742 1136.58 li
452.843 1136.58 li
cp
f
490.882 1159.43 mo
489.195 1161.42 486.718 1162.41 483.453 1162.41 cv
480.75 1162.41 478.691 1161.62 477.277 1160.05 cv
475.863 1158.48 475.148 1156.16 475.132 1153.08 cv
475.132 1136.58 li
479.468 1136.58 li
479.468 1152.96 li
479.468 1156.81 481.031 1158.73 484.156 1158.73 cv
487.468 1158.73 489.671 1157.5 490.765 1155.03 cv
490.765 1136.58 li
495.101 1136.58 li
495.101 1161.94 li
490.976 1161.94 li
490.882 1159.43 li
cp
f
505.765 1136.58 mo
505.882 1139.39 li
507.742 1137.21 510.25 1136.11 513.406 1136.11 cv
516.953 1136.11 519.367 1137.47 520.648 1140.19 cv
521.492 1138.97 522.589 1137.99 523.941 1137.24 cv
525.292 1136.49 526.89 1136.11 528.734 1136.11 cv
534.296 1136.11 537.125 1139.06 537.218 1144.95 cv
537.218 1161.94 li
532.882 1161.94 li
532.882 1145.21 li
532.882 1143.39 532.468 1142.04 531.64 1141.14 cv
530.812 1140.24 529.421 1139.79 527.468 1139.79 cv
525.859 1139.79 524.523 1140.27 523.46 1141.23 cv
522.398 1142.19 521.781 1143.49 521.609 1145.11 cv
521.609 1161.94 li
517.25 1161.94 li
517.25 1145.32 li
517.25 1141.64 515.445 1139.79 511.835 1139.79 cv
508.992 1139.79 507.046 1141 506 1143.42 cv
506 1161.94 li
501.664 1161.94 li
501.664 1136.58 li
505.765 1136.58 li
cp
f
547.835 1136.58 mo
547.953 1139.39 li
549.812 1137.21 552.32 1136.11 555.476 1136.11 cv
559.023 1136.11 561.437 1137.47 562.718 1140.19 cv
563.562 1138.97 564.66 1137.99 566.011 1137.24 cv
567.363 1136.49 568.96 1136.11 570.804 1136.11 cv
576.367 1136.11 579.195 1139.06 579.289 1144.95 cv
579.289 1161.94 li
574.953 1161.94 li
574.953 1145.21 li
574.953 1143.39 574.539 1142.04 573.71 1141.14 cv
572.882 1140.24 571.492 1139.79 569.539 1139.79 cv
567.929 1139.79 566.593 1140.27 565.531 1141.23 cv
564.468 1142.19 563.851 1143.49 563.679 1145.11 cv
563.679 1161.94 li
559.32 1161.94 li
559.32 1145.32 li
559.32 1141.64 557.515 1139.79 553.906 1139.79 cv
551.062 1139.79 549.117 1141 548.07 1143.42 cv
548.07 1161.94 li
543.734 1161.94 li
543.734 1136.58 li
547.835 1136.58 li
cp
f
594.125 1155.59 mo
600.031 1136.58 li
604.671 1136.58 li
594.476 1165.85 li
592.898 1170.07 590.39 1172.18 586.953 1172.18 cv
586.132 1172.11 li
584.515 1171.81 li
584.515 1168.29 li
585.687 1168.39 li
587.156 1168.39 588.3 1168.09 589.121 1167.5 cv
589.941 1166.9 590.617 1165.82 591.148 1164.24 cv
592.109 1161.66 li
583.062 1136.58 li
587.796 1136.58 li
594.125 1155.59 li
cp
f
624.523 1136.58 mo
624.664 1139.77 li
626.601 1137.33 629.132 1136.11 632.257 1136.11 cv
637.617 1136.11 640.32 1139.14 640.367 1145.18 cv
640.367 1161.94 li
636.031 1161.94 li
636.031 1145.16 li
636.015 1143.33 635.597 1141.98 634.777 1141.1 cv
633.957 1140.23 632.679 1139.79 630.945 1139.79 cv
629.539 1139.79 628.304 1140.17 627.242 1140.92 cv
626.179 1141.67 625.351 1142.65 624.757 1143.87 cv
624.757 1161.94 li
620.421 1161.94 li
620.421 1136.58 li
624.523 1136.58 li
cp
f
651.617 1161.94 mo
647.281 1161.94 li
647.281 1136.58 li
651.617 1136.58 li
651.617 1161.94 li
cp
646.929 1129.85 mo
646.929 1129.15 647.144 1128.56 647.574 1128.07 cv
648.003 1127.59 648.64 1127.35 649.484 1127.35 cv
650.328 1127.35 650.968 1127.59 651.406 1128.07 cv
651.843 1128.56 652.062 1129.15 652.062 1129.85 cv
652.062 1130.56 651.843 1131.14 651.406 1131.61 cv
650.968 1132.08 650.328 1132.32 649.484 1132.32 cv
648.64 1132.32 648.003 1132.08 647.574 1131.61 cv
647.144 1131.14 646.929 1130.56 646.929 1129.85 cv
cp
f
675.687 1149.05 mo
675.687 1146.1 675.117 1143.82 673.976 1142.21 cv
672.835 1140.6 671.195 1139.79 669.054 1139.79 cv
666.195 1139.79 664.14 1141.12 662.89 1143.78 cv
662.89 1154.75 li
664.218 1157.4 666.289 1158.73 669.101 1158.73 cv
671.179 1158.73 672.796 1157.92 673.953 1156.32 cv
675.109 1154.71 675.687 1152.28 675.687 1149.05 cv
cp
680.023 1149.54 mo
680.023 1153.42 679.132 1156.53 677.351 1158.88 cv
675.57 1161.23 673.179 1162.41 670.179 1162.41 cv
666.976 1162.41 664.5 1161.28 662.75 1159.01 cv
662.539 1161.94 li
658.554 1161.94 li
658.554 1125.94 li
662.89 1125.94 li
662.89 1139.37 li
664.64 1137.2 667.054 1136.11 670.132 1136.11 cv
673.21 1136.11 675.628 1137.28 677.386 1139.6 cv
679.144 1141.93 680.023 1145.12 680.023 1149.17 cv
680.023 1149.54 li
cp
f
689.82 1139.65 mo
691.742 1137.29 694.242 1136.11 697.32 1136.11 cv
702.679 1136.11 705.382 1139.14 705.429 1145.18 cv
705.429 1161.94 li
701.093 1161.94 li
701.093 1145.16 li
701.078 1143.33 700.66 1141.98 699.839 1141.1 cv
699.019 1140.23 697.742 1139.79 696.007 1139.79 cv
694.601 1139.79 693.367 1140.17 692.304 1140.92 cv
691.242 1141.67 690.414 1142.65 689.82 1143.87 cv
689.82 1161.94 li
685.484 1161.94 li
685.484 1125.94 li
689.82 1125.94 li
689.82 1139.65 li
cp
f
733.789 1139.67 mo
732.039 1139.67 730.57 1140.31 729.382 1141.58 cv
728.195 1142.86 727.46 1144.64 727.179 1146.94 cv
739.882 1146.94 li
739.882 1146.61 li
739.757 1144.41 739.164 1142.7 738.101 1141.49 cv
737.039 1140.28 735.601 1139.67 733.789 1139.67 cv
cp
734.328 1162.41 mo
730.89 1162.41 728.093 1161.28 725.937 1159.02 cv
723.781 1156.76 722.703 1153.75 722.703 1149.96 cv
722.703 1149.17 li
722.703 1146.65 723.183 1144.41 724.144 1142.43 cv
725.105 1140.45 726.449 1138.91 728.175 1137.79 cv
729.902 1136.67 731.773 1136.11 733.789 1136.11 cv
737.085 1136.11 739.648 1137.2 741.476 1139.37 cv
743.304 1141.54 744.218 1144.65 744.218 1148.7 cv
744.218 1150.5 li
727.039 1150.5 li
727.101 1153 727.832 1155.02 729.23 1156.56 cv
730.628 1158.1 732.406 1158.87 734.562 1158.87 cv
736.093 1158.87 737.39 1158.56 738.453 1157.93 cv
739.515 1157.31 740.445 1156.48 741.242 1155.45 cv
743.89 1157.51 li
741.765 1160.78 738.578 1162.41 734.328 1162.41 cv
cp
f
764.89 1159.43 mo
763.203 1161.42 760.726 1162.41 757.46 1162.41 cv
754.757 1162.41 752.699 1161.62 751.285 1160.05 cv
749.871 1158.48 749.156 1156.16 749.14 1153.08 cv
749.14 1136.58 li
753.476 1136.58 li
753.476 1152.96 li
753.476 1156.81 755.039 1158.73 758.164 1158.73 cv
761.476 1158.73 763.679 1157.5 764.773 1155.03 cv
764.773 1136.58 li
769.109 1136.58 li
769.109 1161.94 li
764.984 1161.94 li
764.89 1159.43 li
cp
f
780.406 1161.94 mo
776.07 1161.94 li
776.07 1136.58 li
780.406 1136.58 li
780.406 1161.94 li
cp
775.718 1129.85 mo
775.718 1129.15 775.933 1128.56 776.363 1128.07 cv
776.792 1127.59 777.429 1127.35 778.273 1127.35 cv
779.117 1127.35 779.757 1127.59 780.195 1128.07 cv
780.632 1128.56 780.851 1129.15 780.851 1129.85 cv
780.851 1130.56 780.632 1131.14 780.195 1131.61 cv
779.757 1132.08 779.117 1132.32 778.273 1132.32 cv
777.429 1132.32 776.792 1132.08 776.363 1131.61 cv
775.933 1131.14 775.718 1130.56 775.718 1129.85 cv
cp
f
802.109 1155.21 mo
802.109 1154.04 801.667 1153.13 800.785 1152.48 cv
799.902 1151.83 798.363 1151.28 796.167 1150.81 cv
793.972 1150.34 792.23 1149.78 790.941 1149.12 cv
789.652 1148.46 788.699 1147.68 788.082 1146.78 cv
787.464 1145.87 787.156 1144.79 787.156 1143.54 cv
787.156 1141.46 788.035 1139.71 789.792 1138.27 cv
791.55 1136.83 793.796 1136.11 796.531 1136.11 cv
799.406 1136.11 801.738 1136.85 803.527 1138.34 cv
805.316 1139.82 806.21 1141.72 806.21 1144.03 cv
801.851 1144.03 li
801.851 1142.85 801.347 1141.82 800.339 1140.96 cv
799.332 1140.1 798.062 1139.67 796.531 1139.67 cv
794.953 1139.67 793.718 1140.02 792.828 1140.71 cv
791.937 1141.39 791.492 1142.29 791.492 1143.4 cv
791.492 1144.45 791.906 1145.24 792.734 1145.77 cv
793.562 1146.3 795.058 1146.81 797.222 1147.29 cv
799.386 1147.78 801.14 1148.35 802.484 1149.03 cv
803.828 1149.7 804.824 1150.51 805.472 1151.45 cv
806.121 1152.4 806.445 1153.55 806.445 1154.91 cv
806.445 1157.17 805.539 1158.99 803.726 1160.36 cv
801.914 1161.73 799.562 1162.41 796.671 1162.41 cv
794.64 1162.41 792.843 1162.05 791.281 1161.33 cv
789.718 1160.61 788.496 1159.61 787.613 1158.32 cv
786.73 1157.03 786.289 1155.64 786.289 1154.14 cv
790.625 1154.14 li
790.703 1155.59 791.285 1156.74 792.371 1157.59 cv
793.457 1158.44 794.89 1158.87 796.671 1158.87 cv
798.312 1158.87 799.628 1158.54 800.621 1157.87 cv
801.613 1157.21 802.109 1156.32 802.109 1155.21 cv
cp
f
816.171 1136.58 mo
816.289 1139.39 li
818.148 1137.21 820.656 1136.11 823.812 1136.11 cv
827.359 1136.11 829.773 1137.47 831.054 1140.19 cv
831.898 1138.97 832.996 1137.99 834.347 1137.24 cv
835.699 1136.49 837.296 1136.11 839.14 1136.11 cv
844.703 1136.11 847.531 1139.06 847.625 1144.95 cv
847.625 1161.94 li
843.289 1161.94 li
843.289 1145.21 li
843.289 1143.39 842.875 1142.04 842.046 1141.14 cv
841.218 1140.24 839.828 1139.79 837.875 1139.79 cv
836.265 1139.79 834.929 1140.27 833.867 1141.23 cv
832.804 1142.19 832.187 1143.49 832.015 1145.11 cv
832.015 1161.94 li
827.656 1161.94 li
827.656 1145.32 li
827.656 1141.64 825.851 1139.79 822.242 1139.79 cv
819.398 1139.79 817.453 1141 816.406 1143.42 cv
816.406 1161.94 li
812.07 1161.94 li
812.07 1136.58 li
816.171 1136.58 li
cp
f
857.375 1149.54 mo
857.375 1152.35 858.027 1154.61 859.332 1156.32 cv
860.636 1158.02 862.382 1158.87 864.57 1158.87 cv
866.773 1158.87 868.523 1158.01 869.82 1156.28 cv
871.117 1154.55 871.765 1152.14 871.765 1149.03 cv
871.765 1146.25 871.105 1143.99 869.785 1142.26 cv
868.464 1140.54 866.71 1139.67 864.523 1139.67 cv
862.382 1139.67 860.656 1140.53 859.343 1142.23 cv
858.031 1143.93 857.375 1146.37 857.375 1149.54 cv
cp
853.015 1149.03 mo
853.015 1146.54 853.503 1144.31 854.48 1142.32 cv
855.457 1140.34 856.816 1138.81 858.558 1137.73 cv
860.3 1136.65 862.289 1136.11 864.523 1136.11 cv
867.976 1136.11 870.769 1137.31 872.902 1139.7 cv
875.035 1142.09 876.101 1145.27 876.101 1149.24 cv
876.101 1149.54 li
876.101 1152.01 875.628 1154.23 874.683 1156.19 cv
873.738 1158.15 872.386 1159.67 870.628 1160.77 cv
868.871 1161.86 866.851 1162.41 864.57 1162.41 cv
861.132 1162.41 858.347 1161.21 856.214 1158.82 cv
854.082 1156.43 853.015 1153.27 853.015 1149.33 cv
853.015 1149.03 li
cp
f
884.82 1149.54 mo
884.82 1152.42 885.414 1154.67 886.601 1156.29 cv
887.789 1157.92 889.429 1158.73 891.523 1158.73 cv
894.273 1158.73 896.281 1157.5 897.546 1155.03 cv
897.546 1143.38 li
896.25 1140.99 894.257 1139.79 891.57 1139.79 cv
889.445 1139.79 887.789 1140.61 886.601 1142.25 cv
885.414 1143.89 884.82 1146.32 884.82 1149.54 cv
cp
880.484 1149.05 mo
880.484 1145.16 881.406 1142.03 883.25 1139.66 cv
885.093 1137.3 887.507 1136.11 890.492 1136.11 cv
893.46 1136.11 895.812 1137.13 897.546 1139.16 cv
897.546 1125.94 li
901.882 1125.94 li
901.882 1161.94 li
897.898 1161.94 li
897.687 1159.22 li
895.953 1161.35 893.539 1162.41 890.445 1162.41 cv
887.507 1162.41 885.113 1161.21 883.261 1158.8 cv
881.41 1156.39 880.484 1153.25 880.484 1149.38 cv
880.484 1149.05 li
cp
f
542.25 1365.07 mo
235.843 1365.07 li
208.229 1365.07 185.843 1342.69 185.843 1315.07 cv
185.843 1315.07 li
185.843 1287.46 208.229 1265.07 235.843 1265.07 cv
542.25 1265.07 li
569.865 1265.07 592.25 1287.46 592.25 1315.07 cv
592.25 1315.07 li
592.25 1342.69 569.865 1365.07 542.25 1365.07 cv
cp
.929412 .411765 .4 rgb
f
266.281 1320.44 mo
282.453 1320.44 li
282.453 1324.12 li
261.758 1324.12 li
261.758 1290 li
266.281 1290 li
266.281 1320.44 li
cp
1 1 1 rgb
f
296.891 1301.86 mo
295.141 1301.86 293.672 1302.49 292.484 1303.77 cv
291.297 1305.04 290.563 1306.82 290.281 1309.12 cv
302.984 1309.12 li
302.984 1308.79 li
302.859 1306.59 302.266 1304.88 301.203 1303.67 cv
300.141 1302.46 298.703 1301.86 296.891 1301.86 cv
cp
297.43 1324.59 mo
293.992 1324.59 291.195 1323.46 289.039 1321.2 cv
286.883 1318.95 285.805 1315.93 285.805 1312.14 cv
285.805 1311.35 li
285.805 1308.83 286.285 1306.59 287.246 1304.61 cv
288.207 1302.63 289.551 1301.09 291.277 1299.97 cv
293.004 1298.85 294.875 1298.29 296.891 1298.29 cv
300.188 1298.29 302.75 1299.38 304.578 1301.55 cv
306.406 1303.72 307.32 1306.83 307.32 1310.88 cv
307.32 1312.68 li
290.141 1312.68 li
290.203 1315.18 290.934 1317.2 292.332 1318.74 cv
293.73 1320.28 295.508 1321.05 297.664 1321.05 cv
299.195 1321.05 300.492 1320.74 301.555 1320.11 cv
302.617 1319.49 303.547 1318.66 304.344 1317.63 cv
306.992 1319.69 li
304.867 1322.96 301.68 1324.59 297.43 1324.59 cv
cp
f
320.797 1320.82 mo
322.156 1320.82 323.445 1320.46 324.664 1319.76 cv
325.883 1319.06 326.766 1318.14 327.313 1317.02 cv
327.313 1311.82 li
323.914 1311.82 li
318.602 1311.82 315.945 1313.37 315.945 1316.48 cv
315.945 1317.84 316.398 1318.9 317.305 1319.67 cv
318.211 1320.43 319.375 1320.82 320.797 1320.82 cv
cp
327.992 1324.12 mo
327.742 1323.62 327.539 1322.73 327.383 1321.45 cv
325.367 1323.54 322.961 1324.59 320.164 1324.59 cv
317.664 1324.59 315.613 1323.88 314.012 1322.47 cv
312.41 1321.05 311.609 1319.26 311.609 1317.09 cv
311.609 1314.45 312.613 1312.4 314.621 1310.94 cv
316.629 1309.48 319.453 1308.75 323.094 1308.75 cv
327.313 1308.75 li
327.313 1306.75 li
327.313 1305.24 326.859 1304.03 325.953 1303.13 cv
325.047 1302.23 323.711 1301.79 321.945 1301.79 cv
320.398 1301.79 319.102 1302.18 318.055 1302.96 cv
317.008 1303.74 316.484 1304.68 316.484 1305.79 cv
312.125 1305.79 li
312.125 1304.53 312.574 1303.3 313.473 1302.13 cv
314.371 1300.95 315.59 1300.01 317.129 1299.32 cv
318.668 1298.64 320.359 1298.29 322.203 1298.29 cv
325.125 1298.29 327.414 1299.02 329.07 1300.48 cv
330.727 1301.95 331.586 1303.96 331.648 1306.52 cv
331.648 1318.19 li
331.648 1320.52 331.945 1322.37 332.539 1323.75 cv
332.539 1324.12 li
327.992 1324.12 li
cp
f
350.703 1302.65 mo
350.047 1302.54 349.336 1302.49 348.57 1302.49 cv
345.727 1302.49 343.797 1303.7 342.781 1306.12 cv
342.781 1324.12 li
338.445 1324.12 li
338.445 1298.76 li
342.664 1298.76 li
342.734 1301.69 li
344.156 1299.43 346.172 1298.29 348.781 1298.29 cv
349.625 1298.29 350.266 1298.4 350.703 1298.62 cv
350.703 1302.65 li
cp
f
358.789 1298.76 mo
358.93 1301.95 li
360.867 1299.51 363.398 1298.29 366.523 1298.29 cv
371.883 1298.29 374.586 1301.32 374.633 1307.36 cv
374.633 1324.12 li
370.297 1324.12 li
370.297 1307.34 li
370.281 1305.51 369.863 1304.16 369.043 1303.29 cv
368.223 1302.41 366.945 1301.97 365.211 1301.97 cv
363.805 1301.97 362.57 1302.35 361.508 1303.1 cv
360.445 1303.85 359.617 1304.83 359.023 1306.05 cv
359.023 1324.12 li
354.688 1324.12 li
354.688 1298.76 li
358.789 1298.76 li
cp
f
399.547 1290 mo
410.703 1317.84 li
421.859 1290 li
427.695 1290 li
427.695 1324.12 li
423.195 1324.12 li
423.195 1310.83 li
423.617 1296.49 li
412.414 1324.12 li
408.969 1324.12 li
397.789 1296.56 li
398.234 1310.83 li
398.234 1324.12 li
393.734 1324.12 li
393.734 1290 li
399.547 1290 li
cp
f
438.172 1311.72 mo
438.172 1314.54 438.824 1316.79 440.129 1318.5 cv
441.434 1320.2 443.18 1321.05 445.367 1321.05 cv
447.57 1321.05 449.32 1320.19 450.617 1318.46 cv
451.914 1316.73 452.563 1314.32 452.563 1311.21 cv
452.563 1308.43 451.902 1306.17 450.582 1304.45 cv
449.262 1302.72 447.508 1301.86 445.32 1301.86 cv
443.18 1301.86 441.453 1302.71 440.141 1304.41 cv
438.828 1306.11 438.172 1308.55 438.172 1311.72 cv
cp
433.813 1311.21 mo
433.813 1308.72 434.301 1306.49 435.277 1304.5 cv
436.254 1302.52 437.613 1300.99 439.355 1299.91 cv
441.098 1298.83 443.086 1298.29 445.32 1298.29 cv
448.773 1298.29 451.566 1299.49 453.699 1301.88 cv
455.832 1304.27 456.898 1307.45 456.898 1311.42 cv
456.898 1311.72 li
456.898 1314.19 456.426 1316.41 455.48 1318.37 cv
454.535 1320.33 453.184 1321.86 451.426 1322.95 cv
449.668 1324.04 447.648 1324.59 445.367 1324.59 cv
441.93 1324.59 439.145 1323.39 437.012 1321 cv
434.879 1318.61 433.813 1315.45 433.813 1311.51 cv
433.813 1311.21 li
cp
f
474.594 1302.65 mo
473.938 1302.54 473.227 1302.49 472.461 1302.49 cv
469.617 1302.49 467.688 1303.7 466.672 1306.12 cv
466.672 1324.12 li
462.336 1324.12 li
462.336 1298.76 li
466.555 1298.76 li
466.625 1301.69 li
468.047 1299.43 470.063 1298.29 472.672 1298.29 cv
473.516 1298.29 474.156 1298.4 474.594 1298.62 cv
474.594 1302.65 li
cp
f
488.117 1301.86 mo
486.367 1301.86 484.898 1302.49 483.711 1303.77 cv
482.523 1305.04 481.789 1306.82 481.508 1309.12 cv
494.211 1309.12 li
494.211 1308.79 li
494.086 1306.59 493.492 1304.88 492.43 1303.67 cv
491.367 1302.46 489.93 1301.86 488.117 1301.86 cv
cp
488.656 1324.59 mo
485.219 1324.59 482.422 1323.46 480.266 1321.2 cv
478.109 1318.95 477.031 1315.93 477.031 1312.14 cv
477.031 1311.35 li
477.031 1308.83 477.512 1306.59 478.473 1304.61 cv
479.434 1302.63 480.777 1301.09 482.504 1299.97 cv
484.23 1298.85 486.102 1298.29 488.117 1298.29 cv
491.414 1298.29 493.977 1299.38 495.805 1301.55 cv
497.633 1303.72 498.547 1306.83 498.547 1310.88 cv
498.547 1312.68 li
481.367 1312.68 li
481.43 1315.18 482.16 1317.2 483.559 1318.74 cv
484.957 1320.28 486.734 1321.05 488.891 1321.05 cv
490.422 1321.05 491.719 1320.74 492.781 1320.11 cv
493.844 1319.49 494.773 1318.66 495.57 1317.63 cv
498.219 1319.69 li
496.094 1322.96 492.906 1324.59 488.656 1324.59 cv
cp
f
311.843 228.905 mo
311.843 263.699 283.637 291.905 248.843 291.905 cv
214.049 291.905 185.843 263.699 185.843 228.905 cv
185.843 194.111 214.049 165.905 248.843 165.905 cv
283.637 165.905 311.843 194.111 311.843 228.905 cv
cp
.223529 .380392 .760784 rgb
f
293.391 228.905 mo
293.391 253.508 273.446 273.452 248.843 273.452 cv
224.24 273.452 204.295 253.508 204.295 228.905 cv
204.295 204.302 224.24 184.357 248.843 184.357 cv
273.446 184.357 293.391 204.302 293.391 228.905 cv
cp
.572549 .709804 .980392 rgb
f
474.655 232.772 mo
483.356 232.772 li
478.997 220.801 li
474.655 232.772 li
cp
484.358 235.532 mo
473.636 235.532 li
471.228 242.229 li
467.747 242.229 li
477.521 216.635 li
480.474 216.635 li
490.265 242.229 li
486.802 242.229 li
484.358 235.532 li
cp
.0431373 .027451 .329412 rgb
f
506.05 232.561 mo
506.05 230.346 505.622 228.635 504.767 227.428 cv
503.911 226.221 502.681 225.618 501.075 225.618 cv
498.931 225.618 497.39 226.614 496.452 228.606 cv
496.452 236.833 li
497.448 238.825 499.001 239.821 501.11 239.821 cv
502.669 239.821 503.882 239.217 504.75 238.01 cv
505.617 236.803 506.05 234.987 506.05 232.561 cv
cp
509.302 232.93 mo
509.302 235.836 508.634 238.171 507.298 239.935 cv
505.962 241.699 504.169 242.581 501.919 242.581 cv
499.517 242.581 497.659 241.731 496.347 240.032 cv
496.188 242.229 li
493.2 242.229 li
493.2 215.229 li
496.452 215.229 li
496.452 225.301 li
497.765 223.672 499.575 222.858 501.884 222.858 cv
504.192 222.858 506.006 223.731 507.325 225.477 cv
508.643 227.223 509.302 229.614 509.302 232.649 cv
509.302 232.93 li
cp
f
515.806 232.93 mo
515.806 235.04 516.295 236.733 517.273 238.01 cv
518.252 239.288 519.562 239.926 521.202 239.926 cv
522.854 239.926 524.167 239.279 525.14 237.984 cv
526.112 236.689 526.599 234.875 526.599 232.543 cv
526.599 230.458 526.104 228.767 525.113 227.472 cv
524.123 226.177 522.808 225.53 521.167 225.53 cv
519.562 225.53 518.267 226.168 517.282 227.446 cv
516.298 228.723 515.806 230.551 515.806 232.93 cv
cp
512.536 232.543 mo
512.536 230.68 512.902 229.004 513.635 227.516 cv
514.367 226.028 515.387 224.879 516.693 224.071 cv
518 223.262 519.492 222.858 521.167 222.858 cv
523.757 222.858 525.852 223.754 527.451 225.547 cv
529.051 227.34 529.851 229.725 529.851 232.702 cv
529.851 232.93 li
529.851 234.782 529.496 236.443 528.788 237.914 cv
528.078 239.384 527.064 240.53 525.746 241.35 cv
524.428 242.17 522.913 242.581 521.202 242.581 cv
518.624 242.581 516.535 241.684 514.936 239.891 cv
513.336 238.098 512.536 235.725 512.536 232.772 cv
512.536 232.543 li
cp
f
545.671 240.348 mo
544.405 241.836 542.548 242.581 540.099 242.581 cv
538.071 242.581 536.527 241.992 535.467 240.814 cv
534.406 239.636 533.87 237.893 533.858 235.584 cv
533.858 223.209 li
537.11 223.209 li
537.11 235.497 li
537.11 238.379 538.282 239.821 540.626 239.821 cv
543.11 239.821 544.763 238.895 545.583 237.043 cv
545.583 223.209 li
548.835 223.209 li
548.835 242.229 li
545.742 242.229 li
545.671 240.348 li
cp
f
558.187 218.604 mo
558.187 223.209 li
561.737 223.209 li
561.737 225.723 li
558.187 225.723 li
558.187 237.533 li
558.187 238.295 558.345 238.868 558.661 239.249 cv
558.978 239.63 559.517 239.821 560.278 239.821 cv
560.653 239.821 561.169 239.75 561.825 239.61 cv
561.825 242.231 li
560.97 242.464 560.138 242.581 559.329 242.581 cv
557.876 242.581 556.78 242.141 556.042 241.262 cv
555.304 240.383 554.935 239.135 554.935 237.518 cv
554.935 225.723 li
551.472 225.723 li
551.472 223.209 li
554.935 223.209 li
554.935 218.604 li
558.187 218.604 li
cp
f
586.188 240.348 mo
584.923 241.836 583.065 242.581 580.616 242.581 cv
578.589 242.581 577.045 241.992 575.984 240.814 cv
574.924 239.636 574.388 237.893 574.376 235.584 cv
574.376 223.209 li
577.628 223.209 li
577.628 235.497 li
577.628 238.379 578.8 239.821 581.144 239.821 cv
583.628 239.821 585.28 238.895 586.101 237.043 cv
586.101 223.209 li
589.353 223.209 li
589.353 242.229 li
586.259 242.229 li
586.188 240.348 li
cp
f
605.366 237.184 mo
605.366 236.305 605.035 235.623 604.373 235.136 cv
603.711 234.65 602.557 234.231 600.91 233.879 cv
599.264 233.528 597.957 233.106 596.99 232.614 cv
596.023 232.122 595.309 231.536 594.846 230.856 cv
594.383 230.176 594.151 229.368 594.151 228.43 cv
594.151 226.872 594.811 225.553 596.129 224.475 cv
597.447 223.397 599.132 222.858 601.183 222.858 cv
603.339 222.858 605.088 223.415 606.43 224.528 cv
607.771 225.641 608.442 227.065 608.442 228.799 cv
605.173 228.799 li
605.173 227.909 604.795 227.141 604.039 226.497 cv
603.283 225.852 602.331 225.53 601.183 225.53 cv
599.999 225.53 599.073 225.788 598.405 226.303 cv
597.737 226.819 597.403 227.493 597.403 228.325 cv
597.403 229.11 597.714 229.702 598.335 230.1 cv
598.956 230.499 600.078 230.879 601.701 231.243 cv
603.324 231.606 604.64 232.04 605.647 232.543 cv
606.655 233.047 607.402 233.654 607.889 234.363 cv
608.375 235.072 608.618 235.936 608.618 236.956 cv
608.618 238.655 607.938 240.017 606.579 241.042 cv
605.22 242.068 603.456 242.581 601.288 242.581 cv
599.765 242.581 598.417 242.311 597.245 241.772 cv
596.073 241.233 595.156 240.48 594.494 239.513 cv
593.832 238.546 593.501 237.5 593.501 236.375 cv
596.753 236.375 li
596.812 237.465 597.248 238.33 598.063 238.968 cv
598.877 239.607 599.952 239.926 601.288 239.926 cv
602.519 239.926 603.506 239.677 604.25 239.179 cv
604.994 238.681 605.366 238.016 605.366 237.184 cv
cp
f
815.105 225.178 mo
821.17 225.178 li
822.975 225.178 824.357 224.753 825.318 223.902 cv
826.279 223.051 826.76 221.821 826.76 220.212 cv
826.76 218.687 826.279 217.465 825.318 216.55 cv
824.357 215.634 823.039 215.159 821.363 215.124 cv
815.105 215.124 li
815.105 225.178 li
cp
815.105 227.938 mo
815.105 237.958 li
811.73 237.958 li
811.73 212.364 li
821.17 212.364 li
823.971 212.364 826.165 213.079 827.753 214.508 cv
829.341 215.938 830.135 217.831 830.135 220.186 cv
830.135 222.67 829.358 224.583 827.806 225.925 cv
826.253 227.267 824.029 227.938 821.135 227.938 cv
815.105 227.938 li
cp
f
843.125 221.856 mo
842.633 221.774 842.1 221.733 841.525 221.733 cv
839.393 221.733 837.945 222.641 837.184 224.458 cv
837.184 237.958 li
833.932 237.958 li
833.932 218.938 li
837.096 218.938 li
837.148 221.135 li
838.215 219.436 839.727 218.586 841.684 218.586 cv
842.316 218.586 842.797 218.668 843.125 218.833 cv
843.125 221.856 li
cp
f
848.17 228.659 mo
848.17 230.768 848.659 232.461 849.638 233.739 cv
850.616 235.016 851.926 235.655 853.566 235.655 cv
855.219 235.655 856.531 235.007 857.504 233.712 cv
858.477 232.417 858.963 230.604 858.963 228.272 cv
858.963 226.186 858.468 224.496 857.478 223.201 cv
856.487 221.906 855.172 221.258 853.531 221.258 cv
851.926 221.258 850.631 221.897 849.646 223.174 cv
848.662 224.452 848.17 226.28 848.17 228.659 cv
cp
844.9 228.272 mo
844.9 226.409 845.267 224.733 845.999 223.245 cv
846.731 221.756 847.751 220.608 849.058 219.799 cv
850.364 218.991 851.855 218.586 853.531 218.586 cv
856.121 218.586 858.216 219.483 859.815 221.276 cv
861.415 223.069 862.215 225.454 862.215 228.43 cv
862.215 228.659 li
862.215 230.51 861.86 232.171 861.151 233.642 cv
860.442 235.113 859.429 236.258 858.11 237.079 cv
856.792 237.899 855.277 238.309 853.566 238.309 cv
850.988 238.309 848.899 237.413 847.3 235.62 cv
845.7 233.827 844.9 231.454 844.9 228.5 cv
844.9 228.272 li
cp
f
868.789 228.659 mo
868.789 230.803 869.229 232.488 870.107 233.712 cv
870.986 234.937 872.217 235.549 873.799 235.549 cv
875.85 235.549 877.355 234.618 878.316 232.754 cv
878.316 224.071 li
877.32 222.254 875.826 221.346 873.834 221.346 cv
872.252 221.346 871.016 221.961 870.125 223.192 cv
869.234 224.422 868.789 226.245 868.789 228.659 cv
cp
865.52 228.29 mo
865.52 225.325 866.205 222.966 867.576 221.214 cv
868.947 219.462 870.764 218.586 873.025 218.586 cv
875.346 218.586 877.156 219.407 878.457 221.047 cv
878.615 218.938 li
881.586 218.938 li
881.586 237.5 li
881.586 239.961 880.856 241.901 879.397 243.319 cv
877.938 244.737 875.979 245.446 873.518 245.446 cv
872.146 245.446 870.805 245.153 869.492 244.567 cv
868.18 243.981 867.178 243.178 866.486 242.159 cv
868.174 240.208 li
869.568 241.93 871.273 242.792 873.289 242.792 cv
874.871 242.792 876.104 242.346 876.989 241.456 cv
877.874 240.565 878.316 239.311 878.316 237.694 cv
878.316 236.059 li
877.016 237.559 875.24 238.309 872.99 238.309 cv
870.764 238.309 868.962 237.413 867.585 235.62 cv
866.208 233.827 865.52 231.383 865.52 228.29 cv
cp
f
895.684 221.856 mo
895.191 221.774 894.658 221.733 894.084 221.733 cv
891.951 221.733 890.504 222.641 889.742 224.458 cv
889.742 237.958 li
886.49 237.958 li
886.49 218.938 li
889.654 218.938 li
889.707 221.135 li
890.773 219.436 892.285 218.586 894.242 218.586 cv
894.875 218.586 895.355 218.668 895.684 218.833 cv
895.684 221.856 li
cp
f
904.314 235.479 mo
905.334 235.479 906.301 235.215 907.215 234.688 cv
908.129 234.161 908.791 233.475 909.201 232.631 cv
909.201 228.729 li
906.652 228.729 li
902.668 228.729 900.676 229.895 900.676 232.227 cv
900.676 233.247 901.016 234.043 901.695 234.618 cv
902.375 235.192 903.248 235.479 904.314 235.479 cv
cp
909.711 237.958 mo
909.523 237.583 909.371 236.915 909.254 235.954 cv
907.742 237.524 905.938 238.309 903.84 238.309 cv
901.965 238.309 900.427 237.779 899.226 236.718 cv
898.024 235.658 897.424 234.313 897.424 232.684 cv
897.424 230.704 898.177 229.166 899.683 228.07 cv
901.188 226.974 903.307 226.426 906.037 226.426 cv
909.201 226.426 li
909.201 224.932 li
909.201 223.795 908.861 222.89 908.182 222.216 cv
907.502 221.542 906.5 221.206 905.176 221.206 cv
904.016 221.206 903.043 221.499 902.258 222.084 cv
901.473 222.67 901.08 223.379 901.08 224.211 cv
897.811 224.211 li
897.811 223.262 898.147 222.345 898.821 221.46 cv
899.495 220.576 900.409 219.875 901.563 219.36 cv
902.718 218.844 903.986 218.586 905.369 218.586 cv
907.561 218.586 909.277 219.134 910.52 220.23 cv
911.762 221.326 912.406 222.834 912.453 224.756 cv
912.453 233.51 li
912.453 235.256 912.676 236.645 913.121 237.676 cv
913.121 237.958 li
909.711 237.958 li
cp
f
920.609 218.938 mo
920.697 221.047 li
922.092 219.407 923.973 218.586 926.34 218.586 cv
929 218.586 930.811 219.606 931.771 221.645 cv
932.404 220.731 933.228 219.993 934.241 219.43 cv
935.255 218.868 936.453 218.586 937.836 218.586 cv
942.008 218.586 944.129 220.795 944.199 225.213 cv
944.199 237.958 li
940.947 237.958 li
940.947 225.407 li
940.947 224.047 940.637 223.031 940.016 222.357 cv
939.395 221.683 938.352 221.346 936.887 221.346 cv
935.68 221.346 934.678 221.707 933.881 222.427 cv
933.084 223.148 932.621 224.118 932.492 225.336 cv
932.492 237.958 li
929.223 237.958 li
929.223 225.495 li
929.223 222.729 927.869 221.346 925.162 221.346 cv
923.029 221.346 921.57 222.254 920.785 224.071 cv
920.785 237.958 li
917.533 237.958 li
917.533 218.938 li
920.609 218.938 li
cp
f
960.178 232.913 mo
960.178 232.034 959.847 231.351 959.185 230.865 cv
958.522 230.378 957.368 229.959 955.722 229.608 cv
954.075 229.256 952.769 228.834 951.802 228.342 cv
950.835 227.85 950.12 227.264 949.657 226.584 cv
949.194 225.905 948.963 225.096 948.963 224.159 cv
948.963 222.6 949.622 221.282 950.94 220.204 cv
952.259 219.125 953.943 218.586 955.994 218.586 cv
958.15 218.586 959.899 219.143 961.241 220.256 cv
962.583 221.37 963.254 222.793 963.254 224.528 cv
959.984 224.528 li
959.984 223.637 959.606 222.87 958.851 222.225 cv
958.095 221.581 957.143 221.258 955.994 221.258 cv
954.811 221.258 953.885 221.516 953.217 222.032 cv
952.549 222.547 952.215 223.221 952.215 224.053 cv
952.215 224.838 952.525 225.43 953.146 225.829 cv
953.768 226.227 954.89 226.608 956.513 226.971 cv
958.136 227.334 959.451 227.768 960.459 228.272 cv
961.467 228.776 962.214 229.382 962.7 230.091 cv
963.187 230.8 963.43 231.665 963.43 232.684 cv
963.43 234.383 962.75 235.746 961.391 236.771 cv
960.031 237.796 958.268 238.309 956.1 238.309 cv
954.576 238.309 953.229 238.04 952.057 237.5 cv
950.885 236.961 949.968 236.208 949.306 235.242 cv
948.644 234.275 948.313 233.229 948.313 232.104 cv
951.564 232.104 li
951.623 233.194 952.06 234.058 952.874 234.697 cv
953.688 235.335 954.764 235.655 956.1 235.655 cv
957.33 235.655 958.317 235.406 959.062 234.908 cv
959.806 234.41 960.178 233.745 960.178 232.913 cv
cp
f
1166.38 233.581 mo
1166.07 236.288 1165.07 238.376 1163.39 239.847 cv
1161.7 241.318 1159.47 242.053 1156.68 242.053 cv
1153.66 242.053 1151.23 240.969 1149.41 238.801 cv
1147.59 236.633 1146.68 233.733 1146.68 230.1 cv
1146.68 227.639 li
1146.68 225.26 1147.1 223.168 1147.95 221.364 cv
1148.8 219.559 1150.01 218.173 1151.57 217.207 cv
1153.12 216.24 1154.93 215.756 1156.98 215.756 cv
1159.7 215.756 1161.88 216.515 1163.52 218.033 cv
1165.16 219.55 1166.11 221.651 1166.38 224.334 cv
1162.99 224.334 li
1162.7 222.29 1162.06 220.808 1161.08 219.891 cv
1160.11 218.975 1158.74 218.516 1156.98 218.516 cv
1154.82 218.516 1153.13 219.314 1151.91 220.909 cv
1150.68 222.504 1150.07 224.773 1150.07 227.717 cv
1150.07 230.198 li
1150.07 232.978 1150.65 235.188 1151.81 236.831 cv
1152.97 238.473 1154.59 239.293 1156.68 239.293 cv
1158.56 239.293 1159.99 238.869 1161 238.019 cv
1162 237.169 1162.66 235.69 1162.99 233.581 cv
1166.38 233.581 li
cp
f
1172.89 232.403 mo
1172.89 234.512 1173.38 236.206 1174.36 237.483 cv
1175.33 238.76 1176.64 239.399 1178.28 239.399 cv
1179.94 239.399 1181.25 238.751 1182.22 237.457 cv
1183.19 236.162 1183.68 234.348 1183.68 232.016 cv
1183.68 229.93 1183.19 228.24 1182.2 226.945 cv
1181.2 225.65 1179.89 225.002 1178.25 225.002 cv
1176.64 225.002 1175.35 225.641 1174.36 226.918 cv
1173.38 228.196 1172.89 230.024 1172.89 232.403 cv
cp
1169.62 232.016 mo
1169.62 230.153 1169.98 228.477 1170.72 226.989 cv
1171.45 225.5 1172.47 224.352 1173.77 223.543 cv
1175.08 222.735 1176.57 222.331 1178.25 222.331 cv
1180.84 222.331 1182.93 223.227 1184.53 225.02 cv
1186.13 226.813 1186.93 229.198 1186.93 232.174 cv
1186.93 232.403 li
1186.93 234.254 1186.58 235.916 1185.87 237.386 cv
1185.16 238.857 1184.15 240.002 1182.83 240.823 cv
1181.51 241.643 1180 242.053 1178.28 242.053 cv
1175.71 242.053 1173.62 241.157 1172.02 239.364 cv
1170.42 237.571 1169.62 235.198 1169.62 232.245 cv
1169.62 232.016 li
cp
f
1194.09 222.682 mo
1194.19 225.073 li
1195.65 223.245 1197.54 222.331 1199.89 222.331 cv
1203.91 222.331 1205.93 224.598 1205.97 229.133 cv
1205.97 241.702 li
1202.72 241.702 li
1202.72 229.116 li
1202.71 227.745 1202.39 226.731 1201.78 226.075 cv
1201.16 225.418 1200.2 225.09 1198.9 225.09 cv
1197.85 225.09 1196.92 225.372 1196.13 225.934 cv
1195.33 226.497 1194.71 227.235 1194.26 228.149 cv
1194.26 241.702 li
1191.01 241.702 li
1191.01 222.682 li
1194.09 222.682 li
cp
f
1215.29 218.077 mo
1215.29 222.682 li
1218.84 222.682 li
1218.84 225.196 li
1215.29 225.196 li
1215.29 237.005 li
1215.29 237.768 1215.44 238.34 1215.76 238.722 cv
1216.08 239.103 1216.62 239.293 1217.38 239.293 cv
1217.75 239.293 1218.27 239.223 1218.92 239.083 cv
1218.92 241.704 li
1218.07 241.937 1217.24 242.053 1216.43 242.053 cv
1214.98 242.053 1213.88 241.614 1213.14 240.735 cv
1212.4 239.856 1212.03 238.608 1212.03 236.991 cv
1212.03 225.196 li
1208.57 225.196 li
1208.57 222.682 li
1212.03 222.682 li
1212.03 218.077 li
1215.29 218.077 li
cp
f
1228.98 239.223 mo
1230 239.223 1230.97 238.959 1231.88 238.432 cv
1232.79 237.905 1233.46 237.219 1233.87 236.375 cv
1233.87 232.473 li
1231.32 232.473 li
1227.33 232.473 1225.34 233.639 1225.34 235.971 cv
1225.34 236.991 1225.68 237.788 1226.36 238.362 cv
1227.04 238.936 1227.91 239.223 1228.98 239.223 cv
cp
1234.38 241.702 mo
1234.19 241.327 1234.04 240.659 1233.92 239.698 cv
1232.41 241.268 1230.6 242.053 1228.5 242.053 cv
1226.63 242.053 1225.09 241.523 1223.89 240.462 cv
1222.69 239.402 1222.09 238.057 1222.09 236.428 cv
1222.09 234.448 1222.84 232.91 1224.35 231.814 cv
1225.85 230.718 1227.97 230.17 1230.7 230.17 cv
1233.87 230.17 li
1233.87 228.676 li
1233.87 227.54 1233.53 226.634 1232.85 225.96 cv
1232.17 225.287 1231.17 224.95 1229.84 224.95 cv
1228.68 224.95 1227.71 225.243 1226.92 225.829 cv
1226.14 226.415 1225.75 227.124 1225.75 227.956 cv
1222.48 227.956 li
1222.48 227.006 1222.81 226.089 1223.49 225.205 cv
1224.16 224.32 1225.07 223.62 1226.23 223.104 cv
1227.38 222.588 1228.65 222.331 1230.03 222.331 cv
1232.23 222.331 1233.94 222.878 1235.18 223.974 cv
1236.43 225.07 1237.07 226.579 1237.12 228.5 cv
1237.12 237.254 li
1237.12 239 1237.34 240.389 1237.79 241.42 cv
1237.79 241.702 li
1234.38 241.702 li
cp
f
1249.84 239.399 mo
1251 239.399 1252.02 239.047 1252.89 238.344 cv
1253.75 237.641 1254.23 236.762 1254.33 235.708 cv
1257.4 235.708 li
1257.34 236.797 1256.97 237.834 1256.28 238.819 cv
1255.59 239.803 1254.66 240.588 1253.51 241.174 cv
1252.36 241.76 1251.13 242.053 1249.84 242.053 cv
1247.25 242.053 1245.2 241.189 1243.67 239.46 cv
1242.14 237.732 1241.37 235.368 1241.37 232.368 cv
1241.37 231.823 li
1241.37 229.971 1241.71 228.325 1242.39 226.883 cv
1243.07 225.442 1244.05 224.323 1245.32 223.526 cv
1246.59 222.729 1248.09 222.331 1249.83 222.331 cv
1251.96 222.331 1253.73 222.969 1255.14 224.247 cv
1256.56 225.524 1257.31 227.182 1257.4 229.221 cv
1254.33 229.221 li
1254.23 227.991 1253.77 226.98 1252.93 226.189 cv
1252.09 225.398 1251.06 225.002 1249.83 225.002 cv
1248.17 225.002 1246.89 225.597 1245.99 226.787 cv
1245.08 227.976 1244.62 229.696 1244.62 231.946 cv
1244.62 232.561 li
1244.62 234.752 1245.08 236.44 1245.98 237.624 cv
1246.88 238.807 1248.17 239.399 1249.84 239.399 cv
cp
f
1265.47 218.077 mo
1265.47 222.682 li
1269.02 222.682 li
1269.02 225.196 li
1265.47 225.196 li
1265.47 237.005 li
1265.47 237.768 1265.63 238.34 1265.95 238.722 cv
1266.26 239.103 1266.8 239.293 1267.56 239.293 cv
1267.94 239.293 1268.45 239.223 1269.11 239.083 cv
1269.11 241.704 li
1268.25 241.937 1267.42 242.053 1266.61 242.053 cv
1265.16 242.053 1264.07 241.614 1263.33 240.735 cv
1262.59 239.856 1262.22 238.608 1262.22 236.991 cv
1262.22 225.196 li
1258.76 225.196 li
1258.76 222.682 li
1262.22 222.682 li
1262.22 218.077 li
1265.47 218.077 li
cp
f
1283.89 236.657 mo
1283.89 235.778 1283.56 235.095 1282.9 234.609 cv
1282.24 234.123 1281.08 233.704 1279.44 233.352 cv
1277.79 233 1276.48 232.579 1275.52 232.086 cv
1274.55 231.594 1273.84 231.008 1273.37 230.329 cv
1272.91 229.649 1272.68 228.84 1272.68 227.903 cv
1272.68 226.344 1273.34 225.026 1274.66 223.948 cv
1275.97 222.87 1277.66 222.331 1279.71 222.331 cv
1281.87 222.331 1283.62 222.887 1284.96 224 cv
1286.3 225.114 1286.97 226.538 1286.97 228.272 cv
1283.7 228.272 li
1283.7 227.381 1283.32 226.614 1282.57 225.969 cv
1281.81 225.325 1280.86 225.002 1279.71 225.002 cv
1278.53 225.002 1277.6 225.26 1276.93 225.776 cv
1276.26 226.292 1275.93 226.965 1275.93 227.797 cv
1275.93 228.583 1276.24 229.174 1276.86 229.573 cv
1277.48 229.971 1278.61 230.352 1280.23 230.715 cv
1281.85 231.079 1283.17 231.512 1284.17 232.016 cv
1285.18 232.52 1285.93 233.126 1286.42 233.835 cv
1286.9 234.544 1287.15 235.409 1287.15 236.428 cv
1287.15 238.127 1286.47 239.49 1285.11 240.515 cv
1283.75 241.541 1281.98 242.053 1279.82 242.053 cv
1278.29 242.053 1276.94 241.784 1275.77 241.245 cv
1274.6 240.706 1273.68 239.953 1273.02 238.986 cv
1272.36 238.019 1272.03 236.973 1272.03 235.848 cv
1275.28 235.848 li
1275.34 236.938 1275.77 237.802 1276.59 238.441 cv
1277.4 239.08 1278.48 239.399 1279.82 239.399 cv
1281.05 239.399 1282.03 239.15 1282.78 238.652 cv
1283.52 238.154 1283.89 237.489 1283.89 236.657 cv
cp
f
3023.08 180.905 mo
2996.61 180.905 2975.08 202.438 2975.08 228.905 cv
2975.08 255.372 2996.61 276.905 3023.08 276.905 cv
3186.07 276.905 li
3212.54 276.905 3234.07 255.372 3234.07 228.905 cv
3234.07 202.438 3212.54 180.905 3186.07 180.905 cv
3023.08 180.905 li
cp
3186.07 280.905 mo
3023.08 280.905 li
2994.4 280.905 2971.08 257.578 2971.08 228.905 cv
2971.08 200.232 2994.41 176.905 3023.08 176.905 cv
3186.07 176.905 li
3214.74 176.905 3238.07 200.232 3238.07 228.905 cv
3238.07 257.578 3214.74 280.905 3186.07 280.905 cv
cp
.572549 .709804 .980392 rgb
f
3061.87 235.374 mo
3074 235.374 li
3074 238.133 li
3058.48 238.133 li
3058.48 212.54 li
3061.87 212.54 li
3061.87 235.374 li
cp
f
3079.75 228.834 mo
3079.75 230.944 3080.23 232.637 3081.21 233.915 cv
3082.19 235.192 3083.5 235.831 3085.14 235.831 cv
3086.79 235.831 3088.11 235.183 3089.08 233.888 cv
3090.05 232.593 3090.54 230.78 3090.54 228.448 cv
3090.54 226.362 3090.04 224.671 3089.05 223.376 cv
3088.06 222.082 3086.75 221.434 3085.11 221.434 cv
3083.5 221.434 3082.21 222.073 3081.22 223.35 cv
3080.24 224.627 3079.75 226.456 3079.75 228.834 cv
cp
3076.48 228.448 mo
3076.48 226.584 3076.84 224.909 3077.57 223.42 cv
3078.31 221.932 3079.33 220.784 3080.63 219.975 cv
3081.94 219.167 3083.43 218.762 3085.11 218.762 cv
3087.7 218.762 3089.79 219.659 3091.39 221.452 cv
3092.99 223.245 3093.79 225.629 3093.79 228.606 cv
3093.79 228.834 li
3093.79 230.686 3093.44 232.347 3092.73 233.818 cv
3092.02 235.289 3091 236.434 3089.69 237.254 cv
3088.37 238.075 3086.85 238.485 3085.14 238.485 cv
3082.56 238.485 3080.47 237.588 3078.88 235.795 cv
3077.28 234.002 3076.48 231.629 3076.48 228.676 cv
3076.48 228.448 li
cp
f
3100.36 228.834 mo
3100.36 230.979 3100.8 232.664 3101.68 233.888 cv
3102.56 235.113 3103.79 235.725 3105.37 235.725 cv
3107.42 235.725 3108.93 234.793 3109.89 232.93 cv
3109.89 224.247 li
3108.9 222.43 3107.4 221.522 3105.41 221.522 cv
3103.83 221.522 3102.59 222.137 3101.7 223.368 cv
3100.81 224.598 3100.36 226.42 3100.36 228.834 cv
cp
3097.1 228.465 mo
3097.1 225.5 3097.78 223.142 3099.15 221.39 cv
3100.52 219.638 3102.34 218.762 3104.6 218.762 cv
3106.92 218.762 3108.73 219.583 3110.03 221.223 cv
3110.19 219.114 li
3113.16 219.114 li
3113.16 237.676 li
3113.16 240.137 3112.43 242.077 3110.97 243.495 cv
3109.51 244.913 3107.55 245.622 3105.09 245.622 cv
3103.72 245.622 3102.38 245.329 3101.07 244.743 cv
3099.75 244.157 3098.75 243.354 3098.06 242.334 cv
3099.75 240.383 li
3101.14 242.106 3102.85 242.967 3104.86 242.967 cv
3106.45 242.967 3107.68 242.522 3108.56 241.631 cv
3109.45 240.741 3109.89 239.487 3109.89 237.87 cv
3109.89 236.235 li
3108.59 237.735 3106.82 238.485 3104.57 238.485 cv
3102.34 238.485 3100.54 237.588 3099.16 235.795 cv
3097.78 234.002 3097.1 231.559 3097.1 228.465 cv
cp
f
3130.51 238.133 mo
3127.26 238.133 li
3127.26 219.114 li
3130.51 219.114 li
3130.51 238.133 li
cp
3127 214.069 mo
3127 213.542 3127.16 213.096 3127.48 212.733 cv
3127.8 212.37 3128.28 212.188 3128.91 212.188 cv
3129.54 212.188 3130.02 212.37 3130.35 212.733 cv
3130.68 213.096 3130.85 213.542 3130.85 214.069 cv
3130.85 214.596 3130.68 215.036 3130.35 215.387 cv
3130.02 215.739 3129.54 215.915 3128.91 215.915 cv
3128.28 215.915 3127.8 215.739 3127.48 215.387 cv
3127.16 215.036 3127 214.596 3127 214.069 cv
cp
f
3138.79 219.114 mo
3138.9 221.504 li
3140.35 219.676 3142.25 218.762 3144.59 218.762 cv
3148.61 218.762 3150.64 221.03 3150.67 225.565 cv
3150.67 238.133 li
3147.42 238.133 li
3147.42 225.547 li
3147.41 224.176 3147.1 223.163 3146.48 222.506 cv
3145.87 221.85 3144.91 221.522 3143.61 221.522 cv
3142.55 221.522 3141.63 221.803 3140.83 222.366 cv
3140.03 222.928 3139.41 223.667 3138.97 224.581 cv
3138.97 238.133 li
3135.71 238.133 li
3135.71 219.114 li
3138.79 219.114 li
cp
f
3503.51 278.905 mo
3340.52 278.905 li
3312.91 278.905 3290.52 256.519 3290.52 228.905 cv
3290.52 228.905 li
3290.52 201.291 3312.91 178.905 3340.52 178.905 cv
3503.51 178.905 li
3531.13 178.905 3553.51 201.291 3553.51 228.905 cv
3553.51 228.905 li
3553.51 256.519 3531.13 278.905 3503.51 278.905 cv
cp
f
3373.11 226.725 mo
3370.21 225.893 3368.11 224.871 3366.79 223.658 cv
3365.47 222.445 3364.81 220.948 3364.81 219.167 cv
3364.81 217.151 3365.62 215.484 3367.23 214.166 cv
3368.84 212.847 3370.93 212.188 3373.51 212.188 cv
3375.27 212.188 3376.84 212.528 3378.21 213.208 cv
3379.59 213.887 3380.66 214.825 3381.41 216.02 cv
3382.17 217.215 3382.54 218.522 3382.54 219.94 cv
3379.15 219.94 li
3379.15 218.387 3378.66 217.167 3377.68 216.28 cv
3376.69 215.392 3375.3 214.948 3373.51 214.948 cv
3371.85 214.948 3370.55 215.315 3369.62 216.048 cv
3368.69 216.783 3368.22 217.8 3368.22 219.104 cv
3368.22 220.149 3368.66 221.033 3369.55 221.754 cv
3370.43 222.476 3371.94 223.136 3374.06 223.735 cv
3376.19 224.333 3377.86 224.994 3379.06 225.714 cv
3380.26 226.435 3381.15 227.276 3381.73 228.237 cv
3382.31 229.198 3382.6 230.329 3382.6 231.629 cv
3382.6 233.704 3381.79 235.365 3380.17 236.613 cv
3378.55 237.861 3376.39 238.485 3373.69 238.485 cv
3371.93 238.485 3370.29 238.148 3368.76 237.474 cv
3367.24 236.8 3366.07 235.877 3365.24 234.706 cv
3364.41 233.534 3364 232.204 3364 230.715 cv
3367.39 230.715 li
3367.39 232.262 3367.96 233.484 3369.11 234.38 cv
3370.25 235.277 3371.78 235.725 3373.69 235.725 cv
3375.47 235.725 3376.83 235.362 3377.78 234.635 cv
3378.73 233.909 3379.21 232.918 3379.21 231.665 cv
3379.21 230.411 3378.77 229.441 3377.89 228.755 cv
3377.01 228.07 3375.42 227.393 3373.11 226.725 cv
cp
1 1 1 rgb
f
3389.95 238.133 mo
3386.69 238.133 li
3386.69 219.114 li
3389.95 219.114 li
3389.95 238.133 li
cp
3386.43 214.069 mo
3386.43 213.542 3386.59 213.096 3386.91 212.733 cv
3387.24 212.37 3387.71 212.188 3388.35 212.188 cv
3388.98 212.188 3389.46 212.37 3389.79 212.733 cv
3390.12 213.096 3390.28 213.542 3390.28 214.069 cv
3390.28 214.596 3390.12 215.036 3389.79 215.387 cv
3389.46 215.739 3388.98 215.915 3388.35 215.915 cv
3387.71 215.915 3387.24 215.739 3386.91 215.387 cv
3386.59 215.036 3386.43 214.596 3386.43 214.069 cv
cp
f
3397.64 228.834 mo
3397.64 230.979 3398.08 232.664 3398.96 233.888 cv
3399.84 235.113 3401.07 235.725 3402.66 235.725 cv
3404.71 235.725 3406.21 234.793 3407.17 232.93 cv
3407.17 224.247 li
3406.18 222.43 3404.68 221.522 3402.69 221.522 cv
3401.11 221.522 3399.87 222.137 3398.98 223.368 cv
3398.09 224.598 3397.64 226.42 3397.64 228.834 cv
cp
3394.38 228.465 mo
3394.38 225.5 3395.06 223.142 3396.43 221.39 cv
3397.8 219.638 3399.62 218.762 3401.88 218.762 cv
3404.2 218.762 3406.01 219.583 3407.31 221.223 cv
3407.47 219.114 li
3410.44 219.114 li
3410.44 237.676 li
3410.44 240.137 3409.71 242.077 3408.25 243.495 cv
3406.79 244.913 3404.83 245.622 3402.37 245.622 cv
3401 245.622 3399.66 245.329 3398.35 244.743 cv
3397.04 244.157 3396.03 243.354 3395.34 242.334 cv
3397.03 240.383 li
3398.42 242.106 3400.13 242.967 3402.14 242.967 cv
3403.73 242.967 3404.96 242.522 3405.85 241.631 cv
3406.73 240.741 3407.17 239.487 3407.17 237.87 cv
3407.17 236.235 li
3405.87 237.735 3404.1 238.485 3401.85 238.485 cv
3399.62 238.485 3397.82 237.588 3396.44 235.795 cv
3395.06 234.002 3394.38 231.559 3394.38 228.465 cv
cp
f
3418.42 219.114 mo
3418.53 221.504 li
3419.98 219.676 3421.88 218.762 3424.22 218.762 cv
3428.24 218.762 3430.27 221.03 3430.31 225.565 cv
3430.31 238.133 li
3427.05 238.133 li
3427.05 225.547 li
3427.04 224.176 3426.73 223.163 3426.11 222.506 cv
3425.5 221.85 3424.54 221.522 3423.24 221.522 cv
3422.18 221.522 3421.26 221.803 3420.46 222.366 cv
3419.67 222.928 3419.04 223.667 3418.6 224.581 cv
3418.6 238.133 li
3415.35 238.133 li
3415.35 219.114 li
3418.42 219.114 li
cp
f
3455.86 236.252 mo
3454.6 237.741 3452.74 238.485 3450.29 238.485 cv
3448.26 238.485 3446.72 237.896 3445.66 236.718 cv
3444.6 235.541 3444.06 233.797 3444.05 231.489 cv
3444.05 219.114 li
3447.3 219.114 li
3447.3 231.401 li
3447.3 234.284 3448.47 235.725 3450.82 235.725 cv
3453.3 235.725 3454.96 234.799 3455.78 232.948 cv
3455.78 219.114 li
3459.03 219.114 li
3459.03 238.133 li
3455.93 238.133 li
3455.86 236.252 li
cp
f
3476.78 228.465 mo
3476.78 226.321 3476.33 224.627 3475.41 223.385 cv
3474.5 222.143 3473.24 221.522 3471.65 221.522 cv
3469.68 221.522 3468.2 222.395 3467.22 224.141 cv
3467.22 233.229 li
3468.19 234.963 3469.68 235.831 3471.68 235.831 cv
3473.24 235.831 3474.48 235.212 3475.4 233.976 cv
3476.32 232.74 3476.78 230.903 3476.78 228.465 cv
cp
3480.03 228.834 mo
3480.03 231.729 3479.37 234.061 3478.05 235.831 cv
3476.72 237.6 3474.93 238.485 3472.67 238.485 cv
3470.36 238.485 3468.54 237.752 3467.22 236.288 cv
3467.22 245.446 li
3463.97 245.446 li
3463.97 219.114 li
3466.94 219.114 li
3467.1 221.223 li
3468.42 219.583 3470.26 218.762 3472.62 218.762 cv
3474.9 218.762 3476.71 219.624 3478.04 221.346 cv
3479.37 223.069 3480.03 225.465 3480.03 228.536 cv
3480.03 228.834 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Digital device users spending time together.eps)
%%CreationDate: 8/1/2020 3:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l&t>Q[P6k$-_fLLTpR3!$t?00Qmnna!brc)!<Q4+6j_8sHiJ'[qs9.-O2HDI7l^DNfAWsoL9L&kL-BP:b`i*!+AhH2qZ(d&
%N_KOXR4HmNCWZ[9-,n-K?"VkfEIUFeR))-t(hW8m_$ftkh^k'$VG9pr^gst#Cda><)UEQikqpYi*']E$dbh".TgJFg'?Y8iZRkj+
%+iR?M+_[&j"C!m@V/mV@U'(QnGVShB::*nTL@&<m7W"TT)F@j6IID*J?E^9"44#d2O1luGKb=*[5mm`2+$b\f<6qK'@fbJ51!C^_
%#fW8=L.=Q7Hi4@3jMAU\)<#eTeh6GG5`gO>%c.?e,S:H:2dm[R6U:j87:63^$(G>`U(%n-__8iqH"0&N$/br$"*)*\iP5LY8;70k
%"=)kji1!7k'FspNI"6l0a9]]r=LJM:81Y2+5RR!7U]l;S_Z2e)M$Sd#^qjuW#XI;JM$5-I2m>^V[K+BHi+::;N#R\jm_a]B8AH"'
%-&r68=qEXtLD7ZBD8IIc+!`oLRUQh6,XUET'"/qh82oKT:n&c&#R6%g3>@![Kl>=fW/Vn-#pX$cQS!0t/L1l1\9NX0"HYl8TF#jK
%[Lq1'UaaFr]FhslDm:Dfa+u%O81K.YZR`8A3?T0I_#pWqCfk,e.3qS2(k?IT@$k%eCdYur!Apm3$uto(H5qUN#mLu[Jd-VM.5;pI
%57CKuEg0fW7M(^i6j1)[/GVl]23%rt#SO,;W91;f'K#&Eb.8QP2AblB%Fcpa$sSCXAcVV&OO=+%a#`$hV?0O"$o`WYbU4a`9h#g]
%S?=RUn9L3=9it#\OmrED"B]4(i#)<kr&ATpm",K_Lu;ZAJ]C.qBJY4u#/ZFT]d+XB%3G#MBX5!1o^<4e8(;KD;dGiY$r)m$)U*CD
%Fr12]6a+q5qM_9HlS0W7d>-(m&^f$+\1Z$X(<\=N/;4K@qB'(Y8e=^Sn'_=lQ5hu=r.u?/$S9)^Q)S[Y1lAerUcP3i:$r2p(6B%d
%JIG!N&rdbQ5_JP[_>se"'DMV\^3l2,LHWJ&jqpW;ZPkNT<M&G2j(LCR3#IL*,^YsBRI8L.P(Xu0^*"-HYj>_-r_FFf@"9BHj#IRa
%<2V6%_i&dj%>[&,m\[N,Pf=Dd9EC\%")H,$IHg"e"*t0_Qq\i0ckifW%Q%S5YiFX?Ft#T_[qb7<4O!EPCf2,E\DR9t:Nj9,D#hK5
%BnQ31@BcMfi,9/*ohs#PZ))l'mK"]Bm,6!H&PrC6nAuaPs%#h2+,#,`"*b-&Ij+:mr!iJ<Hgm()(rX.oj54R:Rm?oC[g$U&2;D+-
%7*etM/2a;L"+'I#6SX/33;<or$\?&9cqt'*%"NgQ#oX%>nH3S1HON/5"T6OJ0UJ3b_.Y5>"C8nLMDq4j!c!Br(*m]"O?M$El3;cZ
%4IFB!6acjs4s2`q1?oFY\4@>3%WQ/JS3`m8PTJc+L4PH-k;eSp'(fI;fblPj*:Ka(UpkAr&dBK"TuZ!RccZhH`J/&Vn8E7U^CZN`
%8e9r#haVICAYp\//mK<Q>W'k>!_XSf#`58-@a&:_i%8E16,kuk*#`Q*KF`%>;@KL*6A0kW#,L^<K/)!p"4O)\ciin!l<%RR5FW,k
%9o`_5T%SdHW>14.deoJR!DOK26U>P12A/R_3!XFgru)S&J3S2K\25-r6IJ+c*$FP93-o<2Bo6Ji5#4lW9]pI'+CsnJmLoFQWu@)>
%5.=,YgnJ[3:1LrJ$s!VX'K)0N>f1-=$[j?jMP7p$.@qKK^t`6f/<Ti23B']da9?77<`"7EJP)f[OR4g=SS<?6NA->V.%rFNPaOF*
%nI3+MnN`r=0k1cN)]CM%TLDqA/(kQ&`uYjd7.1_LBqV8U+GH5I%m/(Y3aN:@fE))N4Fm'K[YC)--9c8$jDt_[^pLqeG]/Ci:Nr)p
%---><q[Cr)iB>/0g[Zb)Yl?^ma5EWrn<@S>1P#`rJK"S9H(IpOF9W0.jlnLO+:Q!$=BIb?0>]Xb=+Z3NO=aTT#%%IS3pnMLI](hd
%"SE#K'a>Ra@qm8UJH8;\m_'rZ5Vr@iTS&[ni3(-m(0X:Q18%hGG+tA,%Y>hMY)(IMR;Y-"ppT'*r2G=%5BfU!L[lEf%<ag%4_20$
%>sej6$>?n4;YJ?^$8]CZ"3FAphTd.HeQ0+03o>qVHElCO;VKWbcLLQ($rF*>-E?!J7GO8G#RlM7[M(VhE3LUd8!=\7]-<9f:=XSI
%WceO1G?mVYJTjNrS6jslip#]de`3LhJ3&[LesPu%A);)Kl/jn!+WL#bcL8#7R'DrD.`)T"[4CWZE&53qkJ]8T%n4&8g)W>F"-aD6
%9k[L+e3V4iFN<u!c&F(*'P2;GVTUV2"U\;=&&=O*H\U0-Q.nB0%PO(T*)jCX.X+SJr`Mq[nIu7Qfh7?nI[t"E7lfe#bO&XhVo/-K
%F1Gd5GKf0/\_Jp+qcD,*!adCCdm_J(j`2gHGFE@WW%RhbQWTdL&76QXdmo)jXR6Yk*RSAk;Ss=?QT?>QWR/o:^GBOB\ZS=c%_aI)
%g?_MV;]Ti,S>TuJ.79(ng=5M6goNm!\pDRjGDB0A4Z)B-j4t^oEdcDHn#[DXlV2)%_e_<j\R%_3*TSba@IshLo6&E*^-;hUH&KPc
%Ht2j!"spcbl(!cN*n)"aUH3Ll6g5gd!Icj35=Gc=SPl"mc't?4#J8+FF=8+OHH&j1RN#$+C932jeL!AQ&(=<^p<O%(VE[K,ZH7YE
%*9`K]%N^&M_3FCMbT1\OAF+XM*7RErkN9Rp.`SE,bZH:Z.gih:h(Tbq<%Ua__a+Ji+05k:rQ9Y.8%SF<_67)WfPf.W>0c`E<K;L6
%!'11hTq5s_gu5?diS'#i"V:hHJc2H393)B<n@]>.LOMBCp^b/6*Ip*HC?sppcNo.8/a+A?TR8!-#j<IkUN?>^k3ndXrCEdZ,Em&4
%!j0gsT8&juaCn*D7/NGDpna`Fmdg1T3!qn<o$O1D%sIcE3K?i(2#U_#qU#4[n^/YS]ruA>T](-5j7(B3i*IEOT6[H[bk,jb%_19k
%m&TKql8%i9c7bKOkn)(TXNBa)Z4FIGSOU:458h6e5'8i^4\S5WQ5Mb&Y<=aL^ZYsS^=%$Y?N6g[i@F7@r;nmXX^f'+E9?mBT9n6m
%"@(gMY[?m-]IqI_pUQ=KM&;;OqtKQ$^Q+l:#C!boXXAHU(rrD(QpYjU#C\sif%ptK"jhTY@E7ODoI/8hD]nigY-Y5tXU`BTkoaU,
%f:8!b(7`eTC-8BH#0ilLA'qX^[*iJdo[S(87X^f@eL!BO2Ap*f@As_GItt!i9b,V5N%!&DNhs1:aE0,Rr-uW,>?p]A42L-_Sq(nm
%\CVL9msUF\RbH`qW)(.OEgJ[Zr1Ui!7Uj."Rk@k1qs;[NR.MNiqp81[31O-TK:'uVp%pZ%H9-8(oba"F[pt3LSNq>=;rI;d7,73D
%(is1-ih/?'fk@g&!E`*W*-bOqnMCTcF\pZV1@Sp0p!C)Hh%`p@1SuTA>NIp\gO[,1X+R>skT9W(*m]i<=9A]71M`YK$clCtoj$u3
%6LBX=*H?[YqTP(/U@E/o6V@-EjafI'eY`5Ti][Zd=/8[Z+4N4ijFHGaTQm#IOpJVIb^p`h,@1;grMrEW"YOEYKTA2lp*)fgI&3A^
%HAFSGo#5Srb!+?gF_TF@ch6=Z#"jI-_/2WgF(a1Bm7$8eV7e:'LcH1$F5VCBFG,qbZ55rr;XOKjPV:uX4'u\TMB65eHVofM;>qHi
%k-u4=cZ5R.)c492?5-Z\EUS>*=5&S,LR:GcW"4;0MCr&uqs=*XHVlh2BeP>b@Lcu#J*&6*+mu>W--Hg$NEs]tYV4>O[DV;YM8QrF
%j)>.k91Q81&U^ST$^69F#2Q3*qW&"2+o3iT'u*,Hl0#*Q./g2brRn/YrR`\X8%\I,],!H]2'"5-g9m\]45.)pY\RA_Huf_JNoA\U
%Rl)*6l-ZLOXkLgsg+c\k#&?`0G-l!k`N%$]KN^H>hqg;Xk[;6Q0$,0a!oS&:I=)rqa(_?%"ik>!S43jV$"AX^NX^@[d</`ApggV@
%MTC<fW%ieMClP:*[6FCCi(aP=rjImu-Lp_ae%@-icn96F`a-0rN4".[;mEH?6;p3?fB!GsfNjV_][PtmmW=jli2nWdM)q_"?1_C+
%E<)?!Cide?Ro')qDF3%$4>PhL!]/b#n;8+!^DM2+rl2_U_ll'9ZF^P+,<*@'>A3Z:I]2b.OQc+EJ$,pr)F'T`r;+M1=5:fF(s=OY
%J"g2GK'g01di@9n/0=3@`!85iE)Vk0<bGTZl6kuP/e(*m:>J3>!?K^pTq7**gu5ot;6V$TXXP]4#jaJZ>-_&QJF>2if0P&?Ft<e+
%rnYuk_8pliIH&:`n)!q2MJ%UYL_fVN/-kJcJ'mA9?c#AUi^1QgAU?Q(G<G,6>lXb6lbB'>-/W_@G@/V_EW,XArk$(EWiru4q_`lP
%j1,)8>lXb8PO\n/Io5hD=+CT.VDFAtY5.L"AS]U"6,tk?j-oFVc1e!mpdVS@pW%H.YY9Nh!!#e"?;[[h39g]0Mr\uuED3PpS'l"g
%%(t\(cQl\.Z,b@N'>C13-@5pgcCtL`VL6DX5VAn"/1((_gV/+1[$(-4+fD-*U9B#4lrYDm<lg:9Z=AS^8*'2/IP+Z&@!aGg*Qr!.
%4q!;AH(#ep5a4g[JF?tD>jQZh@qd++e(kk];e+'pm:6*2(FCi;URXo(B1=[ClfSHeQ=:?7.kM1o+GXRF-_9od)=3C,1`6MZl"+Po
%GIf^Z,:4=?alse@g&kjWQ0UlZiko(=+/T^_"0rX?Q^o,Kd<`,/Xck155b2r'a^.anBscPX-Qp,$&:r"Oa26$)n8^(mHsHW1KpQ<.
%j]Haf(1.!J$85;F74c)B<>\\b3>Prp3!2;Z?9V83fq!9c3r=<uVL[0X&tX`Y+FUXB[3)D?m!XTLbM>)Hb=b=:ZqQ7'fn>qi%ZZlM
%m);0*]t\AMNu[llZ3gIKdIuHJI^NPQpp)hQY`)DR(sRC(d5gX";*I%]rLdTVS`<e]M<TY,f%rJZrH@r!)g<m/ise[hlNX3saRsfT
%ddd%-?)_PDctWuf0)*EV7r&$'/h-X#Vt+ucX`Zak^Gd=P_&m=AnO&FE/ZYZ!)>!%Z<(d`23dto\!U]XRfR)r'om0P?J?sg)]/i[W
%U!<B_U@DSF#P\nqIa)D2h^%e$QOXKq.)ub`&2H()J6B<rkT<K"f2a^7DHHfIpZiu75jR//[/ets3Qpdb.pVW1_1Oe%UF.hP@:6$p
%#X'@-%O:UU*TLM0NY+>'0b,V03VYX)p^>S+o[%QYA*e'0HY@L"=N<DP1%n<sa#_5FNc?1a%%&OQPcbHXH_2`/o.qC\lL@hDT\)nt
%dBh_8Cq#ZaMsbdU;Wj6foB^(uWE7,?.;`flkBQiO7ZTWW@V?MSY%Sbq%=o*P>*VoQ1(E32%'/\^[/tYU`9FhMB07,5_6!N>(KGM6
%SP:ORQ.(ArAP!Ce`uCTd%e4ekcjhuU@pU0?BHhDAHnr0(K7CNdl$-L^0!@pr'i+FHDPY>*+g>6LnjVtpdM'25rj>P:p9(4I'n8Df
%D:#I9r%r&6Hc?-[3TQpmf=CiJ=&cm%=nf,4oOO;bg5d9F3Yk?\V"nA3_j;ub%V`i4dQ+\Ac8-P?.9hjXp3b&M*YOJP^(,WY6.cs=
%*SPN8k/E@Wpk(-:le$N*E0YZ-]tW@+SRX:]&oHtjQd_jCa)(12boO.$@lF'Wc/s,$@`N;&5=dbGF,-C4IDP;ZQrh>Y$HI7+s3`nJ
%@QUH.a)pa:c5kBE@lj@fS^%DR;EC_6QpXL/DE4lSk:&RcH1,f7&,la<3IO:8o=;cbkJ#ZR1$H[bNYaJ;rlBf="7uih1N3SKYJfs[
%bi?AL#C*Gj%Z1'D`p7[uaOj3ARK\P#pd<HV2G81I0n]692k`9kn1CZ@Zo]#:Z$NG"'&9Y^:?V(S+3Zjq8^F)(UE!7GK:G@pG#-?=
%(HM0Rf=j>q0DE)Z?TL68U5MIh?d#kup@%,A1!k%SS<\OagU#"@a9A>VYUc!fEP%)"qk7_AN..s8:DTaDZ,b@NF2$%qFG4]AkZq&^
%A(T.N`qQDAXd:Rbpb@?u.5H#FhX85T-2kS$r5C<M_>QFW*qc'Ac#g&k/g,?afT;-ZKkM6LdTQ"(_=!1+jB-VF-dSt'T/$iGTk/W[
%ZL2'[&7bpd;W)SSk4UKt4%9F$*>s7ga+b*O3m\ILcO'V:%^F_uBCtG-P4R(5s."%<qEkB<RiI'T@o2e*K;)jLo]ZHl89=R!K;,QX
%62<lSG4/pq03?!ij[%7uf_qS>dGakTHD^^]LU1=u%9i)o$5rtm*Dm?T?kbHUq^i&TbEN\tpif5\rjq:lHc<1s=-qna@5+EurOBd3
%q+$__C)!G266;]X*ZO49F5.9Ep>%aodA;88NZUs$p>/+#\%>/f\Gn>\Qh?>n=@#.Mf\jIJ4hnub*f`@3kpR$>,JN(V5%!VW`K(hZ
%U?M7=DC#(A^\,&.nt#rDfadphU(IR?drDS-6.g/3J4]dEHaic^414:ST%Pt+4G9-1pJ*4L>#.(n8NU<1JWB>$2U/Z.2A9FJ3r5jX
%I/NgSEP%`.#Cf6uk:9f#iR*cim/8LR^TP_d'6:,QV":h&SG`\?ai'6rk5a(*4qOmar=&OC)slK\!n=aBQb3e&YW!/A9K%5^GAo]0
%KRAmOZs6Eg:(n]&/3<QVqC?h6W,$T?Ra3_d%dP56-=MI?l]LU$<$r!)NnQZ@pdT2t;$"@?CQb0H48"4_,@=$a]VGQaI!%<i+4Y2Z
%C5.4dA!Yj5jq*d:^a$ZiSf1COH@AFo%s@lh#7gIAlLD,=D=>Bf03S&][;NI9oWe%n:-*(3>EWQY):"<.lZ%jEYM!C\Mam3P+$m1X
%$TQ_[Nk:2k6UKZ6iE*-SDHm:WTK@ljde>3%c]$s]If%m]"?d-NcYDeT]N3E5R=G;a]3Lg`V"iVb@&Qn3W_`5@.c1D>h"K);5#"s,
%bOe5Y/qGo@NqF9]qul^]"E<mL-n,'@iEuM>^ngG@ORsES4brNopcVAE*Kc$A!W;:crC,U*%"Jq5!9I:*47<XeaIqL)d];Y_nH>3X
%'%0#H5)6s)E>!4tai@a2'+MrJf)PDmr:PR>oq29Z07Ws!+905cs7t9]rSrAbr:U*hol#?Y#Pe>Vs8'LGQiHc?s66_:s2TW\_XIO'
%+91FEs7IK6ZU<FX70F#YL7s+dImVoop%bs``+MYJBY\E/VngB<`nVYGoEe\>q]epX$J=WV0HVoumNY*K?q(fq?3"Dg.X[ZQh1G[a
%;=L&9Gk$q6NfbIejp_J=3:;Q?!^QG["+1f?K]"(;&A\YE(WXYEo$(GQFu/"cG4uGp.Y;k_i4D2RHOLY,j"k<2rWXFpiOfD_]3p/&
%lT:W+b?l_te+M>mrn$$:s7d]9qZ$Qkqd9BnO8fD0o:J8Ts3"3b)8le#;Fa2C@72H!&HnmZK&NE=S;'h7#`0(J>UI,N>#:tr=qGA0
%N*9Hc\F#?"d!dJ6W4WYN"GsYc%QUM9nCui8STS2Cf?]7\d#^c$.JUIiF;55PrBnY\lT,&BV/Ep_%L*=J+T2<r&dE9+!Bf_(hd@9*
%X;3(<L]hZf)q$D79`UmZPFthoK:V!=TgYi*2FeQ1:tMB`&IssJ%:3N#X$7Tnj%..ATlA'`E<HB:)_`hi9>n$LTR8N`58_4grWjJe
%5m.M9"Fq"n+:,q$oTPAa0Fe[BkQf-PE26mSJ2J1C^nH38a5W.fE4uol7L&$8Jn-8pib3f#OUumR=\sYS&3%Z9lmE?@i_Ve-irIdI
%6!V6G0_6S9J.)hm$1KZ?5WU,ubT@u>OpD8'$t]U+0r@@5H8\9Fj$5R8#mQ%neGs"aLVSBbdUgcg'M'K9i':UFYX%SA:OWB<U_J[^
%fn,Gr+<20o$Xp!KE%jU&0bIMAKU<JU9Z%uaaJ(8C$ALj55^'-55Y+J0ilONXrF%I?(k`QU3&,t`_DkG+SAYu^Y[BF!dJ2mZduXJA
%FW-DSL&qkj<>mH=ZC$@&&==C^lk[YE%ttSt-(t=X$]nIEZCEpg.RHu4Tq[sK_P):aTIN20&.Lo\J-=mCiVlAE`.^Rt6b885=M-q0
%%Nt]Z_>a?U'g9]P98Yu]N.b+""1>rj/7GJsBEUShLg5HFbQ9V9!qm<n4fPemrG5mIYXh1SAq:LG:<eSZ*.bs4KD?1;+FsP?&rJU[
%34FuU^g<_'.5arqoc-oK:Z@0^@A(MOj8hdRln7?0@5q/Eq.s6IJ_EYL+f5h7&rp9UUL[_iR*^eQLk^ig3__pmoLAnA0Uc?tBLX*K
%aV=P>UC%587ud.5AJo%90;_VINZQGB4H,4T@%\V5MrB1N/;=Qu=HL#1>l1<UYg3lN28C]<^l&hpilTVT8+6eia8mh/S/^fT%7E0$
%HAJdR+_[0M0;K[-9Vlb[T83bfWMTW#GhJ.3?Y/.b2hiZ:G\f5=&DR4m-jW]foW[k&eE0lceUJrBD,fD-@?;n[E1P[<*X`iX!3Y5-
%o$+q"@2/X<8CYHlZ7LILA*od'!&(Y;Io\M#KLID:[Bqh-+"T"UFZaO>:@Zfcf#e'pL(C^nne\'h.R+t:X4kc7rXA#aj!+O>Yd?\(
%Q\["MfHgcHmfft+DS3Y""lNLc1ShM:(l:^;#Q7>mpj#>FXRB7pqIIjdV(5h-6]Z>50)UbLL$8"%blWRS%jd!QG%O[()sr4PqkYb\
%SPl]i!.?7L2#9*&T.t7&gUD>*ZcD[FVXh+g`uaI=!EenAbB1IY)>An@bi#PN'YAqW5FCm4$b=Y-,fm['g]XL,ZiR;lC1oG]3Tsc\
%kKu`Seg"4/"Q/p+VX="l4ng:4h\1<dX\!Nf-@4C9!9/kkh%QeNe).lSM[$NABQ$3CA/iLAl4c/rGP<>:!3U/l`\F1kWXFEZ:Dcdd
%V[$`"8ehtE3[]PL?NoUk2:$;[MQP?k)*=B2_iW.('MHp23jbA81??Tu9l?^(&?<;+.3^n!F-@kF;b8[@J#Cnsq9!di&J<e`int"5
%?fRNYJ9YY/cWHW;bb[=c$o=HYe@,e(&*J?;l[Sftmsk<!5Q9tUs7Y(E1LFbmqd9Bd?iL/`U*Wf,#]=t$*]"hP`AqRB=Z\gFYEl95
%SZp>4UTr?`[`R(=@>X$G_(@g#,kRI+%.s^^E4'7,9U!-9js[qoQ2*&a.H)6NZ$4K/21PRu3FNT$gKcR46o:X86T+H!KG2jS'[+^[
%Q62TSTfZ\qd[("!Wt*2@9D(so%*=pQ)=#^NTR#Z]XmS)M^i@7sLCM-Uf,8Tb_9hAUfjlli1Z__2TFE%+8!TWFk_NY69k`B;AO\J!
%Go18[*[$7=2eYr7*o;bWcn\l,rgd)X('mH&]J_<j+::e$,!^f=JIDYuh-u+TL$eL(_N&F9jql"(:b_)DC4kO:0l2Q/O'sR.EX[36
%+8.?Qk;D*Q2?'/82AH(RM6b.M;k!`W2DjY_"[f`A#ZR:%).B\iG[SoDJ6iqM6&%=f(s:@<5GS(^TuKeBWj9"!l^Hmb&d\+HBEZ1'
%(h@]&@GE!!'m_oCW%:gd6_+GH2A=YD;V7X''.,t[[knBo_rR>`)U61S=.tVt"/TeLT+C,V1?N'bJA?U?$Z<,99JuV9=2-;g0XS+D
%5X7giJQeG<q;B-uMUg'4%/gE=](hIA*I:#R(-H[Z3N>Foa*i+m1icK/n=\oO&9r=aFd@>!fAj9sFh52=lNf$fS'.8qOW]qaM%G5R
%aW9q=0(r[4'#llGb/W?ea:PmRSPmUU^S+^4"#eOQ*TPb,J(^l0ZeI=]Z>p&@W<Nnf%78Z,G!]C9(EAfph"X4-(2?43G[2aO%AK<7
%3%h-m)j%(1rtLbRR5/_RTe&JN3c4'h%Skj3ga!N7#4U+$h*bLlSS,nM]nOQ1?Bo*AZp=]#G)\?haZui1^_hU:VreKHNeb97=+4[j
%Qn7<1/3>ep2dk:R?@\qW6&7#<C!c2M-%P,h%N$U-LSp"H7KXQj:@j0u!`o<5#qLN;[8(=-"eHYcP-KP]f1E[X&plL2TMmV1l/-2u
%9?/'=R/lseX0mEYpXf^%R''%VhL\6]_t,r$3q0*kA=&]\>Q`/[mPqc7Bmp-8?)LkR#M`H5_1G0@peu;t3ieI7JuLjadGG`"o)oeJ
%mX!Ib!a,kZ5Vr=m)DfhC@$9;D^^X(oYTFBmmgDmU)PEIPZ[8gGCH&e4VMl?E5]<LgEF_ImO'D;\nf5XDFh>b,(ZM5koF`?60C,p4
%[Cr[',T-pRj<V)G+(XFf[jm?KoUcT(_i;.:5uj["_b[`b6Ai'7@Tr.7,lOg;(ENIYS/4>iMO>`0SRN?Jju$&nj@>>MaQ%mi`7*]?
%0&9ehisi^q:/F+bc1tQJL1[#1(,BsSr`Gl+b\SO4<hCCi.%2i?*,\F1/Ft&>iIgPC$/NWW/!F0me70C8b-Y\-lO$"i!aCqkF[KT>
%0eKWld_h25RCe,+@YF0]&ZonBD/C#l<OHgHAJa$'@j>KJmM/'lj,>b*Khr^jZO4@92bH%IF"hl_"^uL.8*Y&glWL!=9CDVAAPh8'
%fChtt;$E',WH#&U6$*gaD?64:R7S?VIAil=%EAR#c;/-a*Ket_$5-ZgBmR-8R:jS_Tk<.N[N[)1a)IYpO_YcQ4jG/XC2eHPA'?NW
%!!>#HZ%mG:9UA`0NG^NE[Md_,"'5KHR-mnY)P73J*"\JUar9>e^p/EuX_\&JES)A@0V-C`()>bL5QS.<lJP;E711fL)M@RZMh!9J
%("gC-aMIkGGa7gRZ;@D"j*>ca!"Wgpp/aL:!!3+M+pc?dIKQ5[qecE<VJ%bdQn(u`(2Y';2sG;9+JtXHO!)"iI@a*^E3/P1.p[cF
%48%$3(`'/>TG=]fCu!^>/0^2:(T+7I@g//:Nu-p/%:J0rQOWNNN4bos*b\>j^g_Eq\SAjMoLB<cp-PNh^kkm<oFOk$_ZEUD%=Wkg
%-9Tmi(=a104Z6\gk[bU+0r0)tdM[JfA<:AaS1rT1OP>^JU*f3'`gYT8*t>o#R!NheSl]0mS!QQ#iC=SHS?BZ2[?c^<B2]`0>:@m+
%AC'h1;eu1<]F0_#Zncr05rBBZDcc95)>jZ-f(TQg,rh=lDh+C#T`VK/rM,a%\+V<:m1OHA.A$%`oc!s(GisdE8C6ZMf#eQ>b-sKd
%"1U:a$)uQBJ<O:jTEWGr5cisV5q"sQf'H?='tCdT%?b-Q^0]b6d(F07@3X\?Kf?n"Pg^,l%"rk26i3>r_ZRs'CZl^R5@.:b<p6?J
%KA'-/mVV0HP8=`gFJjjt[1s5]XkRZs&m]h+oZ-8uIb"^5D/!R/A"O$)DB(S:;H(t@D2fOE32d>1bDj+LaP=1!3+3I@&9JLAJl'!6
%\'+uc(7ai>3M)qb!js<_JWN#+1CQ8BqcrMG^a@M#k=0kbM#6&R3[b$RpSHm8@mUHUDOXl&[MA<+/X0!l'=RLLK>eIS3ocJDM&Jom
%=@N.`5p['[920N46NZ%2!-2;u6QQ@gKkF"9W\=Jf/\#V3Ck)[M0/17`&p]>,VCr-C+6K^UCUCniDZf:ognq:k_8)k2!L_Ot3*pdj
%FXpd#X)Cr7FHZ]inV#-:k^XH0FDV,G3u]2kODH1'TU-nN!A#>7\p;dE$f3MJ`Vt]Z'>DMH2]=md2k@>mF4.fu=s2:Y<Vr%1H#aC-
%crauf/f1*pbb$^rU\PtE9]&(IWf8YJYNE6l4AU*n5rMR"Y-_H9NeM&Tn[qj><e-@GfEs4AYI#J[=X13"UBB,:<]Y3AGh/O:V^imo
%@jWat<#%g0Pq^bqR2HOgW;n:#Eku]I`56b4JB-8@-'cHlO%LT0C.uf#:?$e*f#u)A(Vagop;[6XcB-$'Gf,SQ#4(K,PgqP"<g./c
%E)Y8`#r%.:!Bhq]/DTMQS\rbIKB\+baWo8/USuXiq1.'ks#Far.O>*!d63N$bd?#l"-?q0.%W>I'[n2d&dAn`_K1W6_]Ju,Cm\,8
%6SVDI"-euO[@9es\i'XJKb).,56..kL*Wt]HAX`fY>_]sU>p1IbV3Hk;f6EE]*s(=L*:`oVjO`?)2mkj1)4dJ!9-EP@mH2Ci*]%q
%g;'AE+(\h/Z/%@KFc)V]=Jd<\6(-"Z"$#5U3.jQVAS33!#p8(JaBK*YD`JqPC7(!9n>6VtL2K>Q!ne!.mdSG2MuT7S,tC[`>Ik9Q
%N9HA5\C6NW%s>Z?$IUt)JJQL/$:h`=Q4Tr.i953VdsB(8ie3QklW2<:/<AR?Jqa8A-npH<5fJ^RE1)))eAN78ZlCq5W5LX*A'ea\
%Kc>*(!RHbh$kU-tn7]d]Dj&"c=-lU9Z_G%/WJS.$MkN)\;*V?Q^:%jX&G$EqZ&T>@B&$\bY0,=A2hPta%<'6]0C.cK#)#_@e7'&`
%gc5Uo%?0?i*'[ET@3QQB`\$rfM@INgc#)HC^Tg1F/*.8"9r]eEF(*i)HA+8Ta`Mj8M:.b+F06&m9"7WO$F&r]CibMGO,o--ksG&:
%Td30.g6>F2^<sT>PKIL.Q"c:QBfArt[;H)?RlrQ8dO/b1ggfX^CRQ2d;'hp_"la*>bb?Se6Oc!@f@atDPg!=!h-9'qH3&G%;.JQ]
%(E8XX'khk!3N-Yeo^$PQ.e'j#0sHdW:d[2*QrY(i*T#Z$5H5ti$k3JUJ@C\"_!8?_Z<!=HMXC!ndX>9UA.:^\=*+WXP/b>li/6XO
%Qm%9D#E[t?`G)Q!/N3#>gb^*PhG0q@)gru"6j[sV0H7F?'Z93-H)/R1PjS:u&HRKn*c[o'YL7:]V3!$h/&aH%?&_u+MO#1hFf7Yg
%K7rokad*VJoWQnZ%h`CA8@0H&7Dc$!H!uSW4+JT!-lEt)T3"">5ddJ2+(dqlRsNS'?oWcrgK"Sr@hH\@#@qB[63\sOGCtkE^(`BL
%`flC(Tb%]GBQsXc4Z+.;fib+O9XTiRn[LgDX'S2'3Qf42V&I%)\a5A_)NFYHB!_aplA913+[h]&jlq-%H9WA0XSMGJqtKPKUZ44A
%1cfJ#UX<C)JSrBAEjkgmq&_k3,SL#T!=*O<GkeP3,bOrbG[n8c0;`\PQ([a.Lo^[a&5:kA^H94MRgjei^30iPpb@LeVYoE*3W)to
%JX[1@./_^`+-YY6rrg!>RpbEWa`-XL#MqJdi5[00PIGh$DXbIKThP-lAU*GEn(a86GrEo@Rm-TZ%5jOCeict$`e1%a\MVRG_iNF=
%UF5pWJ%*<S'R5H;;oG?RUQ6TV&MUXiE3obhV0gO$ha7pJaWT>U@]%ppAsW)cbNDWMb3,`MS*s9K/t6koJD^(`D#5LSR-E9V/=Fr1
%s+7b8pur%>,71lCB&eE_'`8[iF7L0e?>o?0p[?\T$(hKWMG-7ao\;YB=edA+)iWdZ\P,80p]h*DMX\2)M9n81&AOGm4lHEcbU1DH
%<ssE_RtL0fJ5fb;"aiOFk.miB'N)7ASeUJ5!L$&g;HJkLYlEt9Ms"%5&+sJHHYuPhIHCMJOkncAIrT&Z_m?G0]6!+5:SHCi0\UXs
%hX?ks9V[p0<h[7DSn0J:>)2Rg&_EZ::32,(-rfKeUm\QIW%2($j,*O%%dD-%F-e'MafP+4]5Le&)-q65-RCC)MpZ(QSJ\8mIMZm7
%,Y(XM0CWrDAG2^`9-p=!DaRm2k6d<G8,QOJSk?(<]r5PtR!Y,Mh4&aVSo:cr-Z\mI.<GqUcs;N'Yl5=U['WEQ2spF)I&DM,L66+.
%;+t%[J@j#O)`-NiQ-'`QHkPU*Y!h!p:51o<;l8`'nn1jc8mErM8YY+)14M6O*Os.'p2rho;to:rB[#69JF`8FU[buF^lb'2JN97H
%-DTVlmbR)c7\!$&7HjjbC%g8Qi?r]lc@rOlTj&&n8k^9(0RVr48oD!S:"JL+dHo.`)G^W?gLqbH/@M-MK5_UYU0-8c5A)'tNbj>(
%3_M32d<0"m);R5)2b)+lp<Df<HQ5L^T/e]:UY:tFT9?S/D\c*,rn2G8(pokMN?Pe,`CSu?hAB!er5M8[E++]3)deQ/%_DMeG\4W8
%NU_7uC-96klPgLIggs/JSJbr6dG-KhXo+#1=*m^[0.`;7A"bq<)bZc*dTE@t/`Ys'b@.JT6NuLM438<YKhB.*NSRkZDe<o7iuR=.
%)BW-q",Q+(m[>uH>d7)Ef4NBHCu<_]`pV[D`7XCqbJjQQ$-&YR].f8>p[:SSlHL:*41FZJ_+e1%N!3s.1/Cd_P;Qp[Rd>[=CQg8s
%NgW".bGtrM:be.UYD`H";t)AB1kdT"G#KqQIPSlZe>Xn5hnPZ/K6kG"HRT+lL$&MQ.R.3<:"=,-@&gP7A(.i)dkoljTVJD1CGN:9
%`g3Se!iUIN!b#Q@5mJY+jOlAhKaSHO@(Qo:9b%*?C^lmFbRULuC\BSO(M;HP+#XA+I[<&WU8I)%f3$@hW4tK_1RH(\q4`H%biRU<
%RCW$5'ehT(c9169ZbpC(N_E,YW^cMj]&+?mhh]]"5[tkedf]3kRd?Z6Woq&/RlfFjEP:E<-WmJBFqQW<O%plpXnS$(Bjs1rB5lVI
%Kg4f^WOQhu-[#1Um,Z_:c(@,oDJCOueGOR>X-<f9_q4/>A0U*J(1V0(#1-JRGF)m!CM%q!i0VsG&e^?[bNYi\DFn9ML*]'o)H\Jc
%1P_emH4uTkPAk/[@>F<;mMchF]X;']Q:\89Z5U>S^hOg3YH2'rBOVF4VO05E_]Pue-><]uXSL4;a]c4oNic$VqonnUQ#BkUN!WV`
%FR[[=cJ3`J1QUSIAt@e)C`_;SB+*KWHYp$gfTRmeiW?PT[F)D4T&SqA>K/k3^!$Zq>;(*eZAm"\Q;&2CcCm,&`QsKdD_H-D%n/f^
%qq51UY\/$^4*q.`8:,F5YhG_@W/ePqS<WDW$4GO@<6=4*V<ErWQZgn!A@W\(SA.b2Nr469lDSu`?,p5*IHu.>N$S]BDaH:@G;^F_
%=u,P!Vq:cYG(uSEn':N_^sIAc5G=WL<fV4WF7bBsbu.?_+nPWq'Y)_hbMhYL]8//mElBY)D-,j7la\Y():iq7\`6t[BkhY$<Pi(/
%@&fCjNSE;FVqa\CE9TRZE0'GR1rm,,SZ1:js'50-40SXbHdj+nH;*A]d,VCL>okcd8U?Pdn$el$gZ(CT_'d"\p$&pE)1(TNc`I.s
%H!RDiMDo'_ZeiW.!mu6c2tgJE:&4G"99lY5]PMT3qFj?XWR"MH[sd5<3Ts,^/m`qUW8RD5>Sgap5TPKkpY&7ZZeL\AR/bl&`6O!7
%%P%lD1Nq6ngg]Y$Ih3P$`42XO0*=$jId-@\B+;l]02PaS^ZJ&gDrYOA+(*N8#g5;n,`"7GMhlFWQ7/S:mYO$'2c"P[#"cIobr3<]
%dhqsL!QV6**IPQof>pq=ru=$jpts6mE56R"`;l?W:Ir)!B;_O_:qV"?!dDp'+[FqW9ES5naY`3"3e^u&Q8Ad:l*Ma]mAi:"*D[ab
%^:TqHaQZBhLViiP74=Mn2+#Q6UD7OMFuJt6\[RaIVa-&s34_-6iUSXu47X^n%*:-J3QYtO3h&b72LKgj0aX2pWBg5%*kMh:V8QTV
%>YPbAJhGRt.I55(Eg7Z87UG<m0_<2[m\l>[^PYL%-6k3OkP==)4d\X*k#hn]M4Kl5/f%"@F0SEY2N9RMcfJ:'[V1R*'R"h\g!.@^
%7/Dm'XUR=F;_%_+3.:6Y]UjDon'bohB@h-H8I[^nXdbO&fq]JWa5-P(+$[rUTAu7aB-H,XW'D)R:RI"3guCs:cf:Aio6GIVY+8KO
%GNPEf:m$F7ReJ+kUu.JOfIb*2G;Pg8NA&VqUn;sDP1f8O5C)"um3UY+e0&<a*PS?o=0kc(1r8t:9.FjT:&'_VTLjJ`Sc3_o.*'dG
%5q&UWmJK]@jDNPnOO_NgVHEM;1XEO_A7kC9Bk2YC30R'jSW<(0P;/J:S>5tOmIkCcMtmR>ga,+rcF'^i1iJ=6cLO7spa'9d>XC:C
%B1o.cIs3pJ$S51J?Y!pLnD\>INF.X7CqnnGQK!Uo_spd;IdEj<Dim.hFNfQa@[o?gMN-cV\N%*mj!B'FEEYDMGe#8S$p+NL-R4lC
%@K*ugefs%;S`PSXkq!?_*oAFWgiubS1T>JmH-Hnc[oCRrkp$"Wb@E$uG^15b?XAafT/'Db,o<Uo?8/,MBUZK4n(FD:7LU\dX`47r
%X0mTsiQCrNRpC_hSE[$lZ!.3sX.Cj&W7u_XXFBSe,O79shg'WlH!P7]B^9dcn#No:03-&gBf%u`Rc3E)BsSS_=.=W3f=lEODTp_3
%a&;R+Toljrk*rX7:%76Q^SqY$Q(+@&qf_9r2$*d&D6i'2^3p8k9XfC&T"PM;4MT]P?1uoVIotsj]3\:SqonYSqu6DR#X9.TVY:WB
%Pg:G?mO7f`au[\+G]2kp/G]/rO56.Gr5is00g;Ecbeqn.HP1fd5'sC3c#`5,g4$cMC6Y@$-;2&UW0$hOC4,6Y0Vn<Ojh8CR[L.2J
%Cj#.MY#e,d0RHNTn_rfWUX5]0$LK5+4E5F84X=bOC0%9=[:Al5XaS[3WO7"a]A<j$$9%rZV_Q.44'\aMF[PTr>PG.Mn_MU;UOs$j
%Yom=6HUuP#3`b_F0A\e(lL!E/2s_jgI6Z[DoW&F:X$<+p`e"/)*#mCTURM9GjEW*AjG5Nlf?m*#Hs)2Tl!(+;.D.O0>bec"^Ml)i
%=P<-3-Bf^1e$fY&Sn>1Cm/7?j8#EmqI$?U-N(,HgXuNlC,IVUCL-LYZ54"5LP?rej?MJHL5s'NV+g@tl;JWXG-_/@^"DHZ0YOUQJ
%D1OJ47_b;P'Ahmk^?$X3;hq1cq=!@ejm"^kD$F9FU*s3DQ_VO32pdC-Fo&5Fe=L4("q<A<HKBa7Q*p#\pW!HdeWjDFcE#MdfBM[j
%/OnR,MgfHlP=k??d3.-b)iH_OgMTY?P]qEd]"Z7?bgF@O5$ePc8'=]:8qN[XaBY%0KIn>"2e1Jso9SXQZ'.TB`Tp3f\gPtFZpaZh
%RRF5njQB?.+k=?;.ORsnF9CSdnP7*i[ImU?Q+Qbj+dpGTU?"[JaLj[6!Y6>28=I\"^a*@HMMKE^>UFE1RsJR][fB."LDAQZHTNAq
%4n@b#nL<-bHZ-9rb2K)@M:5o$3>%g.8$7g*1<\ABh&\h6pm$2C<G.`Vo.:94V7UCo2%\1<nc;g2jOK^`i8s^O.>X_:Nkh<cl'MAW
%#MrV@@DZSLH,=JIabIhu('ehLF_:\KjN[,XA37UXH[66:`D2U4^X\U\FMG[dlPcSo1M?W_BHD]ZJf;LMN%<X5%n+o,k+bJ=3I-T>
%0?%gd[@Gu6]^'9t/2s[!O8qcp<ZJm`4VYMR:*dk#gW4M<M>9C`H,_8<^*p_ZZBH_4DZJrk)bo2cZ#5dtq^<Rt]Q.WY\EO]#ej^hm
%pLQuA>rX_!B&/Rl9\(tQa,i;VVR[MpktUn,9!ljhW8IC&!_A3(S7X18a3\\eC(+5[:CS<fO//F-h(j^LRk#?uF_]/=>n9%c'7pa$
%:bN(WTY]?Z63)FQ`H.s*]@5MN8VBmOZ`dhV`'$rt)LR=Nipj+>aIN"NUlK?=:1N+hb82GK`J?g0ePpLJ#!f#BM]k29LOe.*l4Ag_
%T^RKP<2PB%%?pBKkTTTL8N&ACY"[/CHI#KRm3EE]?XK@1A6SM6F3kM^[?F?3fd-Jl"[L@^D[)34&)"SHo@\^gU@Ke@ojtZ"/^/P:
%Mn.4&\P02hm37jJIOU%&DN<P1;M%%61t`Z4\k*(nMR`l9&$?#^b3_3P;E2be+Ws(KgQgbB05>AS8XHc4c72]$YU^Pp\^"g\>_^3r
%=>:Wr06rKg4,SgI>U%`59Z^mDR&tC-,u#9CkL.-*NUT#33"*BGRA?9OZ[.;MfrYoXH4[)@AD>b91ILcH)[!5l[MXkBOTdhhq.-O^
%,Fpph]]S.:/U9.+2j0?*J1/rej*am!<aSai>e3uF@sG!/c)&%IHXo_"a<@0b6YEmOc9jo9prA;iq+NXO=GdF?dFCp>BV>I0X&Duc
%_0XL5DKWU,\.3cH(@i,;3tcPP!gbC.`!TGGQY**g#anH6@uYGp$PuII@W^*\!cts@J4`j^SJ<6(F0,<f@+5&3WMSt*$a&hFfm#)\
%I*A!A-[*kC?%eBc$J/)/1^d88)nrlcBMMi8p1_@*8_2-l&ij_UH3XR;Me"oeGO$4NROB^5RVD)_XUK%-R4VQS-Vc\W'm0ONTe/O\
%#>T3CFPhVX2p!WI*2&R1P1FBZr8,@,0#VJKoTHX!KhJB-E\3&dJ-Z/[GYEah'l9qBc;aiG$l,@(f%^SeC7`V[S"2@NaK&N!`U?Q,
%n["<!4dBc,bZ,GlB7qDP9W<-madm$r%eLH4ds$g@pgtg\8[1_.$g%&kS>]unS8e`G2`*u.+3)o7aZdk!QYm-\iSC=)Y'>F3!UoI9
%i&`D3rsnM8n64C6!i;]Y-$qj>DtsUo3?g?1B\n,s!IZ?0fI&ZZG?tOChD-8\"@d(o8QJ#?#USpFTc%FkIE7/XBMfam1X^6\0u;7g
%?:6V`0SiWV-2\$XDt,og2aeHK".Q@%,Ro&7C\\Za#GFFhg)nXPc&4p]'L5rrK9sWSS=:_l94H2fdjl:L7$^$h0'Bp\,a["/UpWM&
%*tX0!&gB1@@1^HVS6o[&')Z6ec7/uf7(D>K;/)-g5h(ZWLt!sYWh`+F=:br$]/a0F;u&q>7S>nQl,J@\/>m9_0<:P"ctMuCj>g\h
%S0Keh+n/[L+pF*+4io8iH4?][,73>'&*7ckD%XUFE<TCq+2BAKB#,&kNDd,-qd>cM-il-T9c8f\YSir9E`JC'6"34^+(2QAV*SA$
%Mi.oOk`Zo:Uq^^kcGtD1LQiCM[Q$E](_Cj\W&fE`8:lMN["?t:i[.aBSA4kG7i4gXPP&7s"9Qls7--Xrc(!-@Qb`,7XKu%"/J+ud
%m3,WN1:si^k#t+#R>>9/UFU\4G;8i/SeG7c+c@&aBp9SIQJ,a'+9j^=/%]?6)]f"d9dpg_JXFgSW0qOcZ%m?PkoZK2;3mk#abA.J
%\0T'/0f&'7pB$c2q0PAe-IniSol9"QfanLcXK1]o/"a,X7)UjKk8\Wb1-H:*'HWb4a_Ek:6]m?BFc@*J!GO$BcBP]Y+qQN\\ZR=%
%Vd_efjINL?3_0H.SdWZgm1kSRV6O<1LA>PKk,"HL*(g65ro@@\(>d<8`TFf7KcK^6!qo*Hf?\Ofe%;&,Hq`o>BP-s$/I(6a_Xt>u
%>LH31!#g-kZrC!qS=#,i-*+T#gMJIc]S1a<hT4+MTs#+7Cl,oiAA-1&d<V$dP8)t6f]QgI:na`B^/j5*E\7\(nP%j#3#=;Sq;\Y$
%J?.DP"4qtTa2H;uP.[$\;PYd0T`*a&10]LQ7P9JM"VLjOl8QU16Wqoe8Om>:dE4JNEDbPYo:U9C_SfrP*[l(3fh`n\\s*CEF^;Q0
%<]lPehig3b[:]f)a9O3[I]n]j-WLX$Bj,\?q"6,c]6<9j\t."UNc%mfMC>%7h=bqY1h&,9etL[m,',E`:3/$LT"Pc&a='/PJQ)<"
%mkILZb/Mk1/HMf\+'hKmJD%U^H$.fMa^lIJq1GNhF&n5>cIt.W>\['#RC'Ob5s,RLCsmq`A(27>[p!kOHM.CpH:t5G`<?>C>&QEH
%UTc6>Or=sG`oVhA_#TC:7k=jD'u,D1Iot8j?rFK=qe)ZnDG@u3T>VE3Q0\@&HCn\\P)3<*h?6a#JPk*G2;-&phgfOgGTq-EN$(,'
%+e74u":Z*LLE8^MG!;;=OJF+&^r-:20,3WF3R+uZGWQML[WuFQ2'U,1@_Gq3/_Re6mK&%jMrgNCIP@9"cb`_`9-(7.`oae&QJUO-
%d,o]obBq\uNW"_YjQ;kh&YZ!Xdgj`aXj^B1&ibmJ:n_rj)B6k2Je*MbIfJb>m8?G35h9jV2N:Ysec;rhasJ/Zc8+7&f7Wd]/::JS
%ABKn\;Df&bTP*i@0cAkS/2:e:NV3hFQWM8VWAM26k"IP.[qA"jq2*V")M`3)&WU*#;Uq38!O01"c+9F=T$2m?[1=`dkf!B?:.0$X
%R98pPh+pH-Eq6A$q^n]?OZ':.6SEoR^(4MBc=Qu[!laLKSJO=PL(CNt4fO`EN"Ih3"(q<KOXW.<VBp]^L+P?8k;toM[]o:CVUs&-
%!ccf9<G'?\,5IVne6%JUMNY!-IEN1(f8,9RqCZ]Lc#Nm2a,"ANpo!fgmto8O[CYfeb.NCS5jGgR-lZ==,Pn;o+4-L_'8.r5f==pu
%i)=,3ipS*7l+RaI0qt!FTY+mYE-p%-iYOOkkrU#"(oK5ehE<k\(NHCFiU(Z:=SB"=\T#o^SeO9'H9c2!&#"6THCp!f,5<X-&fd&D
%!%#NaS5U(.JOI-+pA6>\K-u:?*c/AD*?$8o)%'0E@<381h![o\>.nC-d,`2Y7@2Bd``_Km&PSci-!>.5hH(H14A@VEQ"_G2ZV[@e
%cs8h`RD([gKT2\9^EHC@c=<`uWRk%!>=)GSreoG8S-aA(ZPUs2Oc---+9fiL+MC%r8tfAO,h^B5c-HDG3q9(5OMj,F?&@M_m&`d!
%;"l#,*@I-g<:\LSg\3C!L?7FI_G0>f,M+\T)h:9,;tf<Ikb,6C.SKA"[[hHUh'CC*bQ!rG2Q]H&b+'7`rKa:SQD>I2d3R%&5&"]P
%KfPJp5(hKB;1R35>fPS.0$9.4GU(+:[[ABcomS1URMl2^;j\m;oEuAWV&Z)3]=A4%cMSfE3Zf\Dj-*]S]5<L0fCVA,L,P`m$J_,R
%0@$-j2I3[^nXlNl]CuW*)&=hjHBRCN'/5[/TRSMe%?k0Hqop79G_dpJLuMk'A^5:&'9]2=]IUmG<k@X0\tb'cZ/Pf(Ad:f?3p\N%
%Z"T<2f0N4kAJ],(UA8q;Ec7@PUr[0%:<!nq^[e;5,WdoX)QHDDTF/I<_<>IapQR+l:46R[7pIo6\LcUDkG$)0BeIq?4)b<s?g'&-
%N2K".8MF)9=NcRN@VZIhS``$jXPQXM?qNf8WLQPXmTJp@Qb\7i&H'&/1HO>OaE+OnUBgm4OT-'>a7HO:?bb(X&/.mG8\WE8^Ch=4
%&t[$s=O(4i,pS&?962^aX#+j_8H@D2>IpHrV]Go_8L[(ui8$0V648?9Z=-KU_7toHWQ4=,Ns7pRo<?=6"JE("e]DDE-3NtkFk/`n
%5=:olX8.HDh%*$^?j:uG[F$hR.DjJJY3c>#'tZ0)/g\%oeL=:r2GI>MrJRIjiriK6m2s^_!gFL`Tc3a)]I!Rt#"g\Aaaf(cmMVrg
%iWR4JBW2Zad%NiRj/iedA]br&\[e6Zi=:G&-t!(D7Y4'EQ8(GK\WPJ56H*_#Xn#Z73K]61:!5YK<R^$3I+%EDm%o(t/nq,e=&3H'
%J5%rUPFe.<&g:1<2)9mCA-#Zh@e.7#SkFQcd+nIn.5H'HXX+pmCLYi1"Sk`"`(Y_(99$^ufhh+E@Ynbg"kDfc/4-3ah6M=>biaOH
%35YJPff"'5f`Kd4hEGSOf7GG/E`ls;H_G/ZR,n29%Z$U:m/p2X-C]N9ZpG#HCB6_-38["]?FX6"Bk0opGhZNL3h+Kq^aoXe+cqf/
%;Ki7!ZA3ukok)n,gKQ7l.<MbH9[Rb(_=c<0\FPkpW=b#TZ@]JlS>.^Rjjc5.D0]E+.n-t\\I5gkS\0!OJC!S@E4Ks@c316<Qp4SF
%M`EX;D!<dOQS7`/me)8N5u$r(f&e(8$?\h9ADR=3G``XTD"n9``LT0@ZVJ^fTd6/i>-->R7)Q[Iq`l?(-Q.>P2;j@T9._*tA*aFd
%6@_Z4Cc3nthj/Z3E.0:PI0^tB.o:GHWT29g.2AK41\BpiBdkkn,BsXt\)!MR9Ch-O7GChChWD%Z"CtjU(V,k$m)^PiFAo`E(II^^
%1,ea:Ta&/P_D;H"K^O6e+l%If[[YCn9L!3%<0h?/`9-c/iOD=?-&Eq+_uY'H^no9Ii:6G&Q`MJ[dE6RN.BA<!coW;JB0'aAQuOmq
%%XI?cdb0C^+hK.:,*3"rqi)Tf<RcC4r*pdN0Tg(W#I=/OiQGeE8[Q-U"i:h?-^,Js/&7o<*N<K6e0BZ!W\41afJR9cmW(+>BGmXA
%Y=tpg,7!trA@p5_?Y2>FJ>QK/[)B]EA=Y6cL>qZ^TffT7CeiYYb?=R\ap?]6ULd"5nI'U%-O)=XrpD=Lg37WZ9Y:'grk:7870[ff
%NAS/[&<Kjo49Oa$P;A!hX,D$1&=ioU?$];?0eH"t`0FVY>'1apY'#/#b$M]$(>KD*l`7TY;`+2%3=R2%":s>$pQETbj=FjtWp4s4
%$oKVLIHZ_J4mq!W$;G:Dhid(sKjdulR@eaP0?MXp,J6tV\>@!,mEA6WiTc-3)=b=sZ!>J#'3.u;kbsp2<3BKZd;-<XaP#JiH<;oc
%70f#Q50:K6I;mA#2=o&IRh\TR92cBR;E'je$P^_V'o7i"3Et@'],3-j-BLOLSp3%[QT6HabmGiO:>=SngCeC\F6W"QaU4m%Jq;^V
%U.5,U-=SX"=gFGB>9G`hJjeDWTorZDc7MO6p>WP/@u8k0Fc%.TRX!u*s%L5>5_Df+k.LfE;<rgjaIE=#'iA]]*A^l:Fn-HQOdhW2
%7H6"C''\<E@'CI:V]J`\RP@"CD1u,ZZh'd):-<%Inq4rh'*fu(a97ZWlZO>8>:m?l\aQ`C[1-,XX2\,Qjj1ZRGXO[!#B/&M6oakY
%h=<1/7ncK0,6&Aa"dnZ/>\q[H26l$S5;fY@@<Zt3;#J:VGh::>iGX35-P,<GXktPjM?dK[O>44mR*Se&!%TYriB&6&H56*+*aC;R
%Ta*=PGuI7b/0dBl0\=W!THX("`DaWr<Y#Xu%faM9dGqRL0F!o8iMk4Eq%,9l#7PkNg@H4gZY78?Y2!TI*iq\9^9`/J_@OTG\-bod
%Ba'GJ1BaG!NVcX_Ii+R)d0&+-K@ZZ\:U,fn%C6J7O.WhDm`B#p;2S'-iJZ/hDiT/Mggp5Y#;#J.]5QiWP%PfjR3]fc)ZRq"LkAA7
%l/VR>4@W:(HGZ8XdFIbF+C/FN?.S4WFb<-g1LuIT+iQ_+*-1$?mQ0J<2!PIu,3]^tY8.nHJY3ZJ,%pWNOgQWUH7?Rl>*c'o*#X:c
%DFgcni&LN[l7q5iQbtU\4E%SZq<IWI_slG+0tVpPK5^<3f!X@IjSd)qGPncl;h7;9$kTW^1j2"b9LRA:Rc0'l<>jBNlVM2M's=8Z
%&I5N;6XC/d/-#N">\d_A[mP;\6`e04<F?`Z`O3e##Xg5ciHhT'-L90)_G/Tij_(dR'79VPre.LJZB6<MEnL2e#1en3,TQ,=emf0E
%5@M*7l=q>?J7`Q=9qmq';lQrF(X&;YZ6iUVYoK]UEVPuPl4?C?eKH7q.OLX&rKa*a""aW1MJ/b4E=$F*AlHf/cm836_?qVm41iFg
%VIs`AbWk!lOmY;3Ysqs6lYbUh(@-mVH)ZXco^s+\KGC.W+U4YEF*/CD:"NmWOY;9t6.rp]ldQ]ba4F`'BE7&M!1nGXY9Oj@p)_CG
%YfjFV9t<H5;BHM$F]bp(o5bCM72B'$DTHW3N[nfqX;$tE^YZ'4R`CRLg.pM*Yg.)(0::SY'"R`X]5$o,?O"fI7',(>@8;CHi=mf+
%*ZSX3Y$er93Ab=+dSnai:=S?j+!2m?X<BA[m,hW]Y\(+so/WP^$IOZc$h)K])h2!tMmX/'q),FCk_:2._#!92)D)1VD8)UsdKP'p
%pu&B[`Hl#5pGK36#$6s:?=H?:,fFupVDL;=O1">`>iu`tBBuftMC)'!2m'_a&7^:!jArP?o290`ek/'ZHF\?N?AnKe3\756MJ+9R
%Dth(c:'9f\(jhj[T(Q2=h^5+5,j\lr[8l]]$`uuQDeZ_?)HcI3Yq.[\Y/M<noU(SoB29:NNP6X=d&elOe>u*I,ckjt6T'-/%qWn?
%YS+CSrBa(k)1-KqP7XdA`UgInh>nNF?>MJ"i\OnX(T3er9Yr9L]2Z-UJb+)A=B"s=6"q%hr:E$fKNPnnlYl"BaO3Bi4EGPlJdO"j
%G8V$uT&V,X!c)c5ScgZQ&Q\p'1gO!g4[G*YC6'NI9MI.3Uq+#S(QE0F*.3[A,coBDYDU4ENdbi&rf3jZ+a(j<]XYDaE7#t^lKS6^
%5.]-f3e/s<Cu*RN,63HXA(>6&jC!,,/^i*,RT)EZL%3`AjO7O>rH(.Uh9Dk\3WQHdLd#N:%27%`X7k!CojV,h<AQ4;:(l-5Nb7mg
%COAlj5AaJKZ#ri2VM35o;l>&;d6)eb]f<]sMGJT-pP>j@CDRY2PFgd2W;:5?Lj"_m!o.<koD!COdp#K"B@MD,P_kt`T<9s:eac%u
%BJt>RC6K%MVo'GtFg^Z%S8"a,0)hTq*"[K4$YhjW&qThKk0qVch'd2LRal('4?59kAs8K<Xnf=pS=B!W9M6:\'1Z#sH11mYSiPt5
%8*r%];ciR*H7h?THV[_?k=+u"mnBkd5a0fFE]t#!f0)9H86"\H61Q?q*n)0C)FZQma7M-:P:(:Z<cCFs7L1@q4\cqZ`Q125O5HDq
%`='H();U^,)SXu.ZPPVfTt6IBMT/+P8C^X[,KcJ]gKDcG3="=`G8P>++&;Oh85+b'ng9i+^.NWd".A<-$s@8*%fr36dfi(EO#^u;
%J=SK-@6WaLQu4obf.#+^d_HbVS$+4+UEUIU,).065nbbf8T2*c<\2k7CokN8T/Y,NG1Mc`Z$,52"-!s3f'm7N+iE$A>0T^A;tGOB
%b@:RfMTPD_PL8D1CS"O6FkgbA"WT]NemY,)l6s&BOR#t&)5\0&)HcI#[:qM[V?(6ZTHk>M(7J?6C,&hOp!i22LK2RL&E9uiPK>4J
%dDQBEPbpdMFC^CR]pl&&#f>"#h9fh2&aj3g)K1<;RGVAWG?'@%d/XUc,jgdh7g`)kP]Y"S=N_T[C*+lt6bjZ%Aj!@TJ2*&%gd3Yu
%qA=;']mPZ4m+nO<&jYP1^t8A"EB94^RpZKkaMl7?)FQ]NJ'7m#7V*`XrurnV%3_=N82'B<-Xf9Voc1ki3.SNFM$TiSX<@\5ndXfA
%AarZ",p#s@XL`r.5W!aH_6:iLq4Op,i1h$aHSaiT6"3<VWpF#JRC#u67MY[&@aJRM02OHC[uG)=.BFI%5U-`=27!;mY.+em3EB7J
%G>uOU`-C9eQ7=I(^Rjc\72gN'P:BCD,%7UhW.RG/Z;lVgR,W!"UNo/!;j0Nb'45Ot&1-]>`!BqqW>'J*^SJ#/aKaG<mS(=U[e6Lf
%k@:)p/F_-bQ%+,;b^*r=oPu$A9Fj?IK2bkOn;Bh#7#F4M0;TD(/?R8]('#S*aXZE<s&"V`T*i6$LS2CN_QM6n.l'L2m!Hi,334hS
%GLe@[8F0OpLf]l9hP6U4E[/;IHD9EV>2nu#drQ[pNtCJ=^M-_,o,>^t?a@P2f/3brETs0TY'I.4$EWH=<^_#HrA7)">J-./@PJa#
%`obf["TuE\BSaeo_5S+&`ATm/?jo@HnHRJ'NGlVCcK6%P:hWfk>0gece^^s;UTZW<"E^f$!E<smlk>;=+.[qHl#*q,RV(?'NP"/m
%j.%$%X^X^^J=3cW9:AbLM\Nl*OY3]lWsV1eF,DH2..=9a[2>3GCk*EI^NO#TI!`Gb9W6;<+G%qW[;R?PgE79`W`ZiX9rEd/NJ8T[
%YM-n`<&7(l$mh7s;^#Z_j#dYf4dB3l=q]+JSm84G>Eu,7*E71Q8uo(;;[<iZi2&*`0J)1qW%k/a>oJaCQkWO1EELr"hElV$A/I=(
%B*9a4`o`4F+iEj45YmUfbguEB0jbmuN(1mZ2!h>!r[e"GGSeK!rBtSuS!0?Q12T\"pHb[apePCggq*FidjBsS%4&]Oh$S/04]8et
%O$q80+3>;a=uIsT2_aMkI+D(hiS='Ndkc.@I\J'XQ84''9=?OeL-b!IWN;FPl\5MNN25l9et6JLI(Jgsg(nuPBWM^_0=I@*/L*Pp
%^gQeIJ_D@%?k4O9k[BB)lMT:*UlaVG])b_SO"Ll+g:r.qmmiYWaKi3rq4kG\\h&ooQX(6Me$`=Y#7']);":l]M^`BLioYq0p43cP
%:\d@i7c5hcDh([l["-#U%qNr=@kqu)$g9JPc[o_$8OfjsRnZ3-,Gm_#Ts?9NLpVT#na!`gL`Y.E)jTu/7J^p+\?'qUK0i,R2DJeH
%4Sq7cl`Y];VXF&O&Bo`Ws3pbN1=OiV3HXe,c",GU#Z791r)-:5s%-bb;bm%\HEs_KitSmLX^VW6?IR49*K&$,Y&)'E3?m9>a/GpF
%m^7s%MH[.uEOMJ_:3$J+\5B!+2/D&J#W]q`1Sq#CX1[WH=pQ$':kj2R#>((/FE,:Ir]lTZ<.o&2pF=1aF),!*Z`Q9e1(#/kf8)I2
%K0hU9,VodbP(YU7:<]O4C%=e6."e,fj7Y1=Zja8ukD]uF7B\83LU6W2Md!$EC\46+PIBjnZ,J@go;8=,NB]h$6^'JX)grL%[$"16
%5i#uY4Xm@Yi=D&]<;JlIlJP-1E.2X1IbYVc[p;Y>BrOc'58<5]mOUKXAqeePk/-dDRs[^3U^MS5:a^r]3W[];3*nbEnjQHdT('@H
%H7AI+gn,F`KAJem8di77SUqrlcuAR>=Q30AX(k<*>^2]T:p8lR?C%#A@`uh'G-kj2Y3SL`DDu\0'C-X]?=7's_nJsR2ruNaG0$@m
%SHGHnE8-Y?BH$98eXSqsj].joZ8C8]qf2A:550`D&`+&$'P_[[NHV%bN<Va-(<ndA\*;8E@bmnKQRn-mWUM)@Ga!C0-CaC2hVIkN
%=>tBm*q]/?f'Rcth0pPuJd$#)enq`.!5eU9lR&W^ZBY'X*Gr6&9.R6[UJG"273-5I;0&T$MhN;2g)6\#ROZW!f;*!$9!T2Qos'F^
%O)2P^&S+9[<H\)-E[gb'GBCYIF^=\H7VjJP?Q[Oi_2PR82Nt^(0%@8pduEmqA,c;>mS+X$EHNUoG;haREN<UPKr<W\ocrT"p7dB>
%'h-3)FgQ-iKrPs6%5=`Ue]dn\L(gsZCgJ[L(pBuegJmoN]0C.rIfpIseG^&-kLhtMk"26fs%&RCC\Jfr/1J6DrLE(Ylq6L^[5C[>
%J%X=$J;Y1H;c0.C59Bd,fKLFg3LZT.BX;d0l./[$3hu_7D@La\e'UDHAY!mIece8"+.qCKc,UR^-l'<OqT%1PW\aS@,9%)SCc)*#
%e?3kZf5bZIHMYTtE%QNk=QJ8eL_&Qfl#,<&=(ThVkP<qhJm_/.Re-GPf0%r*`90hC2;,GdTKnt&FjjW;)k9C)"'Bm0e#*sB$H-U[
%3n7^<,ZD9'ZjeYTorND<Zr_V$+%kRLe/eD-.kOPnB5=#X@+m+:-n5)04@:&l5&k?kltuXjO.Na$fG-[35DbZJT:jAA0<),bXgPC+
%'PL-8*[#X&SOq^Wh!(k9$XI6de19l-gghq\i2)'a#:niBM9"$OTVHk_^<naNC5H$+G`r%BG_e#RpGh%sUhe<I+Xd4+a8%WcjTB0[
%k;_?+<lJ3*a`RO[EPB\1q&hPeEh#pqF'<5Pk)%,S+6VC+QL?cski,A[k?EjeEL-(&F[m6tj>c&ZZ[BO4D]/B(j*[?Bo)6!ZL%fZ/
%q)4l,6T4<fNq96PQ#Zu8`k(?RO7TLM2YlcRZ'_8.(o_,jD9K9I=e57X,_Te$-5sk-2N2A!jt+o%JtPum\ZOY/j,PVVK%.qpA4@RY
%De527@/QBp])Tb;LEC&lWZ\^\VdAH5;U[NDEH<W%G0N4ZZaP;RM)94K&0;.*UMi=dX4H\/>01]).RVGO+U[>s2lk!eP_C_A`bur_
%:VF"',E.u/['e8gBiphepZ?m?5J/@Yg310SWcrK5\5"G!lu#,X(6d#?9/LG/.g9B&jlYpMpQtfdk4IrPa8FE,mac6br39aU+5("q
%R7>#&G<\sX=r`duD9<,J^`2\>-*f'jWR)Q?8lkPVR*M47U=tq&MQ\Z/[#+NolE8T&;n7r:a6Q1Jp93;M\L9dnkhI\"Wi46/DD&;Q
%.\KcD!;tQT0Wq1t2D6m>S90,qSu=+gT_\7.*QRtM]F[mi*8>WX9m%:I1DZ/p^<h;*E44"YIH4(1Hh7%PZ_GI9I7DMhC$30i>;Ht'
%)ORqPP`VO0dWMR)bKg!GCeO!SPuZ-fEM@=go#n&2G1?>=hR97'=n)u2ID'JZU9eQAWo[75gU9445FK]`lt8"ho>/t<12Yc_%GR8I
%3kgfh]D!`J;-diVhpED*/l"jNC9c&u^Xhjl5.C:@ikgX+I1/hS#4Y<ui:,iNh'A?U<PS=9I'A*o/-iAlSS+&qCA+pW:onc32E(Ml
%bu_Hs`Vk?4HRgIE[S*TRl-5#@XT1J"VmdS<`R8m#Sn@Dic&lk`Fk<b[XNLkL8R#i?U2$pk#XK/1Qs<]J%A&4K81LWfek!dVN=*A\
%#h8!hH3scHgYt]aFf4Q&Ju4V/:n1QOe9o^"Ik.J[rn9>++00M7JlG&2l@*DkK$F$MHEbU4(HWd_%Vs=V#T[E<DcGS8'^e?=S'?`e
%!h[E2m:UDt%80j;nZGo27RbSeNL$GU<,[XY=M7QL)n^:`3Ro)K8^qP+<TVS)]d\EQjs8</r=dI0k%g_$/+!:#HXG>>8$Z\$?JieQ
%!3L(*\9mRU@7NjTqhfQM-qP^M&tnNhQhg#YkEnbMA7f@ajJ(CWHZ&RO20&a/%sN)!O."PELE#Tn;&J)]I(6Gp2[k+I5Jp(Z9qUdF
%WNM3XINTOS%(>',RR!-)89^lLXunj+m>CPl6)h-f'^;T;_2Md`ftt]_.H8D(.ec^D!2cVn,=8;/12GkJkpN:gj-F>ur]"Z0AM,Y<
%Td#Ju[kFcS8U/LQ'YgorT)H/l36r-Qh-NT/diT-'&#+ln)(1i[c&B6gf5iu,c`[uipokHoD%SUZ#DXp$bfoCYDe^E:8'&p?*K?M$
%Afb;8DLUs1be1MI*b/gE[;nC`P4M/g?0RK>=+qY74OMO.ghp+te*/3LR9,#`:*MKtV%/NW-W20FDlS!*Pd*"8Wm9b1_tcl:k"W6"
%UX.DU`f:H&KXqI8r^5PmN@pJ_hn@g8Qu-*lAP!Fqs'?(Z3@ODKW7p`uTN=A.@&"Z^0j:S>-X%KkV;CD989EqM$ou^G'$:38k\4<5
%<F;#;)Y3fP44&_9=@47$n$n<_:E+6i2=KSsSp'g,Hh"1g#ur3>H`NZuQu,_tke/(NN+8mQf^Lp+jWIQO@j7b0IHohSJ:+R^f19N<
%I>ut-h1I)T"8X*=SS+^I^#Pg%jrO,TF%=h9ZaDm%k8([8?:]W_1V;Cn`BtfVi%_=HLOFI%d"R\\-HY[_G[Hll3^T"rre6DuNeK(o
%<.EBZ`IsCbhu'!4Ot:458<POpeg?P*Mi#GLP/StX8[?#:>n9[THdQDY[m;.X3X8!=g@&OHi]b*Cmfj^4g,i&-?DUbnHr=;>Z^GK)
%hGgQ<I2rE>e>0_uRl9N,]XkQ7Qq;R%J(.fU3(\DO+H$hqo(m-\V(`LeYBgFdL9#d<d=Jjl$EOZ.i`BhQF[UT_\/Z@X_/-OEN:k%.
%[X$CXgK6)QntrhF:[SmU)B>/Q/mY"TE>S5VB+K"PnZ6(+W4o?0_h6-Ye$Fd)*Oon<?1^S_kUlKnVYG4?#LT"O^>(bq^AiZRihp-f
%gY&FRGM>o3529=I3kr82rH'@=@itKj='MT'CHM(83udM1K8kl`V7UEQnDm(lS1Yn+H#C<RW]_f4:BK>ERFf-Afqjaq+*KUegXGSn
%*B^i5p03m?)L\$gI!t.(YI(p.rK@-)/o6#@.USF#[(E7%]p&EAM1!(i><haUp:Jkr8oO*5n@#uK<kPgrm1.s_Mh[;S4L?R);`NMb
%mERV:^3/E2[GtT8IdtC85N?*hH7/UW^$_3eGMFk)n,(S3<H"GNq\8H>IehJDg$c.P@cO5M^#-DDs7NM"[FVn1QVN-JmsDb@;&;O?
%^%LjW:S-@.X%8o[d;-.e%,^FFIu^`&l'DqR;(kUeisI@q^VS[>N]I>[^M7_gAS?#,4pMHC?/YX9=2+FLJbV?Z3f,u,lID4@/:Dkk
%rTq;#g1tH,>X'(Q20=2Y.`L%5cUkRsX-/Q.-9\$9I,1piM8UAHB<ta9gIdt#ftS?[Ln44=VBUT"CGqq#_n\_le82]\Z>s(M\h!DW
%;csph*#>p7B2'BVkAfq7Xht1aQs.#R[cE@g,kb4iYq$MCIUZYa<aWJ=5*<dt.fWVR$VW7ZY:?TV'_Ihn@UGb;k9L`<HEti<-MEG^
%m]N,5=(Rk#&bMHII;Ojocg'iS!g?1AX30_.A2`Hop/P8I"[m?NM1&B,IB=pc`"Ms[`n6U-=$V*[Qe5B)eQ;=p9Id<Nl@d^D4jh3^
%*oYX@-h^QB.<c4q0X7hH%*MJJ#po:FAb?L/TLMN>X.!egO!/-TSCgn%=?L2)?ftB2r/#8oIq<WP9rjE/2oMSQPLrs%e`T;EP>(>D
%b3GIrDBLo6@UIXg'cAO^-ME]_V?jX&bZG`GZ*-d'T),4gU>"7VI8sEu*H7TA,kb6/;Cg`]Z,FBI#No6<2/U[24&Rm7Vb\FbeAT)$
%:R^RMi'11M?i-;gfSEISP%<<a`/<47?ao@PS/Pp-h&b(cZX-*<2XTnbcU$0sHj#)5q"7HD-JcYEI]nQY?2Wt7c^c^omD.M;\lG6_
%rO%WB,!^S1gU3qK%(iCR,,iu+YAV'gGH]jUJ:Hsg)Q4BmQ>,ZkXPWH*iRYqoe)+kC`BW*OVA4I@XM`.$>fqM;l2oeoVE/V$@@I5h
%iQucq<r`*m:=lA&N-ajFr3*i$A$"gBXaAO#s'P.mWF!jLL;ZH?gAGlhUPqK]s1dOjF;<(#WgkO2cn.UBs!smXhu8+riMXN:s(^/o
%qf-gr='i-%b[0_!2^?3[n(($IC13b>B]MDGNW]=-$!P(3`n]3,I6HPK_k=W0dl1H:do8h@l/f1VEpm&F6Frt*Xh=bFER5/4"0(qp
%>[i>#-/m?HBi7R8GdT?.$)M&,UO$\ZN,Cd@m]pb#9N2r25T^2F-*u.=51bEja_Z)bjS^h#jFWRe`#Q2hB8b2!-Q5(oQa:oSfS=V#
%S>\A5CUbFKPN]nEQ1pB1BX[An:)jJ7V[QA$]HO/Pd/."?LuAtQAA*+&>=X=*T'3tf20ZBCCf[JL,tHSBI(/3u]YMpQ(NcK]9cu0f
%Z`J4Jm>'Cu'JeE\s+H>>RQJ[\*nCTV&*dt5./-[#-">G"TpY-&BaGH4gL(l)9MM7?JbIa^Vr<sbnUi3(^Q69SlK^8hGZ"<J;%0!^
%Z&k/7qgEiURJYXapTMJ#4C"UarP!dWCO4mYM=gc<&WbeNs+\(F^&.d<UT0C&pTML.lu)b\dP^=Tq_pB%"2Q-3mTuo>dJC&-_fLXJ
%IoG&&WHUf'!OHnqDY3/i2\=851Y_XmJ*9jKT(_=036G#EV9*P;b4^8TZ`EK0L^iT`pQt@/*CRX%]a5t/b:LmE+M'P[!$eQ6%M#"B
%/GlGTSR&1bOgFMaMdTm;jRCjsbHm+4pMkJe1Ln!'4':f4^)SVbWnM=ASsf;TVj^aMOfEB"b*Vg>QSqgY$<)(nI_%J?D@Lg6<p+f&
%nTD9Yg.@:pGP,duQZ[AKqB]%Q5OBnFoejYKh7ajmO_TbVhn>;pMUIR0f,@OsCdScC-d%DZji_k3^$mA8GIuH_imZ?)lK@!k%:<,9
%[oXTV9qiM;d6MY;H++a;V4I^\<k?0+]\>&P7o-GS>#RAMLWc,O1JI6i_Fa)@r0jX6aE9i1hX0*C](sTgX=rCTZ$Gm/cBHM<KdTZ7
%I/gD^b>5SgC7aD-2qst[eXI@5<=mOugpUqm5MB!:n#ni+^U5XLn*K'*]n^1F<dSVnjc.l=*LV1OV;/$+.=nD34tPH[D`-9]^/l(Z
%I.:,*Gj]F<M;+U\p83'1j+ZkB61;;>](kPna'2OTjK7ZaIr'T%eXCBY:QF5JW-;k1g"#0+Bc5_IF<k/;c*"]ClB*;Mf=)4HIV0Fj
%JmjR3^3ffeO13+F08K9\5P3+BHf+"g[k>YepSP:shkQ+5HFu,kBhS-cI-]gQ[sBSq6,n,@pO;GZf!Fc;UV2?</f$\IPgEe/2jQLr
%o:+>0BWto[9PH]70<`oN%\'p)rHtXl39A'P_G2(=&au\1VAjsMX)_XTRK-(8f4_<MS?uE8SN0]FXkSj7q,L_GP`#A`D\6dq$/FgZ
%VN"4+gf19"9\oWHZf1H?4Z&W\5B&dD<b89H7"&@VjaaIZ1'$5j<BiXL#&pVdHJAKSBH=+qV^b3]"sJd-,llN7J/*f/T4N/]^kQ20
%?\9?6@:3LAel;$A*p)7+mt1Z4bGf6\dD<E&hV=W>B3e_OqkeEJ=!k[f,ORN6^TAleDCN&;@tAud!>(_M)n?ckR=JN<h,_])(u:fB
%<7/<Arj8e!`4t2Hd3IJm3_)dcrDB?$Xp0dhm*2J09dN)Dehir`5Z'Qe[8XfGha@fWDbnfEhVTC2LYO[TJD@n'qU\ORKDk1p(r<HL
%P1n_FiQn[L&Dtpb:'^=1H$8aa0Dh&L)dLLZ/MD+*5$*$HPlR1I[g$I%f?L28AkK%\F\4C\cElh<m^8(ThR9NB8HLc4'&-ZkZE)k8
%9dmKX4Z'-HU65$[#<)Y3WMW:)G5BJ7^CBhNKh\t<A2.;4-g4DlZTIS8enfuEM2'`k!>3[%2f1e_FK!O@%H$g7[&ttBSegckN<[Ss
%AqZDe](q0Lf5p/?`9p&nk9IF9l9hHpp5*81oL%5&8Z\DB=;Z`ZcS8Co_.ooKm?GQ#q2"j[kp^AIjhe6]"tQN_rKP73q1s/EkrpPQ
%Fn61ML%+r:,d-EQ]"b;P=eS>P[\Z+aL1Z-l$$nl-=M8=#;hGEh9VtsdB/[5KF0i^n0^S7C<nP<QSoh<UU"jgd2_1E`X9SEGRME8h
%[GTQ:YZcUX]2`hm]pd-D;:TEkL5/,s[2QI3@@:>BG<;lmVMs$oYWkO]i6^LB4RDrbZP1,>h3h)>X',rC#?S=%8Ai@Eh%$?;aS-Z!
%%AOT84EA?W.W)oMmB@QT(ouV(C&9Bk*DVTW:c:E_ZBkf2k_=lk],aY+h;?[?4<2i%=h!?urrbT8bleq+p.l@#$&0JUn?@)MkBIFH
%gTEtH`_JBWO3mC#Pse_#q>0Aj__aLBJ!uYrbpX#3HQfAqgL6Wi6*5lsrP`,\f_(nlLI:\_*'5C[B=GdXMS-?Z)BSUEV#o%%>/S7X
%=^%?.J'_teL5.Wgk9Lrep<SchcMR,N*qi)QPaMtm)nFp9f5A$>47%GTV,5L2L55`>*HkP#6UJGXe^`u`#,T@7-JpYHSeFc-W:"gg
%4;[5/n?BZBct,\+g@2=UQGnD#0RUdUrj25k,oNT=@K15#r??s5V-G#6lZT3hD#t.Wqfb-Gm@1@"*Y+Y\2mN;LEjrs?4Ddp4__G0a
%\d]0codLlqiF2b(L\4Bs!=]Qplr,lY_o)1N3m/938;nG#iF/#CD7CcT[2L+[2nSmS8MiQrhsGBEM-E2E^MgU!WD]MSYo4Yn=)Md6
%L5-ekOW>UMW=a2k],D`NRYs7<_o"[EfF*%9,J*H#LHYRn*iP8)@)d)/=K>'lp^Ic2]><3hbnpm#X4#X(``SL.)l_e)J*YqnQ,dff
%f\a:/\t5ZT4KR8D\q%sI)BRJ;4i_A`=:_,cG/M3MNNoV?@I#d\2EWN#\$Fas#llbf_o)IF\udCKQjjT'7srIK2HI`5p4[Yc1Ip&5
%3Z9(5O%`4V-tuYmiF2b(LJqAlB`*U?q3n=IFFAgjprY3^'sch!:KaA.W!CZ6<+`ghlUt<%8<3A'L$!X[WU:gj'mZ#a<2J?tEd?KR
%nY=$Q]di4&2;9;*4uC$`p;SXH3/icZ^>EP,m[fu@]!F%G,%g8e/A/]HaXk.'QKTR7lC,8*n)j#7R6?s@3dCTJ$r4Rm!OVU`dG+$8
%Zh`:on_D[fTBg+PoDQ(T5C]fU1N2tO"nL,teP#/7?X$V"4o"h4qY>!sFV6RLKCn$obN@XCktJI2/,ZXNptN-?:J^Dt0>9P3]H@*"
%5(!(fV&*ogiT=J`Sj%lNqV1Sgop=PH=(Y6W^/'2a5$^=.n'AYV^N0!F0RG=ar9*D#\*&3g\bJ5`roS0fkK?iRS'RZiGs9\^Gdf`o
%56$#EE':_BC:;a_Y++fC&+5fhnWh.mV]W4te$JZMm`jG(GO`_[ki:ua7:,!&Kc<[E(X6>H]9"DurO$`np?"Ftn7<E:"3>?TY1I"I
%^<b@?*rQ)^I.F%T2JBSql[ul5^UC_#VeWuV,P&\6=&)PD9/D"2oul_$e\d.YT>,\uo?tbF'$fWs$U=[&Gk>_4'@L+RjQW[#^D;<P
%pAp)^GJXd1RC2F[:G821LS&,DiV.M4r^Y!dP)jt"d;m:iIV>"<V$<U0ii4osB"Tqo0FmN@Dhh,LT59ptr>1rCE-M1N2SU.p?-$?D
%8+P!eIW1U-0DNk$k1\'#BUr5V%lT'HjS_5gjnpQFp[b$Q)mn;^XBkUe+Nnfoh<ME(R8\Rng@=pnZaICu?G'XtHN%pi5KTff4DH(>
%GYu-S2l"(8g]M,Rc=_]MG^lk9H7<T8c%!%*oKLG&,q&90A=eY"_M)n-OFQ+hj?H)K]fq^2DD^rLgKrUjEq`J"FN5qK/ma:?[QV6D
%qmKeCqW3.>e@Tf"Sc;-%^0geIU&9i)KnJA$NUeaZ-&9GmQ9&@DA)hY#4'VQV>O+M9j)BL^4SEUbA,bur`UYZGLS'H21t`#[mT`pQ
%hC-$IG8f3:IV1g!]_0KW7q@t[ca/V7qb,Kk$1/iSF4'I8_qU1K1AmU84R1mCPE-920E6E9gtT/rG)F9&5@NWLc5WiI'`uCUh;"jh
%*)Fp4mG6nbaD3^#2?27@#>MoZ=AOSAg>TZS5<$<pgCMkrdYhh]/AW^]-kpMjBBp9-X_,.kO-f-,=Z'RSZY>p"R;#A55J+25Z1dP,
%[1=3`P.Ns0T!"WsJ8iTbqWms$g[F<3hfWuF0>HWsnhb%-\*21'f(nPUk`<?6`@]^Y$>pp.fOMSpn<qMb:\ts"2u&SQr0)F)C&M&9
%"7`_\hYt*8Rm.(CZK$"oi,aQA)SCKGc*q>[f3Ysujm^^!r1-Nq2QK(0?eW$K&*)EY/!fd(hXG>-s2F.T^F6:[ibL^^/'kX)q>67O
%l\o1.2OF-@?WmAUEqS,Zor[_eY#OCb0->IL=9!?</[XGZYEp^/r:L\g#b"uX=#\ZHG@s3s9.N7,*,nU$Z%Xd4W3r/jea^r4k+A!d
%SuuC,Go<d@I;))/6uO<\%$,!lV88G#Q`k3GI/B>>bUBXqCm9@^ZCtit^&KnU-aV.&>e'dt,e7l8rG:l<c-LBU@<I%eq1Y)dUGiui
%<d"IB^9AM,]st9ZhnO;BD=-gR*fVeR1j6$-=T*4-_1e@Sc]AC(>q.c'ME6TYJ)/c+jVOgTmu8]'pAU3QT+/16a@F/$()&8Zhc4&j
%Ij0Q"P']93aH/N=qh+p5s6P/P.f[/m3qJ[0%39bW)<Ra/V6;PuRfte9l_;Ha-q;%LCKl"_FE=trp[@CT/,k0.4HnAB_P(lpEs3Su
%p&+%9N<QIe^ZM]?LE#-c6&0;,>J6Fehq@eoD=(8iDK"q]'7IO*;ScY4D1-l+/2mMpV"qc.bOm]#P8fE@%+h!Ho<pgd#le8t7i+q/
%_-!fpf%/nD/!%M_+3iD6(.i4H_d(Nk'/\]RW0\3]e!88$o%SroZF-5_7YgHulg#Y\?bF^7/mnFg\\*4XE:NYQMtP!.X+*=@=6-jY
%a`_h^Jf1te?$cE_j6`Cq44eq0(0e3bSj!sEGQ(WuUs@.(/?s(XPJiR7qr"TfFD5lClfXc!?t8g,g=)%*Dmjg1I^Q4@f9Y"K24M(9
%^Rf:\*nb[c$c:/l1@O7Ekcjf0FbPu><qi^4caFV'^A>//o_Ak?P[-Ap:;<noq).aiq76*AGAD^.C3/^kV[Hk1$-I&3?`G&Prr.'C
%rRI6<(.m=`/#De'0AL0GH2Y_Uqt%:?p"GsTO'CL(n:O.k^%q!:9S[>YKi:C[=d\dA5C=W3mJ!Gpm4*$,0(1ui4[8kUrbZiPd;Z9q
%\T[R:[qhr8pAV80G5'GIS'>0HDL>Z8\f(FIZ0V1R[Z,LJP3qY!c?s_+429JXGLit+)onOm*^76A!7pBBHYgCKr`L(;f7<$gh>"R0
%j`L1keX*58^A<9@FDq'Tim,NN#G83gb!(KF2ZJ/Hp6_3;D!(-8:%RW?aei=hj[V1g]5#6)_dgVJf+"API!1p([G*fgYYt/YoEu)t
%ocniFaK6B`oioL3?;pOi_:n.tAkRFXYC:]HZ(/Bfp%n@$q/oNfYPh\;_H*;qXtH9Kgg/ZkAkn&DDE_4\E]^>T<dM![Fo$"OSX>Tg
%2fB^"J,)PTH#6TKc@10"(Ui"1eN9I0?t.a%(CBs-l@<r30E0VV=T<R;jNV9m\U$.JZQ5Ui%0+07ROV>sb,bDfYe6jnRt]XH>Uhfk
%hTp,"r9F3\jY_ZS>Sp]*Ulc]u?+[]:n#!Hh3DNosmsUbE8bV,^qGb!Jhuj3Wa4?I&IY0++OOEE3pJ;q_YGq':4ijc)=4=!,dRdNr
%YOO&Y4=uTm[+7ARV&e,eZSO#VAcTh,F8'$Q1CFH4<W$KXB$kJQf72)jYIg4BS#n%oNMW\fE:2SJ?SnG2c7Ih!q.+)WDO"!Lc8<th
%]:$457lP'!-]d-BcOHIQ;9Q1[:je&Efj3-c?bYm[]bC0W)S.UYG:>E3C_HgKo`l"/hem@%d>,--fD_5p]_sn*,:>6n6-SEWB&OU)
%ffFnb0:,I07;$k/FaeJ:=&6*'>K>Kj+0IfBHfMQ)_pb$U&+P9*[<.?HY:fNrlVq24Y3.aUKD4u<fA:n#^Y+#4iH4,+)^c_C^U6lg
%$GX@n.V0'cMN4je)15`C-EjDD;V!tpSf8.CC:HF!OBAQe:CJCIVt(To'@rm=3$.'<@ji(7-$j"%%E!+6K>B`-s6f)@@D'jF8Fp\1
%e<%<"q>NQU:3kP]Ul7CM;SI$50:oUq]bS;MrNoW1a0Yqlpm6o.Nud;;aHfo6,&3.Tm?trfTC1X0AnLSrNu*lro%QYNY!JR?R$mj@
%B0*Bor7r.Mc21;Q9]JmVpNts1=90u;1"^D?S$mtDWe5O?2Jp31kD68ZS:>>S_q)<IPFkJijSb/6L(LcM(]WUfVG5d(q!+Fm/?c&J
%AmmUD05XJ2E<AfPr8HT)%gVk?7\I+YRt"c?E=p@d8(iZMpL@u>UpOQ!mdQQ:$+g+!)j0824ib4p2/!Ja2U"<'nZDANE>ZlDPVs4c
%WH619i+[>K]'>I?PVr`(WH61%(u4%r#&M6LTA<7q1,`TO]kQ9QMtOd\CPtF$lIs(LqqISj$P@[<iqMQ8S$09Hhlc@b+7??3q=M_8
%Xjaa$+'`$TcdU-sT71WoY0:efgJ:n6]b-fh"(MItET,t.`rnOD^H4p38)($W,?R#Kb+,#i,sAnq4f.7^a3cd1(chE*RCq"WmJZ[T
%9u=L/:\]A:C$k3Z3.t(Q1Q;3OZr_JJdjAX?r-lt/Q$la$:U?hmdq18HDSgDe!<7H!11XeM9[K*1<tEV9^*IV-4)R*dc5r>NkCUbG
%7:-hU_\^(<F'84hJ76Q*?5'M)Sq"*?o\!U?C:Q"ne+WYVq.Y,TY5>Yjfj(*(pcA"mXtGjGJ=-kQnoC76eEA!ebmtjqX:>!A)NaUK
%]Q!gbr*iWd?/H1TopirDp]"X/eg>@WrBFCj1RUVus2!PX4T6Mu5N-%`K4A.rV6gOKE]lR&lpL4@_#PhlF3*2]G.t9/(Sk-."98U3
%dVM%%g=mTgD0orGPlL;Y2W##EO#ihMSa]+rgrkGmcGGPg>G#rBn)-h6>r7VFhgNo#$/NVMO'ug23Hjq*r9IZQ_1rXBb:Vu-?QUBh
%/4oOcYM>\s2fNTq`nk\Ib^.jk\VM3==16MZ7,PK.h%(J8DSL)6nO2R0kt\N9`8W4@Du9K52g;p++JWArhKnqL^j)@?A,ALRrReRe
%$NL\fRM=!.mY_mR\cacPS8FdR<^lV\0BW!tBj]MY?Smmgq!`WS%jNE./C+*MHL:J^ZN`7DbD&L^-,+Qplop_]!Pd9&n*2aa3h)Hl
%hj:bcVLQ1kpUVZuB0T^Kr'lXcn.lW@Rb]tFq54+Z_-:Po2oDuR=)u`$#HR3#CH5r=r91lXS$3fq2W=6"R1JR!i')feXaS!B^6Rsm
%ZO`/c_rfX9,(&<DGnYY?ISaiI7mjDtgb7$(++i$5Za5*&p/`<Bh5]SCr'K^RB?J8XDh==IebcR[n!s2XYWd9?fS?$,bmT"aX$I.t
%VTfM5R36eEc0p;^A]ssinDIV+@^rFc:06jI5AFtpeMVoU[&uD]6of4HWX6%>;DH!eW=`>43S:j;rFY]:(+jf1bcuZVf"sBg;C9S7
%Ju\.iG7Kqe*p,gnl<l?%n=\o'*thi$^+FUOfg]'1l<sWP$M#1.2H:d12d7WT;==6rR5VZ)a9=m03QgDCdNXpR($&MhU[Eu_Q>*\G
%"SeFoF`bpV,1#*nZEjDq,bJKDEp!Ruc!o-k,-BP0Zq1no0h7-aqs7oZ);)qic-GI8O%$CfPP.N0=sRdiT<9!rh0[oP>YRiVZSuqG
%N,\"*Sa/XWFfBMd7;4oaKTt&+*EA&;W"8-c[#mPJ7;;]<:`i<!lU>Nq(K!t!cWo:Ro>o8:cJGtT0g??go^_-Uk8XYNNjslT/m&n;
%FZ3gE9Uk^rU.\&'f-&DR9Pf.d+\e`un?52-VE9^,WQ^>`fdh=1?GReo1UHjaDNPeja=G\4`nY3*C/C>1kS?#<WK]f\rP$A'I/#kN
%CO5Qh/q3eIPL1DCJGAM`-7*E$S=+4\H?'/]B4h*<IiTa)&p[;u@4;_Es'2.LR^po:s4e'Mo[!Ma[X?@/1:%\N2QcTt-F>L*W#81o
%WD0L5\9VSXoSZU^gWb^IlPFE[9t-Hm^BcGtqn,sUbl_2Jm[\P3gq#5t)CrT!f#D1`(St1XiCPZ>]Wdb^$_$qap?\ti,j8Hn/\ZM0
%Pj[$nJbo.e!M7Y.5"k5";R5Z8E:G!UhUh-\is)Tr7n`JNfRoID34)3,s2CaGJJoSjd(f8M74+%hRI4XY<n[h!%So`S[Vftooi_qQ
%I(XpXr&hafnDMXKc+CGtT!T\fas0`qJba&P"Bn6Sf%o-,p@[AllC-h^mYtZk\F$$^LR/Kh]mZ/p?@28/datU&T,nnuK5K_*]!oH2
%XlcUfmt.'qT8'2ggg!F.7,o(ULMl_2#&`.QV5_+VRf#N"s7gaI5M8.Pn-*kJ^Z25bpaO]Q[]UXko$:Bdb4c.b)1JuXs6V=8qul,i
%[%\*!?'4ON.Ob=+o@kR@.DG`q'e,qu)74ATjRUl22YV+^RX'?rTp22>@J4pqmsLh$eG>602s2^0h2L2K>AjtRbWWbU^6S`b]mp^p
%eeUK\noOOhLDUC,MkFoUO1%88hqQdg8E[Fj\*cCT4[1tlNm-J&jd>k@_56JL59M9CQ'R3hS#3/78"WK"Ko)U>db!/*;fa^.RQR'g
%R@4Ks8^j2=Xe@qHRM/BDr4b1greOilV\:T\=aL#3kj\5\l.=6g:Snr+rjXlZa3r[YCS./FqS%B(Gkgq#s.""V5PTAKG]H!]4MA,q
%AE3CN1tk&Sq#9MsgA=T.ZtQ2mQg;>?jXMNmDFNY'Rt#%Z^?o0QHt.Zt:U>8O'Ce!tm+_U#&!.\4['"1TD"5^#0>R9=B,5qJ5=%DJ
%F/EC63>,b#M3jBTp/QM<l?_L.p@mW:?p9ioiqpV&MZ'#'5-?L:\:8/aDK^1Zh7<NZ\c)J,pjDE"bq$-rC4#F6p5QI!#:+rq1+N6c
%W/Fh+D,p4`aeS8tU6^;c]<Lkkch.Yr8#Q+NT1pEtbS.G.W2`Fh'-4XeY/p'.-TZ>Umld5O3mjWopt&2ES`nEH]\&jd3mjWoVuqG\
%l9ntPHDA.RA#fXPn;9Zl.B?DVK[IRmI^=p*BCfTs2ldelRTK2AWu)bWRm$bq.Y`DsgMd3D7dX(TGo_j8V$)s8Kr=)AM:pUt^LlA/
%]UMBOrn;T<5!@SD'3r"Y/iko&07oU-f5>/(Z+Vd9bt%3Pq4F=ejR1(/&+WU_79LcUJ@t1#WNS-6QQPV4mp==cq+Wk%1NSh<I_G7?
%9#3pAGad,7U8Id3=]JT')62F]Pc.U[F*YUE\(t!k1T0\#ne]Vl2EOW6-USE5-HhD$>OS"/Tt.MZePW6CR(?e]p%^-60CI+`rN_@D
%j?leKBARD_)jc&!'"kbI<<W<=a$7[EWRrU*ghi@X!r^b*Rs2#b2r2KBDum/pgmHF&nGWL28"#oq#e8F`#5Z-+g06e-E>&$=H?ob\
%d$Nf*hV+D\=EueLr:]+7I%=/5Aa1r#*R-sA/NpeLk*d4aX$'sM3d+qAm6VC]I,5U&FD#YnD$f'#(;Fa0bd"BlBk==Z5Fp'mJr]Wj
%KaTh@DWUE;n+.P#fWtt?gR$[S>NYEA[+$hNbEiakME/Dr[M@=**?W>(FKkH#=sLOtmBmZtFE8%lUpVC,#-D,YZ`1i\cea<G]fF7R
%f),&6gui?'5p$TH>'uJDR/./"2d@kDLD\_!NmM?dU^JRKj-D"C=g-36hVuX:+Zh`g`cGoJPW%LnC%*k7"GW-3:"X^`#oKpp+.A1t
%I6]ZY!V+q?9;P?bg%bBV*4M0ufa;3O.,LZWfKJ7foc8TV2<))FEU9E-j(rES&UELA+G"]fl9!$keJpFn-jA)_k!tr:QscWN[E)e@
%")ipt4?haK<9<W"P/m?ZB)h`;&fCBe9B.YAe:RttS\s$G5[MoXNlAQ?pUnNm?W=VZ2f5o^-GXF5(OOA'pI#ciF="-T3ChhZFO&:8
%E?[!A#J!)Ii+$b3dTSIJ'21.DEk",GNSWs2+Iu'N7@2=4?YnQ)ZO=81DR;R91uEWIdReEFTmptWfX3rQ:lj'$IFhA6##q>(c8ceQ
%?C@W&Q,m`1]),.<;2NGbc8j+Y+4A8]$;)8s6eq0hkbPS^@.:SY$#eVR=O9''Dam%I"Kmmgl)*"e%(A4U,"b2UND!HXfomu@KQOsB
%EHP6PSrbfEd]Sc=eR_!&cGa="4_*a0ZIsZtn^m0+/'G-):;mp$5A_d^^U(3Fq9E?c;7>8"C?O!b?,kO2QrS4&AO^RN>JBNr3=cTq
%]G:;6>Jn/3q6ZNUIoLdlmF`:V&T,s"&QA1N`X@`D.<+f,HNDO>k!*'n[aFZ,ZtZ;cLApf3fqI!IV2#+#?4Am,>A]Y4/MFNLF>!N$
%j)S#Kp27FDmG]p+e@"tho2JRIp[aA/Mr0rN+#P\,r_aHJ<NiI:[<nSqg3^S>Zr`3k_U3M@jST)r&@:*;XNk)gpPh3MGN.EYC:S2L
%e#cfnhH05dRsTcIro#oa&A[WHa.*LM4:o-aiI`Ff2US7$L-I?5a>;"(nqC<j^(-Is4o#<-n8t?<"k>Z=Hb1k"mYC]tjgq@l19>>K
%[tSiKetSL!=!cEk<dD!uF3:NYVZ+*\J''YhqV7Y6;3p(m?G1[[FS#4()`)cAh3YS>8\22hp?;IoQ>:/P5:fg[/NLd751!3<4rEt_
%fol*\Isbtsa5,Kko$_C?I8M*D\XV8h-g1/B5KJ?N'QO8d<-c48*coI.gHEVB?S;.=s7Y1-5J:iX=['Et/%[b3b.4-rdP'J%"Ri``
%n:u?T0=S[XgMo>Bal:m$3pRNQ^MF[(4WqH-2<XFe]k(7W?/2pb:S1fJIh2Gl5Q<8#>#'2=I!^>1k-a8qj2/Ls&,.\h>-mkDqm45r
%\[<!ba,+K#pV^d.h0UOLnIGO;HO%k.&V\CEER4A`-_JO9:Dpkt6Ve3<J,S:MdJNUScX0Ikp]!69Sbg6!li.n!?i47I7FOh_s(A2R
%%.8S7qIB4[T>!<E]aLV.rR0Eaq<$:]o<7%Ip.t^V?KTn`Hb7UADb_r]cbBED_8^j$L&A=NIW##9oW0Ug]U(jH8*1Y2I?+QHTDHH!
%YMh]!rsSjTJH)!G0m<ET5";UqHhe3OF[poW9?-sHg7%8Qe$%Ytktb7KbK'J"a7qk.B8ip?lAm&FSc@\Frr;mVouF96s-]alf!oDI
%1ej?J2UJokdocSsOWQ?BV'a+kRBoaG4o>#/F*@E2%2ZP=oc#Ljk.'oIhdg(gigOj8^M_[`Or4@I7[B@NX;NA1afrrt)%PK0[6`Nj
%SB5<gUgZ'>NLToOjp4]41l4?B8?H[Md_]^f6tt,m5OiQO2)?1GgGI0D2MhNr"\k>NB_l-%%qhD[;dqbjMjptEVI_;m7U_`\2j-/K
%A\$11qnki$5*8'*d_t_&'5*e3P0,-tZB3_8iH4#=d3s,S8t(SEip"8$g7l[0N:J-SCguDnkCEqU1CK@:`kto%+A1bS0K%*/$7rsL
%2Nohc%Y?6F=r7%+P4^0sqoTpA.NOqIN(bCJg.\6f#i4cc3L>D]`=Jqq0MXEhNKP<Kj,-_p/br.%//+9Y/$eru,fW`7;"d#X3%Q!q
%Z<9(VA3@rMAe:ck[#GKS0ZM!r/-hCGET"3u^r_K+i@&MSZ,+>?'`tZi#NM[==f;kCYaNW8nO@#X5o:s>Yj?gT?,4:TR>*?ELI3HX
%c7hh'NBAc`fa)pC,aL7Hd"QN%Ib<;qDT4+8?$9G46b^OZJa>mkji[p?iB"<,>H0L>'I"3!c17j-+ZT^/,R9Lr11CnR1SrnM9B9o+
%/2PJ]jeV_&Z#,5(k.$Ag\7V+kp972(*!YtQ-9m2]_@OTU9qX;cFO"i-(2C/mcO-NDmg+WojbRH&@aIO.T1k_@QR%hu86NY_jKP^Z
%84T6dndX$/].#tu<(KC]L&M.kI@$E73*?8pYWPn.)$1u/(qURC&0a:X@<Z7WjBY(Xerm,rR):V#3Wj7XrZU<i:dPrXFXEE<8\'RT
%a?@`EM5G;aEj[Wn#Q^Dk?5L]sf'+!ol`A'k7Bp+QPa!'*Z3s!pGZtlmV@*LhG=V'%%ZWaWEBY4I#n]?FaX<1@npbTLK?(UbnDu4_
%$HN86qsihZA#XiAORg45'\8uT72j9GmK0mojD\Wrahf<G$fkoe3;&L+<eNe5EpTK,J.PX!EF(>N%,Yg]g1:#[>ibBK6I*l[?aa1I
%?iRdu``<TK6]P"qZXt.sR3Ee(@GFLOc;23HI%Hp8?XGl+dJ<S7q*#j;QWCk?cq,M;T\C_[//4D5=[\t&:?C(Sk/UQ)M!$GCgK=JU
%_K&p->938iP#`2GN$-Wn!Q#EUd&iTqO_,4#TZdE`_\qNPnup3\d^R?cO$aBb6'A-II`C7Yh5mUe,$,KhA:u?-S!!rbQrpOH]N-3t
%7+c)Ml\,sW^kXWs1rkXfj&BochKYFjEYBB?]:(eK<"dBVMXoR=!d"5:_P7/W_Q%?jPGOOW,42:@kGDV#i6PA15#(tfk@;8INCRlY
%M(-!p5a[OgYpbH?>nCmCp`Y+-,,'Sg@SBfREm2\ZM'*2DOrtE(-Z"an;HTQ-Mm-l4\\Itj/!:1F$)SOb,_,k=*/]Jc*Q!Otb&*gu
%d$%:!OFTQqg_M)u=6RPQgg*Na8/jRE9VcJ"i?/hs(0[QP+;S!c*@5?SUCo"$&'G]=C*POpeu+'+OMHT25F%uWaU4bbnpMi?!=)&-
%anuGM_TRXbpdQLg_Tl_)/"A7;3t+fW]TWjFM"6).+kK#5KreGF7l/:9R[gH2OS<`4N_b=57KEE(b04lME[@]R3"^$<["Xo"pFF^(
%#_+Ygi!to(<_4]Dm\$+Q-]C>,87pgKhT,]mRM.]G)V#Xo>Yt6!*_+JZ5kbq<K,bU1jTR(NZg9p??7-9j.>nTpS-c=@7s!cp_@$oC
%ctFRESSYN-BcbEO`1F;n"s_0,A$;<iP0$eJrha!J&.L>!.`\%bmSouj_=JX[75im\?*7GM1_IPUZ:(k)Y*NF)Q&jtUi;FM4pH\9S
%U>eY:TQ*fHLr_=h$o810YY<`?5X$q0FCc.S,(@%R/G+Rh_*mj'dS>sePMdD>.*6ZaBuWV,)!kEO/j<BN^iEkW*(^9V,r<V6aYfmb
%&1OT!%<APe)#,e0QfnmOCIm[=.iNHl=B?u0S1)fl_%XYX_Q`=Z<Y"ib:]\inb(^O@Nl2arpY*R&4i&gk8FfraFe[O@9_@r!($/+S
%FDqs@ZEr1K#b"GqQ?s5\ih^KSP`8IMNh^be!Za3/_WpOJ**-$@VjBne`FR>NX1kC54<&IU.R/d6<HM9PX;mQoLWRF[$8l>XOg$!r
%?Fk19j"W):.QbZ2i_1ChX\i:o4taZ7$AD7^Vl#CdhC?J.R@P=MgaBg3bV;skD=r?RPZn&J`0h1+:e2:Gkoq%>DE&J,`*F'WT#7j$
%nrh3i#.a\/^UW;YT&i7giPgA#kS%8K$m$4Qr&qKN=1("Zl:%=rl.>WJ.^DJW0\%X(Y'NdXQ,+;k.3HZR,%!UT+q'*/(mS^[m3<Ve
%%E)gc89&DH0f=W,,q;h<=;Y2,nP_iL;r^,&@2pOBT.iWM8VeQC)BYe5pjGU^-fbKZ,`aVrWbj.VOD<]//jbTLW"n_Lnsm22niHnY
%7KSShX,rN8,1r>>6YeBJfntJ34I?nsMtK1BBEDWrBKh!<lJ(A"6kicEoH,Z;+iQj%;CtYV#9[od9R*[U"=0mA%<e*LB2AZGR1`AE
%Kgk6i,!cmCi\Zrc'A\FQVmV0hK1\?'@H@-!4s&\L^p9`:3$a=5`2/S7AUY(Si4&'gRfH<a6JYQI/>H\*!"thLFqE&J;'KiTqm<>O
%+IMS-CI4%U3/G57%VaD2eu3lXNG^b!^L=87,i9P<r,\#0Er)&>`Api["W7e/eI@`&&@0X'LeN7[YZBg7o,;6:TgS2_7>3NCT)9,!
%mqgP,5Ii.SJo2Re/\#?($RScHi7RAqq0;8*UM<M6!Ng\a,R(r=MF"0HM6+'<:@`Dfq8cDp+-GG1(T?+C:(e<^ML#X>a/Vp4Bi_b]
%E^_-3<M`"oMQp"42"c<kKWnA`7IX_^",=o76B+1Oblhh3.q"fcQ=AZjV%Zj>6kck[=Xs<8VApC85q'eYeJk>4>pV8+`c<H2]KCj<
%OGstFO=e:N7N.@1AC'261(]=NIW37q##[jreb'liN@\HFH7)B;/<Z=gZ$/LTs**REg^/*gajqa,R=\I3K5bW0TmYf'Pu$)ifS&AV
%h=gBi,QV0pe<4"=X'46Y2iLX5\4ZmaZ`'V<7",Z"h*_sV%Q]sS+RED[0)*.i%qH1'K/Q:>=btq!Y=[h[]I@1X6XW#4&IqYR.^Cf\
%ejS\Ske=pnPOdX_f3F!L]=*K'A9qO?heteNV*Wq=aD[e,,nWIXH$m)L4G&V&9"qB!<:,3b;`NRl+J>'tlf0nqY"Z%tQo$\Ba5gPf
%E`QEGC<Rm>j9iKhphl/_UQ0=BCn`p`WsoN0X.O#FmAWXj3?pBrKB2`\_25UUO17O??s27UD9FP<=7n-M4hadg-#hS8M$Qe#[7i-)
%.sie8>maVLKTo0M8;UGRf\(d:MBDUXgt;ZN'<s+>DkudtRMDnr">RHCmOO5(H3K5sh=g@sZ74&ICV2c*:Bc$C94QiY]"It9nDJ]o
%jR^c-8SuKBmao2aT7#>lEO`ZoZ[_Q1kj\6Drpc]6TY%'Vdn>`4pQ)3+Vd*QbpjRO0Gku[be(7r>bKIp*\_'&"%"Ye;?QG`.+.g4=
%:PY[kaE=S5FQ`/Zk:c#ta^2#Me*lW"9`%GQIsUh^akutc?U&[L:=nAdr<F:,s&BuTY(X76n,)fn^Z4kY?RMK,(]'G*`4n)QI?PO`
%hh%Pn[Ng5m^<\KIjCSW[?M<CEVt2S@;0h<taa)J_[nj`0J)*>8oP=KUl2Jg#83<&cZ^kE+s8K^kRub9*I/C+NB87^\D>d`iY:BRQ
%CL,QfiVr*@nQCo[pGS.J%TE3Hq>k/$3+aLHQ#[)7)uNQ8Z*@i1,1Bgur^$/c,8QegbZOWd,^O!)lr(3""*R/K3"ua5l*ujq_ucnB
%,(,)pK:G"D#.Y!H&XiP9c\etB"X`a!%-!.h'H9GmEQ-k-4Id^[89\&KADA>%Hc0p/h-^gOB\S5[1V-7::hT%\K*\1f")lE55b_XP
%6lMAe]FjLt50k&X+BU4);$X+"iqpZ)1]cEr,*`!iA6a6P"N%fl1Bol2%KE?/pLBrOQq2WI?>EXfLEmgHp$e\X,Gd.*b7nA.q)B5Y
%6#0;fc1&p"?82SWis>*dYT#DK/@Lf>/S.a:.ZJQ^H^7RRo;GAK"5O79A-%`$#'ru#JOthBXUGOc`A@s^f\`AN\2lt_]8X"6,A(J:
%TVkI&28bY>XV'kZ'6E''V`Jrpl=6f`!O8&W9"7H`P-,dFVFiWKXdD_@K8FfGk_&.^KtCWDI$"2]`Pfk`nRDI:Tao3L6[8/?\?L33
%eck!KUa`ukpteR0W]Y$S5d_1+%fQG><9:q:%3i/1PC9E)BJ@11^aGlHMD5H4.gg,c"sO2N[W$tjjB<J&r1LV94__4Fcrs_3iaN^<
%9WaE]$%NGk)+@bR*r04RO'(hZ6^/WO'9W`@Ta!**#K]kl=DYi>-p`%!3=TciZ.N%,-Zn_9+H2n!."c9baLH&Ye!]<N>f:+QU*ZTY
%D@j1n?Lr:pM%:"4$O;>uZn@Kk.iF1q$daMi._cdo`i(F>Q%PAM,HF\3L?Q]fU>X3-(Vl`g>nGSQWg?7?3:cj%<"*_N*8(I&-UP&F
%,kGo?W_GSmE;6Z410=MF1EfR^=Wpt@$RdN7fknff8>HE.81$QB,F]MSPSF<H!A3Ek9+)JXj!"W3<0*=UEr*a=An?X;H2bg^cWgr5
%`"pD19G.NmJFR;X8cHXXZW05W91@lbn0\E3VB?E)D\qAgA7^VF=AdF%LmScL,RV.>7c>Ql4Ga'#6)P,X?2QN$AM@#q?+gLX#W`&A
%7kT"51VW1<&6kp>$TXj/7NdmKPS^B?&-*6)kQFbQ1E/TB;TM7m,a!EB'T%nY[E9WIW^:auO9j7NK0ouhZ38(tQ3am1N*nas3*%j@
%r+^f0UP_a'+;+E"J05^Lpq%N4D6]$E!A`UR-P:E$G$G.*%./TVaU(!ECHrtWF,K<V6U2t4Q,+"s#Vcj'Qhp+]3QY`HE%:<K66Dkc
%4c>Qc;s^PVo&u\LVFCc0EZ/!c^k";G;M0nMFTmGBAUXgsC1p@pP+iWJliHUt1eMBmAHakbi'<(2g!J(r_XBSr&SsY^.>QW1,>sTO
%`7/.1*/WK%<^6:5[ZS/@ADDLWSV+u6&>:G:HDXPTn,m>4N4?th@`jKt3Gc+DgfU77H3#O79A_foCtRf-WIOQX#7CKmD.7=;[lhq+
%CDpeS:L<I,i8)g)/m`"O_8\h%-F.Ah)\$#7Q)6jAA14HWWnT0?.@s(bKi%%$5N7YhGZF2=!)@hd,=&a5XK7C6F)kt<Zm[*1:$>1J
%b^ha,P&3\4&2%-+KB=k'Ui%W_N#\6"PF/5^lA92>0#12`fSTU=T;A;@Xf_IT>*UP["a<W_PN@c)r(+="#SZ1\]Z3'0iJbhn>TNHY
%PdS7omU<&f3a`8NIlZYZ!dr+_5R:sEX2K8`<Yd,Z`@6Fe:.Bn-U:O^jWXTC)Wpof-LZp8Q]R3CmH<I<L!o`b?a)Nd>2"p?&.aI8e
%U!X-t"nF#6C:CFu,ZU]o-UNm&Lm1pC$jm$2Xb3f6;`2`!X8q(9!X+Wo6_?0M&&R1$]te>Oef[B-P^A\\7J5f##^*p1FbY^"KJ<k=
%#.5-&"LA@N+k4J-M'lC*BpIm60F!Bt/`aTrltiWk/VO*+0phu-'e1oV^eO5rj2o5)P%3$e$A-]\!iPqjp:PGtKsCps6*)2%@_a@&
%0uFeC0g.nfPB1S*A-e'U@%b4WXq?o#Ko.ZHrZ?)+)k<TZ*ok\+VMB#K'>QB%mTX':7Gm)aiYnD)*T4mSF@]7j<GlU=QI=o6YAK&_
%Ju-H=EA1fLqRg#l@+6i%X3#NpnnrOm"d,&YL8<JB5g^4]8`<O#$CaAR5j1M<:hs`0-5$VQ0d[gCYu"js%hTR*Zm@7L+ca/8b&Wp0
%(1]7e$V[KVb]![p32U:)G\J^&).VTS+@iuY#QR;>0Hf1*c7k2/LE-XkD.r_j(`;lb0oSLCF$7=fb%94u4ro!V%Pl`=J%Fs$Kr"l!
%%\mD1$3'"5W%3G)-i1=(aK7rP,oImH_D=2Arl$HdeL@bB^WVlSe_:<G\,_V6Lfa\>n#>*,l)MGS.unj`rdAf)Km.0o1#B*#B=hVJ
%7)h(bOHN*93`nZE7\.p:reE>iQ*LZAAoW:M!-k8D[5ma6!D?+22/\]"[.$U1N>($qHh^SC#@:Pu*Q6f$?6)EBWTT/Xk)UB(_oH^J
%csT`7[9j3qR%><;#AX&Zp68&hTgJ9#A.T"Zb#AaF!PX=FUd2>dEe\O1":[Oh1d%aI;8TZV@-V2c8GJ9AO=61*\EMpKD)iGfMFrE]
%+&NQb%$h7#KfUd-W1P52['P]Qf`e:W"0.P-A*`VI&[ii?H%<\6UK4/8+CZNm^Bo9'cp0VTn^Ic`*cZ8;`#)R-K-cDFhaa2P8i[#u
%$>i`_<-]^sVFFWI87.4"@mnUQ9&:D/lE_%c2hH%\Ru_?@N2A;'.6;/?bTOF2&(94,K:u-r)_RRa9PtA=6"l.s@$78oK_L9s$D1J<
%^`;-%=U*`_5^9\kOQRbIT.37ViO3CK5r&U@DukO$58kDuI>#`8cN/X;k%6m442*.uh\iVQYD29f1+(Tk=U:"oK_V5"B4+.d;HP5%
%.:Df<O6+rF9aYqAi"mRI#"o;VUG=D]mheG8U/oJ>\Mf[?U@Jqr7LkW:n8SLFU?K&8^]7+l+-fJomM)YMj/kZu#Eg!Y@Ach'i$)[m
%N^Kh1M8p3'$'6*p3t5#"'R1Q%fbfhp+1(sM,JY#Rcu4[hDA>iX_H+`rnL@OYRcFEs::&n>NP+$.S0iC(5HM"7EZ2a[.QPbnIlL.e
%:.#10o$.4Yj/@+V,/C`fFX^re^T<;dSkk`d`>Dtk3YJ7kelWIcOfWkZ"o(pe^jm+@Q(lYLBKMle(W:0th5(2of@PSFdhWba*X-'\
%5g.#h5Q[.gQ#@e-O(@(Krb_Ro<<";K9T+SN`'N18P#".1/-4nI,JT7KDlUZ](`B7F!BuZAWWl]G8OgBT6%ToU3-NInj$:Uj$:#!-
%T74$IDhgg`b_m;>&hsOJK-$!/JC=W4*Z5<u_#Zf2P'\u.(BQ(rL_V&W^]@$+%QIlU_H%]5'3u\?LpJ%';`5&?gW(0ZKqebAd!0p?
%$*cgn5!5+H@Afe7CP2](CQVV4!'!On:@U^tX4LdY]E,YTnB/q?,\hm3bl7&3`5n$rOb'Xa!Ff/E"L+h?5V\?\.[TFM#Ta(3!`?RU
%!<rITa-[8V"-06beF>0rA!m9b@#S7%9J3Hj65fNj?kbI-;(rZ1Fsm2\<@"O+TlRbO>`c::b_(UN$nepClIl23fH&`UPco5^>m:SB
%Xi'Lem;I<%^&I]K0$SW's5A+8PLnInFY3T*0Y@?ZaKo$_9L3NDZ&DO9"[%*_cmB^Q,kU2VXkja:.J1,,QTH[fD$!--#_?(7AIS):
%e`nqhe>f`D3$9-`(1B[7fFDd?KeI$&4$_:Bd+GIqk:+p-%m3.V*!*ZDm!XS`TKE>#)k"P(3?SP!4e.Qi@0ss7S=_b@=Y63S($aih
%#7_sEkUh1GH]@f7eu7[PBW`eXCSAepA:]&g#V&0'NC8=Mn.">%SGIsSJV:*FQo'bY^fd,*<'h^n79rfeeCmk0a8gSk5=(_\p8flt
%'YoRD@gBr>nqknA*Q,]U*p*gqf/\M(J^uO__)&%a@IdMCA%jSeit8S'jP5mY)X4hl3[k!l5n?K#_/17rOTUqp,7Um[`k1W#5j),C
%L-C;j%,+)p[FX)hdh9G&WT,Nq!7)'*D3m#]dc?Y5>]pAEO>"[aJP1M<7:@&^>7op,e*$##*opj,.s<P*EmPHI\NG=:jpMh[+m!`4
%6rP#W\MV`\0b+M-l>=Z$5D!&_kF!c.Wr\s9L]INu#%\kp3$_tQ&%l[7@Sfn(1kK`:6pSA8-`3"M]aNt,eKtb-3!E&NorrlnSYg)[
%6?8A79Yt>M+M(B[ETCDcP@HgLE,("ZU50$am&GWY.CYt<KpokHB2%NNR@dTR+Re4qT`;+pY7@a"+"_@pp+jo+mmYfS!+]>ndS]M!
%1dPid><oOEl";04.BtG]7$M!BTnJf\7#ZdA!tj[:"2?^m&"4?$9n6"@ZWh_f6R3?8h863p1l/jR,(EI:-\9l=*>PO*`6lq%9Bj'd
%[i$nH@u8l0@eG]$Qr-A`@WYLe(;)]T4F4kf1bC_bI]2M812MWa^ul*7N"?/l3De%;",T%>K>^k@&5Fu-a!Ui/rTm)OViM$HTq[X,
%=d]J`.9)nZ[mAVV8jK2KC$<HM;52\T(8eqb._(H<fET\QW%Ls/Ccf_ee(UJLJ5OC2J/uaY=nPE=MTjGd(hJ88"7$@^mBh]#7LlgW
%5RIeS',dd[BZR^c.0<>fN-<csM(LCbN.+m:3g^ti@8pKD(+CBO7S).rXGO..PBs=6n:sgR:H9f>4X=5uc4CC\9FjQ'Kp:PCdSTn!
%*+QsK]Q0)>9,&\q=N;`;=[Sg<c=&12/3QCF\r;=]m#s0B`ARMN1lIj0iq%O#*<>f[cO*NE2`7f>;2.s]O[F7;([JP.qGcis?cE8n
%L!2=U"DDh'9+ENCmRSj%6Qn%S!U)+16%(K*kDG\3_"DD:-'L3Se=.5f2$*d"BTSM$d$NlOL(%qXF:iC,dSXDF8(-s"YI^Al<tq^u
%Qk(QIUmOp8(ZkJp@&#S@1c7>A"9K)1O>M\p9nn:,jC6J$\oQ0O=9h8#!qF5LER9fu9YtA]q%@ukC'bTmM'0_f*:"b>8P@*K:oQl[
%:8ibO&K"m.#2WEU)\2p/@+mU"RMr5>&q?jkN.h\"Xeq['?#$SF#P^(I8q\*=,XoTERp*i#76a^,IY3Dcnh`N5>^7YY1dk]'*%N&H
%!H1n%3&Odp!jI9<l>o',_;@^V5U]d&RLlb5MBL&haT/1F@PCgg)C$]:\'U3*)9hs(6aQU][SZVW"7doH6ncYiRTH[[`JceI#6Ad+
%'12bQFJui1%4nu#%q="@kl?g]6)&iDC4j$ST)b+PV-q+4iBQCr.ae<h7S1H'OB6=@cnO!XSY4%n@J(4cjE(]2Wh<dq?r%/PJ)I]X
%Q#M*(!1Y3R3K+?rSZ%iShR:,s]E-Yb='MTuIBk'?@58k&VO:#'n@Up71c&P]^Pe3p)9>ke3?TG2]*/r>&kEMf?(+_!1X&:9d.k<Y
%17?,&YZZf9/'%:E,g[PGh7sV,`Fll4JW1r_9Em9b8KJ3ZYje0:l/a.]0sc18c!NmkbZ&BE@%7r?je&4ZV.-4-(1>/;A4;MjWSS@B
%+`q%*kR7_/=i;+=a?+Q?odNO@SmkKXGf1jGXs!gF5U"j4dC%(d-[B^ER"&@\%R._=l8fr4cIg8-G5oJKrb(`4NJUtk#+JOYIDFi/
%\.RLDc'EquTo'RC3()(g\`Kh56Arm(?rV5b."--VKnB`kA;I!(T0i<fXD&-N$1f\uI?YII^cQ&e[H*b8Ba/=p*3+<r>)TA,$/T.k
%D4HWp8ZZJ7Cnbkm?6aFU^hA.J5`nJNApW`f9R\"i?k&!Q"`;l`LuSe*7nXYCI$"T6.+J*WW!Q(+T9CD6,OsapiEXkgW*8%Bq3GR.
%CBtLgp?E9.M$Xo8J9#o!E*Eqi>EWM^b/,8&G813MG6C3Zf&-VX:ht.c//&,X-0hkS^Jnpk+HB;ZLfMWCI:4/D-A[a-#HQ8S"6HKF
%UY'3i`!kQU`Kq2RK1CKDd93H82Gh5SKoE!R$@`P)h&7sm^j@Y@]$q0-/2\)=jWs6oCI0pLR.q:,.=j_Q:-_(@XNh)oT*@Z8J7d<`
%[BPTVQ4Cc6m->'ajQ^G[&;F,Ai\Y+QUQD^0<(pof+t0r)4t:&3Mr/JDOB]^SJaaBX#rWKI*i#NF,:6,RS5KV;k)(?`U[W#Z>T=J0
%0[<*IcVupN#T/)N%72P`5j%rAb2fVGblQjt!s3&4!(PqX1IVbo!O4'dBIdW6);T)td0TaX<Le_!)acc`!5r553.8V$6q"QW^Q%1u
%L2aaiD)Y>r$/IpW6]@okD[;\gS2b[8e,2:JFUNFe9&U$?U;Cs/jf_"ndg2neJ-:t]Z.XY'Nue_C,qOWR1_3U3%8TkVTuK[J6kqh!
%;5=1=2LH\TO#clEOYA!=8;m;?b]-73T"uTnc;Wb/4<07f9r_=G%1WuKWTKQ;kuN=*7[DrQ4PVnoN)/_@L^QIDa5pF$`P2-18ZVu`
%_o2M8:'+sS-rp'_7NFt4,ufp.\NVEL7L(,9DioOkih'b>-s2b_K-e\bjH5/6=Q<I@&#_*OEQi)uIZg@$0Ie\*0L!m7HASDOik4Tb
%JOKt8b`pO9*9Y6/>3hPMnhGAkT6jlrasF;pM<]1.)lA]T')Jl@Qr4`Soi2#^\Il\1JCt^L2ApOJ8%9/($@a@H>R2G@\?Hpm`GrkR
%5;(IPddsc_M;c+Q:mj8TEJC)Z/7tc<!JQ3Cl#;]BNCcTbAL#W]7t=SkTO5oh<^\a,Lh__#-dG)@JOl\J64g(%]s%oc+"PboB[%+)
%abrM.CZ)74iBAP=>)N5ZP`D/4p5I4c7\#Z,PmeGlDkN%aBY>DeSKor^I`cUFP*:Os1@HrXCgK=:_(Crs#56qBhJuVX1'B!fSK_9X
%>V+8,is+COd#apc3sRe0%:"G$A0Cn)IE!*7rFc'lkKEa!R7k%]!NN*h^,":Ro`Sc*`"2\*7R<p,?j]U@WpD8D)F:3U'hiE-hDS=r
%6E;6O4g.[.0a%iR^asn.B:%B_]%4!XoCuu+)9bOs0q)PPE4`,'4)L867Rf,;\-NWk^kGZ5b=e$=<p2LI^c@S*A`Y?7*rFKCR]tF0
%81KTiF<X@7b8ts(]R!fqo%'1$N(:bc[0`8Hc6`Th;]#M?#XtO_HUkq3&n^q`Zu$q2ab'^Pg4Tc><*Ttn@!+%h,+*O%>=>,l?H<_+
%<kl_K2$!%F`cRUs\-R#+'"lULAj?AIo>cGOpBgM-ah\,/<RfC)=R1IKOofJG;GaAI]?kV07J.>>9/[/r.hn#r;:_S;ennG.)/0^u
%32<:&nV(oOrJ=SM8&l%h:XS\`04p6?%4Zk5Q,%QUbeseFL<Y\n$WR5T5uc*`njfB$pBCC,ar:Q6<SqcRbG7kZ]+$26ns>@=,lC!.
%4ndo`Vab./@0QC`k33hidb&\/\M<ji>tua=V.;QQC)KVG^"56EK1V_37Rg&?O_3XTkc#1@lDW^u&uhl'-_(r$Z)Ff?B\NWR.g^VX
%=2ngf2UZsVdOj%#Fr+>H**+:FXjFcbjE=_MPiaE%]_"r"A13k-Z8=)9f@9()XF-$:%-k'bB$r%4qaLM1@h2"?M,'quQQE!*"Cjre
%VF\m:pj,#<QD$/]PHKZQ?qXDb.04rf&GigN8YTquRF/5JMkX[1A)H1]BqGS`#Oa\^!#lG3O,?eb+OT6Un44>XMco`s<JX&CBce*[
%9WH(PEB7O2[\JMK:P^fc5kB+tnM@j%#Z/E(,hkktSkO[/bB_(Y0[-RX(meuj6Rs<K2!WHoa4W/sD+!?Q<9o[^-I?Et"Te)jB)`+(
%6`:0,i9/6>gVB[;oVrXP@%0Z$%OA-\N=@a;DS:moK#-oio;0Q/ST[!p7-hsq4@g+b.Mj#\f-H3#A<f#V6r*5B5c8pH_2)dq<upSG
%fS@Te@No?m"rfL$3C<k\naHi5[PS\[(TpRB`#G5MY>1ico3+s;Ji-iM+Dg77q8`V))J)(A#qUDcFCGqF5seN3U&B_)<;JI`B4/4n
%H4BR8g5&Ud#AZbF,p+aj$\OJ,$oPW;+TYWk!u00PJS6o\6QB-gps7:9'85*>RTjVA?`d@?=-T%'2f&Q5B9DG[aI4C*Uo;Ef;0*_f
%;OKk.o%#FdMj.oXI$c@,FRt3D_85eeq6ag?I?GAK7*$k0RIX.&X*t%!q7neRTb](FQ"npUn)KVJA<!;Y6/rI.X!Z$=kW'fMbSuM:
%`*Rf\]n74OJecZH'uMj=Y^)$H6kTG9E]h1\1Gfe:o-0_*gdKN0Z8D;jUJ*NCm28%7M,lUp./^^hic93F*,>@!m2^a#9ON8LI!C9<
%as9[`G*fFY&&80GW?E[74UbY+iA*nQdZ?5m;p3Xr=;UNIH)CZQK6JVAE/@$C9h5JFj@SB97/5>,Odb<`TNU=a-(m1X"1"k%>Osm3
%nArZ]WCgTe_J-RqrG6u\4/P/'kQ:iAV:,VG:7WYeoA6].mi$b$Z*Y0S$IlJOB7nE*c3a.`:_d)\;*rT<!_#6]'N1&)r_RUP%e=Y<
%^EIO$i^t7&F!^(A'tYngQ2O/.;6/t])FRoW0q-8K:`.*g#@WK&P$c=q<D>_4M)rh\p0hlE:@mZ0Q15ViYej;tZ9lH>>F,cc^=][l
%Uh16aKB/Y\%r2&Y<ZY]Q+`iK`9VQ,80k2h'^s,]2As*rMD].q9h`M99T,,,]U-p6R*$_\GRQ8KZ^&",MbV=i;F2_#ml[6)qe<-Xc
%@TPI5H_Q57n;%EKDR#!IY?%B;'5e?3R4s'pXc]HI1-$(<aWtusZQpG#2i7-@EKYWE&*B[8j*U!_B.>jb@=:)pN#=76an^15"`lmQ
%hZ?=*Y%_2rB2tj!Y$9&-EV,`Wr5rFm,:LftPfq8u;cEe&qDmnY#O@jo/&'$c*QPr0Lg4YukTEh0L/(mF9R(WOT`m=<ftB!_%&*15
%UA5Wd.3!7=8'jt#"04m8#L(bR%3YeA=Y:U]0([6G'e_cA=&M\u@HgI%5N3s6f>iOIMP1M$<R:U_J@/B.R%JnVA4BL*9ElXb/8t]h
%\5r!U4jAA>0)3sc]0_mWl10t'@!%3W+H?DI;q-"joE!ao,\2n3Uft_[:k>2=h=7u+QF3)NjrCC6Os_,Sc8&mqU@5?1<%<gO]XXd/
%=kdVqC13R-g2';kLsZiP%7h/dpd`m3E\r&W)E"cVjVP)c'O>'&*:/%g1@$RtSq*Pk)98E\;fKns_9O,!S&O_-a7?<t@r]\8M?%[.
%c?os`KC]pJQu_EV7D'aXQt`Tf"ad*tn].4:$+bX`YQDH;Ua[Z[.D?qt^q^eUgQC*21p&m:E=;.s,0V9ORSlm&RZ&Q,MeL89MEZ'8
%mQ$4?&hfV<hK)_jc"XfKgt@[JN=WCj)*V(I<Q2CA'JDFc:dB5,?d&0G^rc2F<g2IS$"AZ*#6W"R5np=36D._A"i^dE37&3M!$H0p
%DNi@mRUhAN[]"]ep`#/a@SeE(PZ/A/pm5*,M\Y9(ONU$dZ8g#,*0=D7`X01A,Eaus?<(E^gW]/gANu!2Jbm3-=oNRJ)W?lhLZV\R
%J;/QRpZ\Uph`JY\^CER&fP7Nt7ol_edKKFa/WRkR")C`+.BiE`Qk=Xf!/&0XV^Wb-+>WIa#>U2D[)Q6[!EIG[-&'3AFO%2E$05jf
%&eC^.^t2\D5eXbGh(l*oqmTAmNthK0ApVD11O?%nMpMHY0HJ_pA=a&V#U1A-B"eHpJ>H$,oYjuj<Zfn!I(4JN/3@.J7Ce:-=+Y8l
%`(H2`p1`j'-B/M<Q5.r-ISg\L2TX"_29F"]J?#?X'!R:A`>^Db"EdG$7;/NJfR]ej8@(0NLs5YVJ1NS9o56MoF>DE-<>OdW`NTa[
%]NMrt8Bbs77*MDmJaP#G'WbZ=<Fc`/jQ?g97A_^N6]+1RJ;U1,V7&71eDpFH@#f;!=.Nt#+#skf6kM50-;0eSU:^g5M3C6`MdRYb
%QV0uGK5TPMLdmrdF:"Xf0XApJKF*R&&pkTEg)\:ZKEDQW>7:SF->"((+MJ6^q$Kfbo9EM,8BuEC6Qo?[1)^X>s-W>PkVr3@`XJe:
%l[;ar-#$hY"3UMGWM6g/e-a,0fL!TYfnb\pUbDo!EYJXCn>V#:1>q)IW6YOGi!RtK6Zt+GWO/3p(jun%]2CM5S?M>]Wc=[8XbPmZ
%mR3mq3$UoVB]dbslHj<#MHRY1[ik1n$Z&r.+!cBeTcA!4GS`Z'aLhTX2i=A,hZ8P&hikkQZo,f375,^'?rh[V`_mYQr-?(96?/q2
%0S:-''^J]5W2[s?OXH!LUNV@`2CRL(6^+B*Kp8($!!<-WOo_)aCCoO5a<_4m&,AmZh_Gk>=B=mtoM2,%+=2mja6_M60+!VMJ?efs
%7fP7?+rqRq7TrmG-GH*3B7O0JOK?Bp:p:H]4\]"o@'#W%H%C?CDq&Cj]nD(qB_s0]_2rM3*P0Ag.f/?_a*`iGMkM]g2[TPnJ(>6!
%D#s\k1lXjF<Ii2-%ULSk/I6cQGQfUaVH3LT98@=YZt!In(*@VMK0ckf?,X$6i!3C#BU)ma/u67D+4(n,#KIdl5ro>C>"Y*OMb,9E
%"Rl8q-oXhSi`WoA#:T3i'@nl^E`NSmojZ"[7LP;kRE>ZtGU9>0$'fU<GlrBJQE#jCEW<%WC=T/`]_pT5!inh$=Oo+&-R?SO7to:*
%L"cF[U%bZr:<qbla(RJ(s#66S=esXMrYql&DBa*LS&;W'/^.*=c]',X!p-Hp*Q(sR-Z365*i9ABnq#m`(3J-k:#q\.O1kf>N5p$H
%(3AWELc/tD;l$+mkb9U8V:-Y2"p'D#Z$BcV_#rU]P0e,<BXBZPOu3?LjW*QH7bSIUOQDEC)JM-KeZ&,R<A6)VE7Em,"DBgf?qdr"
%(BT9^L2a&<`@f4+].ZDPWT!`O]%FX?pf[5oqjQl;qh8"h+<O7)-83*W"\IX-1SeqK^q0+=[hqM.Q40W3SXodD^An9R:#A5A97u!A
%05t**h>*'=Nbp2PT-T5VpQGtML2a5bP_"p)9e$!.a1mL]m0QXd'2ZNI;BVu>NCrWnK2Zu8oErV!fc[oROU[0[cf2WILB-9h]I)@>
%XlNI"d#9k9,@"&<>K-Cs!-HEtKFT-k,V-/\1rC.ACu<&GI%SC@aFg^lROj!Z$oqJ&SePY/R1L32I8Q.-0"Fe_F$aM5,B#!Om7N=8
%R7fF1ON#+)D%hn`cW$>i008eeYsLXqhIKb?'LMC3K&OAlnlYr:(p1Clq<0c&@PAX99*3R2Y6>:l-JAkEa+VUWh>9*E/)ai_0WM%j
%g5IVeL`bb"C/H-;csF\#;Be\2)kA.2)1*SYAj$:N'9HG'B#-M=>*_IHn(dkQ)b#f^q"eHI"Z@r%44[9a&M<8XRI(O,JTkj5?G3e]
%CC:t/gBWD-7c1$h;a2UB.R^,Z8?i54.g^28@Pa6r+F+'rAT;CGW7Y*cadoieW0j[%5&7HP`/#@m#Q8:PW"jH=_D*1R(2L2aCga#-
%lOhf?<p5BSV"s^p22hcmj!U9Fbr(\&ft>nG#d)&".R"?e#-DU8.R^5F!g"'._K0;?&G;9mk(BK:eZkD>PYZ.J:*eEO%b1hR=2kNm
%>nT@Y1>R(TXM1hur-EJ>0oq]!Go"h$@r8p_GJ)0Ve.Gp7"=[jtdkg5F.6c1rd-&HUE+,inJ]pLI3(*+$eRUH3TR9L\T^$U"LWKn4
%^0;<:01RXe!F\2n8Dr27&A)FS7?p%Tj!_AZC3GaZj(umIi%eq1YV>R4]?sic'kt!&nUh7d1=KPE3UP"[$Y4d7&k-5b9ZsJDMY,MX
%Qls\1-0/JG&e<1mD]W5)-pp7p[\5EbOu.\ohIM<ZO!R<jI.]kQ;&q&-;T><f*@,=naJ]+?2<GWW0Nsh;Ih6?',411WJ1@S+Z=kOI
%4lCG3O#UdF74FHWKg'-67C\Hg'"tgG=pnKi&dlm:[:Xk&l1K2/,1e26_tjjE(l?=L1DF%]WJY-tZhYjXfi^Z#O[:b]@35O?5JX.Q
%;%56L28iU.Gu:KFK'JEs=&Ai"W?1_t_kMd=OqDYF6LT7!PJ#0m1@J5"6`:"LNIUj%'O"(sK#b)f/UBJS<b;nIRAJQ9+Jaug&CU>9
%CiZ?(<ak7eFFSj>iN)o<<qQ`_PJa.4C\q5'Z61*nQn[-r*AVdoc.SgaP!0RjK)1K[<9b1^bE<3K>O[\,5@[%;'um0\F3'4P"$.O"
%*Naa$i,@.^?'M\CA`/(OmtXI+ZmhC$HW+l#<-0C'UI;Q8Ms-o?5ofd15)DdjBo9IP;*ijVGCDfpEo`*V$dbWK1)O\a(JkEq<;:Bd
%Z+sb3DPeka%@6>pFUiA3c(@FB8a$oB^cGiO=7kY!41>=cX3ulUZ?!frronDr8,Z<1BY4r-7dL'Y,p?an#??)th#q#J86W6i1^DeR
%YF2)o3U/.kCSisNN&^O(<tcS+-_c5'HtYih+"G./0Z.cSRJ'O8O[o^GLg:UueG$n)l?>5W7<Go60j>Ll$H?5C=\>-u9iRA.eqnM"
%=;)Il/570-jq=3S2G_VM;6`VU%*e$9NlP=\*M"i`44GUBoU)ndOKZ9M]jSs'b2l;_N#6)S'k[O56e,]-eh`/H-#OF!?r7#4FUg[Y
%;Lbq_L]tJ3L*0Hg%[\?dZsrDo-h\@%*""s+_:fsVbNg7[K^_=*WTj`4W-+[6'.(QQ'YX_pDGqUdG?AIY[FGilk!s,1MnCcWT\(O8
%)CNZd:i)rk)J=Rh29lRhG5K^R4Ts"c`KnJL.d?BY7RO,Kq;ZsCRc!U$eLMG,fO\CJY,C@)f9lUGhItpm+biZReM^<t1PlB/HJ1@f
%Y3M*Sl$+r\L)I0.<"dTu,`$,Mk4O(cK1YeP$_WPM7O<JWfqDs485c/Tmi7P7VBHNc3m1tc<3?/n_H7He>QW,E_@CjZ2YU/+N1dD)
%8Fu&5V:Gaa@ZYYkUo04HJ4IkjlPphckLq'$]OWqh.A`_&ok\;%7)\T.]`X=In3KTjCO@'2)k'%R/lrJ4jY_b1W7L87JY8JtSW+f0
%(G5hXeBW_<s7WZPLIQ=.kLWrC%8&[WNbX+P37,&/^*E?r'Md!tnU>aKR:=DI!=4dh'WTHQ0=Hh)BbFX^Nb9ee"!:1qLgD4kZMRb>
%/u#([#0][[L9J!o3DRaaZ-S<[/BZHZU!ZbDfS3M!+JCGM#TZS@)fb3X`&M@V(a=Jb!-Bo!Y>@r8LsTm<<eGuI::k/u8Jc&U-oQ'1
%Yf5'=VA'274&a$k9ncs5aQ*JGS^TJ!VNn/1`scf'!1?s:7"_[D?0@*M7MRW^A=8_d+J/'sGkT$3#F@0T&c:Jj$>LkQ*o)9*F\&*8
%MPq&'`'1[3E4e(IdGRK_j\b$5Li+?1L_%C3V9VrHct+&EeBDkH9%(eX7iF(&jE]t9SX23A[$6b31?]aEShq_KZ/d-[KE2uaED4]2
%&5#@Ep!44I8boapJcn9?YAOKO!K),DX<:-&BnE`12(Crrbc-l#j0r(F%&#Sq?)fd96AE(_8Sh3eCEQeW<]e\GhYl;PfasPSog)lQ
%PLm8GE5mRi^Sk/N&f(Y7f)W-7W5o@i:me<g$;lDn2d2FBkO[NWF$0iWju>VA-fu3f$Tp[R#7a=bl=?@&jeM9XnAhPe);?6a,'ih%
%*tTVh28o[roR)GK$p(#=]g'u^d6ItPlJi$X_&4h$!ml"GMI7/@kl^)SenV]G6OjF^9#lB?V^h/&Qa&O=o4q/>MSV&q]i4[-JO5Ip
%HCH=Y6k9MU8edphDI@mV%p?!Y6bUcY;?Xb,nR_YO]KbspDVcBNS0j4X5W]J7N1f"ISo?)'bQ=QP4+ZkBL/C8NGC9JGYSnf3X46fc
%rMNORf9@#]KFsKHn0K2=ac+A'Ga]ZMK;&L^%2%7Q(cNR)]`gHY.Q2FrV(sd\#/d)Q-Q5aYfULptHh6%5\[9-T\2+LU]7:47Z,1_+
%CqEJTUZ]`mEkd'qLh;+K_O*Jb3;3!FAHDkme`s@=)Q:B9ZJLD@H&SfGL2[T4ck(dQJ"HGtNMr))AcW2inl9$o*/BXA!n0T6(9=Lo
%3+-@[ANp2pE5$uX>C!RN47YeHeN>$*>'1T'pPa6q6brBIjqTl8..`G_0Ipp1C;*<;-*4+iTWa8b"KjstL6%j!_NdsJNrF7apj$9R
%b%:mT(KnX1&S*?K9F+Dnm=g/tJ$[9f!qq;<VPT-^]RUD(c=MaI0Z4)fh8`V2m#]_p#eD]C("5]@T0+9,hV`1B1q9IkWpVQEV2%V!
%8##1CPp>fb8Fi.NqT(s7'_3.,f+7\:8oLNeK=O2t:XA&e>=:Bl,2QEZ>\o^lZ:286\h9$KW1+L<$Yh"G*f!LuEPSnGY;de7dm48\
%!t$GT94\eSNRtL=Db6g>pqOMjXVbA&F@VacWhoEkTeJ=fo,'9L-q?m;L<q7L]eIrMH\5YgqNnJ.1Jq\;&?!N@O1Uj6*fWqD#Xc>'
%08g^FUqf7](31tO]GqC^rJBJgA%IL!jpPoLnK'-c."1c&E!PA8R/%<""`MBFqjLoC*_"*!cgI4*r>m0'9YL0q/6EQ5ar3SlfFa^T
%*dgG:iG`FV@2T01R6,1!m"2KAD;h"+&uVCi,kdN=JkGXSc)?P6'64]C#.//%:a+<i($6BLh^\\AXD3@&h),kbh#_UdE/eq[X@qah
%<MWKPgk@b`<FZcoPS/M4C/[N]J"eI@+]Zf!P"2`Ul5a";,p@*=$#F$%91TaZTpWP.8@Z)oP[Z)W8u;%XM0T*%"8Cm8OT9rHo\Lbg
%,h.tsXIL;W!+&VMLBDclW2`3FF/M%BR@XkBfE9Rb22@;q[c+:Vg$-d3G20.<ENU5#)V]sFdm+dI!JEQC5IVhGW.X8CIsVLgo8[%9
%;VO-a[dO[P&BK7\e1mUHJ9HLi"(!OiU/QtJOUfrhf?a\e27A2!J>:S`J)`7u1772#B2Cr[p4,HGZ3'm1%=j+.>PTo?lo&PENO5eM
%rb\V>r;irl%%))C'?):&>0936(AP<AltTt%jHG#ei"B49'#tc^[\XMWj99Gn2IsDX^u1B>E%"T-#c`WPYQM:u]UKRCUn/gIEN'6^
%^oYsAmoW"G"2Tfncl#4b3,^=)SfB)$3$ITnh*i*);MG]P7EjA7P:9/,i!27\lF2E]X-TgqaD-)6GL+BQEMt^kh'^9D9L(TC5EK?Z
%j`WRmc)[T+b"hRICCK8'caX4^%)>0:i2C<p>3;.U+P_bKbneTP?uuG7e?6>cHR<i;IbAf&RTLulhWiZhIY7P6U<kC3J)e;3r&9'p
%2Rl-!A%a3,O^_Krbb;4A>U3i9$!aDRAY'Cf'reC65gQ$FUgU#Fq@+Dpq=n5eI4t^Ti>bR+i>]lqUYDKPH*!*Vgsh-0%5V6(bD)f)
%=k5gM92T#R^PEWRN^7M]O*aCU+Z;-1VQ])^/O7f:hPV+hKQ+!rP`9\f+Y`(P=d*JGbaI\ORff:Y3oS^YV&N),g/ebS;/Z(OGDI7?
%pE;%R_2R"od%E!a`.W+1!`CAg0HlqiO:8AM34XN`ZD#k>'QK7M2](n<O-@]c;:"LaQ0UKRiH9G#<1j:jc2!:*VN3-p8O.=t3JdHX
%;uni.)),1I8toc"<E[K@NNh2"323'E^j"'Xa[kC$bG,,fI(*V@pnY.MNd5r1Qfe*&kUDmn;C>8<:/=1>1TjgV_7#qe]iOYVD^S):
%C>-Eim!m^qNnl`2R:9U.*g6Qf-TH-2_8>F?hWQ/lCTtro/An@o.%;pB![-p<QQGE#BRJ>k+9#o?(iF&6pfc]JN!Mq!Ns3f@qBX[M
%<u*g!^WGSiE3X=Ph8ZRJ[P]d<]:;rbg@44s4u;k,\CTG*4l2TnO8*R$$$[Kkbe0g>=.*QMZo@k6gV=ApJQ+2>-sO,U6b":K-]G9H
%:]V?QlOT_MLJ^4\[SI9qP85<ZXWa;[f2ki:%CP("nq_+UXjYnBL&&#_`Sc=I]"Drll!^C1REfNYpS!(i`1l!)rb's[+1e"2:VIh:
%T@R_b3D&<K7_&b)aSBUQ8no8J$-K=;)%)qVR*_cY\M/^M3J')e;+fX?j%n0E^^:0p*[hD]Vh@m>/4uX;.LO!QDpe]t`^3,43RUtT
%8p0-/Pf[=m;8FD*T;noN<56BJ3+NlhD$aB%;cRF-OD<N$1J(e-AXtWGcUj;]Ap'56A'oqEWgBf6GQ-j,#;On@&4!%9M?D4jnTLK0
%6JW\Lb?G\-b7SFNST6?%^]LgkHeWRl_%6.G2!%tM#P\oV_sPDcJ<o\I+'QW+&951YDj"!J"p#g)8+*aA5t"+OnPZfQ5t('qWIs;A
%&/"lP:,<OD_h%==_]CHM=^R?,Ef1DS?c_.aScg!'[#af(;!*kR39&6uN>/V&.dnQ,$N8>:C\-]Y7+2\fnY8ZN1T[6tltn-]42JEn
%G$snkQ@OU(ihiZBUe"R"$#K:5AD/)'a$[EI=Pk6<%FVfUP"=Vm3Z)"\#_mK#kpII*#=HK4mgA+mSOs_tgeMVrVdNB'+j\L+j1G,3
%>.fp$.?:1i.Jn/LG_TTdUpYuu\)(fW&SDnU*<\]_?lp6[-HtA7TV@o3XDJgkR=>KZ3&lPmk!U>9d,[c6.$^4q?<A%73G+&8R\A'i
%`uoAGW:n9EBKqmK-'<2:pR#MHD^Lhg@c,V<I?8=E9\p;8Kb69H>%jd%?6eJ__RG.[Q(EV)Fppuj>#4:c![B]+4:SGNZ+^\/[=TYS
%LaS+fF-cQSBl-pYN@bgLAB:I\6Ei#u@GudG>%nbKAEiE7Jl<@Q5Y9V@&fp=a*rl=T'9PhD,(41$h1F^h=TjqR`_sPS7%;T@K+ioE
%-1Ub+cnCm-&HelNf['cf53DE.VpJUM&qi'F_lM5jBT_b/"UpfSr'k@ha[VXHE2g*>pg[4_"'Pi;'gQ5*kX!BsV_%:P1c[*`4!,dH
%;'fIUhF9:n3<Pp<f(0KOWhp1Kr6J.@#A<igMl=DZ/0(BMF-&?*6b=s<n95_Hg>[k;h6\JiKdVtr#oQ,ZQ['5-J.hY.SS@.`,QX5'
%pbX"M.$F]jDIPOi#UFRB7>iaWk3EGsM,Ne[T]O8Iq($Z<UB$cl2_]n5Zl^GREW-rbUm8BU"u%CP`dptbe^%jU@UnDl%WG=Am;[1f
%._msJbUNhS+qC#Q/A=Yc!if;!m/,&j_GG6#8d@df6[5<_3?r\BC5%\.DY1bt<Z2XsOr&W$^n5*rM<!$'n$+\V49$90<>$nM!'hh[
%'B=Ca=!.n03L3D$'m4AgcEJc]bL=</$$`MT!on,5TcD.afX$QjD':c_Q(jA1@o7![l6;.QQkN#jh"?TR8q^f>HeKa3N_ikFTFNu\
%IA/^BrS_/FZYpi97PR8rQSAL2$uF[lSNN;b@LHj+Qsm)[$]'$RMd,c@_:LOJ6Nk,hFQ]<?)<RTh?s(uP;=,+O(no)bM@6OJ`c9tm
%%M,=(X*t0:\/8S(Lon[=%EJb)$*q3o4<=;bWfR!Se;b7WdSL1VIQb`7>ioJ4V_sJ9Y<9uM.CS%9^@6oQa5=p1&1A$q%?HOM`%8nW
%)'`Nnec3_E,)?e7eh#@(8JE*KTFe<$L3K/r";\H-Eb3*BT)_4&U,T0jV/]Yk]["@ENR^\[:l3<ill,ei!XWQl-kHYtFf/s+ki]u;
%gnO'>/WID\4R838(dH$2:KI\V.+5;X_H%L2;LlMNHO\:k=inO\Z&<$I-fC@f%"nMPkqA&+'MWJ0jGamcXfYD2N"m`qFET/aNIrt/
%$90</Br4@(&A_qG2ek/U%Z$c+1IV:pWTeHhoCeR(Zb4%4FNd:@1rROM82Gq!h4:LXj6eZRj#\AKH&m"S/jLa/$&c?<)K/).)Qc.=
%A=cc$oZ:?\T;335=Puk'ScHNaX*EtG#PJ3D#*PB%6>4++#%<,=Gr@WV&moMbbme.sgm'Uh1_$6&1NGW_FTkulA[Y481YHMFYZ5/W
%o(o(4[`T5Xq69%_J`j*#HdTZ2)),()RcZYd6+(SE6Zo?oY7/c%dh*=)4ARI%PgO)SA9LF\8a(55/%9H#Zg-#XlL$s?$I_*rK99VP
%V>q%RE[#1>_+HHg;JC\OAp1IC4/%MF""FZsANjc8-ukiilDuXB"D@nln5ufW'/?GMH,q,G]7KL`1?-0.g*4.;9a:lj@kCr;TSfq"
%<,j@$kuHX!Wk7,G1%aHLh<_!DB<'s#Q2IeR2-+bF8q,NI3EL7lC7\ca*i]?7V8T>E:S_rWXd1dF9`YB'Bqk!?&RT!DlL;\6Fa7?$
%"W]?Yk_h,/-CThEe14Mp0TC=1?Sr]iVa\DNTa[Lc>&)`Nr*Yha.njPnBYk)d$7e#&OTbu>)ftiR+S&18#)m?2SAJgnok(i1Nd$Hr
%P2PL(,+!q].iq_r!!^-/N+NtVB>Ze<9PuCNg(TL!Q3Dh^&A@7QM#_!)R9eZW,8eB("RlO?C:Bih8VZ#8+lcOm`Q0H[S!#;C;NJ$u
%5nn%T(W%fA/9`2(J0AIu.mrcU10Q)(5Ja)L2%+H!neEZn@^VePiTFaa>ukA)7.QFncFl`"%F(/JKg81_b\^hZ:Ke3H1=?n0N#(WC
%k:%rdT4#1^Y[jP`9/C2FL%Tk[0h)DJi^!Rl$cDm>mr6.+kbDfLTbZ]>f]th#\uN*@D4[LXaaSnBo+ej].T1p@:`:^,Y;.H^',/Of
%gHh^U4&)Bi5Es1g4t0ec@)$07BhqKf-uXZ51g5O&]jC^\F76Q;9pT(Ah)FO<rYpImc>piaLNFiND?RT-@$"W;L"P3<K%t5Tl>#Ta
%r"Qk'fRAO#,f^bn\@rtf<m$]SobUVXcAXCdlS-pQN&`4fnDP$U3Ji7b1[/(<%Mg?,6i9J[I-DpZ%T1s+@K?I%9.?@h,1HZnLht>Y
%.TOt`SR>P4cqlliJm-q=*5_Qd-X(cD1Ds*PMK=I.q)CJHeG=;K#2S`Q]mU>J^ZFV!>/uXHdXd*F8>&/k\c^d^PFs.FH3sDaanE0i
%8N:9NRrYrN"M$ef.gZlLiXllJdgaW<7:Cm]8#Q/s`;]7ZeV7=:11X[qSC(UJE$VM-B.8tn>Ud!N]1$1QPcP?sj6:PSKM/*n#iU51
%1%>^=;!;B7dEs1\KIsYmVqAA7FWsq4Ck@@&/-uXqP6.4=W4Su;WY$N)*#$j'GOtPi%Q_I'1GgZk%mco;CC"a<OHZiNA76%*B"=YS
%opQUP2t5S,&qeP$#u[Joej='2pUjW*"6bUGXpeSSAQZ/F[9DV!E%XM@U&M8ER3W+NLKGL;=g@f8#aA:#DGUMJcDS'"c8P)FUn]9]
%<j\(9/&GUeJDddnRR@c[N$M)hTHaJfOBpci]o"&$O^,V(>8C<f0-cF7qbF'lPNjeD#>o:0\-G3H'o^hpG^iUG_AZ^XWft`Tn's!.
%!6cP$:;T(Dp*Iut-V1b,5k+sg-U[54j`4`];lCga)*;[Pd,0`*kXpT,!ha@m%`P4M="^da`.\0/!q1a56NNgZY%M]TcD<70,\Pfl
%9]VK'I%#(j@<TVY(T*<g`*CTW71Wpk!crXk=rQ<jkoe0LF5b@FAl7j:nMO#(M1+!_(DAsf#0KPm-'3a1!NSR7=QDna3$i140mg8j
%P%=_i`-k&pQbWr&.17RUC8po8>4O(RfG&dtE`AcMh)`M-m`IP6$U(`u+VuDp6-;t:TA5fq8NAebM#[Lg?E4ct:frmR_icc^L38Aq
%-QgpsgOIO$N-4QWcQ1HKT/LoiH'g[&M.Q+T9c`Lis'??s<PBBc9jrJ7#rCS0L<A_a(h<dV70H[';Ef$V]Z#BHNJu&#3Q7;"<=TrT
%ad^n*#TOS+XD;tuVg8sEre]28_RP/:)&:PhP<9A-<+bASF:usO9gtC[o9#a[W:X5W.?XEP;TqF.G=@$([u+is'gcA!*4!5n#Va>-
%"(E\J$(/&,"@*S,TA]6Ts$'.VIq_.-?c`;cf,K-WOV-W1!2F>oklpO47fouuF-rLEXAK4QXqK^p7jO%`2iDZ+*ZSJG8IomJ`J.^#
%#:R8k&;e\Hcu6@$U?XprR0*eci>,bDIKo@X0O<n5S4IO'$5/_(fu?HKqId>UW@8Bd8R,S?I#9k0b>.:H,oC2K$<^JG#d=-T.gkOJ
%fd%%=IbBauZp3'`4,MEn<3Z*H\S/\Z(JiYM@5/N[b+LQ@o;3#?e6]8d`Q</>>8S/Xm13RN_m5+:b/OHsKcVLrQe)E"J_9X#aNY%p
%fFP(a]J#C1$:t?A=6S4,SMt-gqklmRVepMQX+B7A$u/+Eg0hg*ao_i+'BQ;b);lrs(Yqt(Y\4iDoXIZ?Q"H/-\DBT_Ya\cc<k5$Z
%(02c5q1!+;$<JDU-K`;srQf/2#^$\:%JsA%..gmuOc.A`etL?p5BO/%`O!Wg`cW>.>XaIejFg(gCahJ@5D#B'apBt\W5SfBEm$c]
%,1tMR61LX]?l;j;f;0JL@(Pk^lV>Um%T9a-C*'UsVWcXK68No:0i5c=*idZ_"_\91XD!T$KZ"BfGX]]+%sC-"`0epD4jB,JJHcgc
%;E[;8)\k;YbFiTS:/u;Q:q3KQ2C1@1lF\:EK@5/d3Qg-0Y"Ka[&tHa9f47&>G1fe_]W4s:<2X9\Ucb;S6AsZM&2$E<QJJY2LG]t)
%a&QoHpi52.&O_<37Rk,HI?q*8l<n<UEYR.U30;f3%=d>dUn&`n'oSn!4f9b@;@qA%D/l&V#,f`P=MQ26^B$J)"8nYuUB:TqRhC'7
%XK*%/9C,G!-SEMEfI%DhpFVlS_ZYJm;tV4np%30VDGIJM(ip"jG8B,a2`lcUGu/4t%]<!9?di<s=ef$E,7Rclku`EZ]u5*@J7;'m
%<e0)22)KpeP>)sbK+7'1As,*\+:pT'JBdNV\u+#(#C4-JGhc]s<I\<-BfN]j)rRiKb0tsFQUD26g7*s+`JoY+.^:Kq,l]Q*%R0cR
%@rB[D<1>Bnb"VXqL<`ECXGr.q.>CPCN,bNZ"g$WM>"MWuB]M=-Y@N"g+jhIc-'[m$^.)(Z+cd2g7ipSVC5W`*iPDlCVhbd$jMk_?
%)TZrmR'J,rXg2'q"Liu[7g9"J6U<O/$(mPi>7dYV9L9s+T_RN?8>qFZQ6YSrDs0oB"("UEL)\X#I0?SbFp^&r<Z^`\>&O\40qRML
%g74D7[fQ]lX0F\T]blFC%6o</Kn%L"_WB]7r)]6-,7UEA1iVNBTkmj;S8!0ceE\317gkcs9'<*A<29XJ)6=_(mMc>:;J/_S/r[XU
%-.=%82Isp#T7kK"Zb<!fm16t7<WmPuAX"(^L9&O@hkh[CDE3]b>K*."clsHN1bm[J(M%V[$Hu,Q_]V`E`P=o8?nk`rdTqIWY7D9^
%l'+pd!YZZapV`O%,p=.5:,Fksdc)4TSW1bMHC<a[bEd@>@!/).IWl(KKK3Bs=;l-H@`B`<da2"9`flq+MC,*'BRVO90p9pAjBE+Y
%5u:KV@h+o@C=6%Rp]+6T`JCNr>#q?=q*!(m"$K=HKZX4(SO1j5YNLsPeM2KMXSr4sO\E"+NKd0kIVeshI=AeqOQ8`ik$]\UW%Ule
%+Z`DWJ-^AR!68NY6=c3>!BLH)=7V=;r"Yk9%(L'1)!>qgO<!!h*/>@H<SIK.6F]D:f]!UlZYij$1>?u[UK:3h<]#)+OP725/lIqP
%efO1O+d$EuG#)htFFp1NOL--*6^gRb09o:Hd.'Ku4uBW;LSU*%kGlBbVb&7T1F(j+]kKleDC6e;%(2?W=mO0?_:7?kV@"O2fTM:O
%r:]GWkM/Q9Jg^suc3NQeP<fkMq#nCBJCCq?FC!V/mH"I>:Ne2)8LGoOD=o[-8Pd_!OC!Ah-g5u\ATd#9AbQ0*=8N:b]45H^'6I]M
%Fh:[L:s_!,9lBh7$6DF>jgQHKFDthkq@O(a8Q-725=31;A/)0A#Xps,/`;X6oK%k;Ie3noRYO,l&c1hc>(9?^TDu[V"T<aFh4NNI
%AnG`oLQIg*1lke)n`VS3d%FNt]p#X24DM:=rtSKjD#R(T=KnSU>">IoM=EqC+RhHdSr@@F/>;u$S^U0:S^(<ROiQ\pg&aPf`8M+g
%^T4^pLGSY3!k[i=^>H!$rFUh+G$OUs9S5p96fN&[Ol/3hZS3KH8Y-E)@#G3]_pgK!SIQWQ;BZ,ik8m<VJJLa[=2JD1l5c5>4csGb
%3%pl#iko!9r$j>@Ym`Zl3#tYuq&!Y]]L#%17*D)^\Eh,sK:L07iXo:]Y6h#e(>dmUW8Rk[6s%pCp)7oN3sGd-5O2cUHad7+3)OfQ
%^a]$Z`XYc9q,RJl'5S+P5pRc\&.Y?>YrM*pNE]BH.RnXrc2`qkF_Sit2;WT$VPG@,`dR*2R9>at,)#d?T'OG]l0`U!-K#"EX`d!o
%%L]f:_\dn$asZ;(pFX*(iUPV:6<p^0Fe(#9,Q&CSV$n6m,lGb^"\lrYb:]\?[Y(BZ%[9s!/rU:Si7ZGn>7Fjk'hBZga`'cO'oOKI
%mLphY!7@RNgMQG`Bm>)]'?,b2F<B!YHsbZ<.'R5R.3/5s$SDfCc"Q%G#S*1kFTLQQE.",&)D_!(=883SC@3sPCh+?nKik7N%44*4
%+%Q+d=0C7?_2P=Y1=H"eOFCqOqPt=RnTI1]Gk#Y+8]^G;59j<K3Er\qd%X(AA9_%=FItjah"!hOgMYT$;=KJ)P`)O)"`;E?-qd*q
%kK&AJpu/4:FKq:QgMJ#rr*R_ZZ"qCpThb>e4B/Bf@A4Ou;oPXc=oqM4USL^R(5-&t4@U?aPiFA17=pV-J%^)qPFc^)5c.iY4++!8
%es7k@%HNC](HG$:1$L*mjeEN)k<c_1L)ouGi=d[i]\iD*+T+:<rTfe=5Ck+E28jnM[L&sbB28`+3/[+tlCqX#%,i>?=JY)DKKET/
%,*/aoLVR1jTdMuo0J%B4Ve%7NQ@kas+K?1Y"XZNNpqSF0"N<W>M&R7M2(2nP)Ju`$JpJ`^)Ls]^Ih`[YJ@2<6;*FXFI@i1M#:=1;
%G$EOl#t">hqE7W?J/>!@3m&;c`=BV6#XR#D`Q%ZJLVTYLPO![s91uR&&O`e_5'51qA8W*/#DI+k.29BhWV*erk$/T)7JfG['T@jR
%[-g->]FQJhrJN8@>J<p#Rt7'#?4-IMQN-I!TIHAJL%OTUb)@NeC7fhI[R9XoSc7\%/(-:P11$c/ic$M/-<YF9)Z"VXk2Fo%<p6f`
%Z57N0<Tdap@$^9Yj<73Dc-n@#Plm7^YqU@s&n8;i:Qr$BX\,bR%%gNDMYPR]?G/'D)f][jcW15E`ilQ/;HBo!$4Qtn=`4?OiGj@>
%=u,rqQn:J%$4>5Cm"6Cq&k#-NVCY&a<sQnM@EJnb!_lMfeDDK3UU,hhMK3S!DM=5e2[FX(l#T'u+RZYK^"]HV$_i'sBEPL$8'(#b
%^U_>0jqI=3aZmQ=#L,;(9e@Q`1kl%]VR.d[&OP_$GjZgbr6iMJ_AGeLnd$XTah'&B)F/_PY,7(]BW<crm)M`8a*7<rYA="B<2fV9
%VoFqQj'gob8qS-4!heSLLkng\XacXK)2D&0Mh`E\<FNUWH+0-gE1GM<*HV=>>V'Z8G`CT"iP[\1>eg73msk)@J+M\RJ,K+lrl9Nb
%q01qErHEb]j0*q0q-X0hH2R+0_>Q%]j"iQS&Ynr!K"0<*XGZYQAISC/=`j2\3B$ER&>MEg'"TF(kX.ld%)pm*EGRB^o)6AM6VLb6
%\E'ea49YkST4FXor)+m=GkhQ-s%KutK6I&R0ScJUrF*<7?]92(Er1lh?fh./gZ**h*ln"^ZFG?X)Rh2L(;G[K%6RHLli)$3DRX!J
%h#i*\QWo`djBk==p-8SDJ,9(uT78#V)aaqI/,lRTh>Wc@o^b<Fo0)NVR*k;frp]]lI+48`mpA$*op:a6q/?3Y)frHhA<kW9RbmFu
%%+[(DGPe5/Hi@7+l;,:bQMn"RqP!p='r']Qr>S<p@>NiL5(:;(qs>Kp:]Kh.&7W6Dph^b=5pA[=,[!KN&ZXW_n!b$Q>GtV8C?K!6
%[I9pXHB&edB,,t]m9,mMVNk-UDR^GX#aDckFiEMj"cdPpY&'bb"Un7=9FA'?-pf4,r[0PV45bt5.mqoB)T`)Lre]?#:k542dn^6s
%+7Oa;N<kmX]Krl[h-Q0D5N%t=@bH8M]c(9Epaob$EB@3d)'Zlb?%h5EZ#bZIj$ND',K\M%SG'aT=/If:rJ>oLZd\dQqMQXU5G8Bi
%D>2ek3!&g?T17?4ga%IRF"9gm26mo#iT.d%.EqL7)kc9#4nr^[h1?pgr@T]hqZ_DQ9!&Hcm-&e;dVdeCYAM83BMj#DO+eZW=LEut
%_K65I$7L`3?j]QhXR!S3hp*Y.!:$f5_@bj1L'XObS!Ttd/nM(;)ArY&/<U$agS+KQ?3Lf.%dVmERm'^#1"b.hoqo!M5_HAPM"5:*
%Nq_p\%DHV:nSbY'&A:/+)W/k8$8<6#>dQ2sh6m]p@!F*LIZd\6j1>f's&bUk_ddG"-`jV&E%k,nO+;]u,84L5%lVSRf:g[4[Ie>A
%]!i6YdZNe1A&fl];^AdhK&umWX!,3N+qTB,1>Db&8S!IihmsLr0erSoNKG>rJ2lRMq,kIY@25t=!2t.WcEnUj)*;#;i?P-dMOWNP
%-1<8rECKZ,QkY/XoXin]%J8aaN&_]"mTa$u"EMBB3TU-p*D)HLliuFj?YB+C;c'Ra"Gb`>3>ETMCs21U;@l'EVR\Y04aIM5]Isjk
%BISILNjFur_Pf^G@HQ$m?k<GVn0_bjOcMdqR1#Mcnd,<Y@DdjWBk?pH;GI$>4c"J.@2J@Y40grO;URpRYRAT8+U'.bjJQMP+Y/DH
%(&d4;];AfnK?m^6+*l144cf!Il]ce::MafnhT&#&>e%P8d-Nk'q0m@Wp5k786X/>eK)S7#Pn,;D?gQT;*C?5;>jY6bi?UODZ]8L%
%8TtSN6''QG!$kIhc/IM%kk]7fhFWB(JDLTqc;H>p8`SAI-)Rd'Nq]tjf2lS`&]/6UcYs?!;Jk^R9T<4r!8phND:!/!2`\o.mXgL`
%(af-`@d2j\MA51M!\)9&CHM,]1a)KA@UFE'5QQ_56hs'E$Mr.]"i,J"?i_?3-CLhnW1!\n^5'&;qW1aESMbc1r<-X:b/TX@2/0FQ
%d7_n\HG*bZco=9Ii$QEGak$P'UYknPjdWYsW!7Pngm\a4+>+t3#IgV0j3ff)#[POV#p<\CA0bkg'V3k$NK>u8@nN$_`%OORif[m&
%^jp]'&5ndgZNug#I`bP25#nh8pB[K3n!NZloffQ=W1qu6j64"+)kd<$IS?=@-SR=2PDttO3BjiYXg*pdYBerRh&meZXJP/?e]R9#
%#uO#[)p2O=Tiu>C,I1GY@sZ)ekkK[0$5$'q^<M[,-fm<TB-//&0R77"0OSpG:nqHQ?/Q_6l2*(Z?Ks:[^Vh`+>n9+5[?X`-?C0L'
%(lY;;7H9^`]OP(!a440)F*S%MN-"#$r,lNkNW`7aP&JTf.)q=T]V7c_B^,Db46nf%DBL&Qa\0bL,JMEQeR)mJI6Rd+-;]6&&1,er
%CCD@'`*:WFr#U2J:%!EsS^dJG@L8g!,d(WK*aeAt#\6G(5Mb)X#f_Xo3QdR&#&<-u9q>PmGd.!ji4LK(jaDtpj3mG_O:?-`@G&pd
%NBgIE=p?;$lQehbP,9J*K0/NgKu,cHp5'd@M\Mju%"FmA$VKFZ`ct!`Gr_/:RsO@X:DBb!\i-K@^m2a]*J8@rq`*e90>nX<Lr6Wb
%@PTQ('B<MuJIFn1PogNt^"%`t(2$1+C:i8ijaL^,VO)`6CTKRX'^GX#U_fFoY=eE%<-$Q=0*U>MN.JSTR#?8P!Zf'a[DV?8\<98]
%UlS!:<E-Cu)j9m-Ekq0'BP((I/S[04()2'G8XNhhOULj4X@^iNW]Y+3h)IY)Ph#90M6ms*Xj:9VjQJiPPj$?uV:lFAA>CZu/HU#t
%BcF6SM3KB0G6Mt3)I,4kmM"/-3+Tk\1LW7rLu>(-=XRKIg1EZ(r,tN_0V8/_$[Kq!oR8@.SN-$7/$_]1<skj1\qH61G@NA[7/,Wi
%os(U/RknH8Jkt@K9I2>Dm$:nPl16mXb$Sp.!?WcA5$`D*_t^_\7[\s,gLE5aTUgu7bEJf1nM%SLTo#($lf=\"NT;#;[$)?=-0]cB
%hYsOYTt&"H1uBI30j'D>PB`dA#@W//9o9EM(CI%BVA8e48(9rOi_nS,:V`!lU.&];3b[l0LlT!LXl9*4X.W)V6Lg*AiK#RIn66Ho
%nL05%aj_eMctL?@pEH%2plos6WR@rjV82,!3Kig//"Pt3F;l_a+"^7H-:QNE=AJqs/=<RK4./j6b6fi:@p16KH@XouOl9%Z`d,/&
%hb=pD@s/r6Hm.fi",,p3#V#O9aicCHW3BZ*o_V%n`;!SgQ0T?XW/u((a:l9_obK.C!#OY?BPi[Pq70(Rk6/@94=a7b$RFaK-+A"m
%1LUl!VfOkcfghN%ddVnB7DR("]q%%WK)k/-6sKprM>#rGgJ!h?m4uhi1uefJplkh2UdtYJRmi^RCjLsO4%<AaGLQbM!_58M'kS(t
%[ZD#3?V8'a#,S$/'_En_8+4P=mtdEO/N;c@rS46)6m'4)bE<A'^BKfB5``cs(a'EY9S]C#%RqhXimo_:6hW9I&J.R(mUI0_1)*d+
%\j1C:S\ftI#-*T`IpkHL8.j_r;gMrF6Kjq-i$n-6UH'YQ!cURFZ'-G@!jDYEA0k_9XH%RshH-lr99WiR0MhiQbCpX[C^G9q3mW6?
%&-]s`nSqi9oRbj-H!sNS$EB2KST:#r^um'n7IYd)`%(onZ8d/cG-4O`E&C[Q<2(gIJ]2<>pJ$I<8Q8elp/IeR4@hIm3GfLJO_)FF
%\/#7R_M>@O0#*YPl)5@n.H"Db5.+P+g-lF\%P8?P$N[GamEF=Ybe17Rp!idtVZtSr23(+cfTM1POd`AC*!.E=as)$.S/,=/l%pmP
%94gm<95#AlCf+`s3h(Bl)C/q-i0KP:%W;b&9CDZj2AMN0/:BK#cnn30NHT$q_Z>&!DRbsZ6S]O4akc9A9h2+_g2]cdBh8uE:k>"f
%H#V,aa^AWkGDuU&Z]rEO\<'-@QQ1-Y#j!Ntp]M.)2[p[O-O&KO;=[Z-q6jlre@<"ib6K63WN%s"(BPT5W6Lts\O$\3I$O<2>YTkG
%T[dFK?(d^\!:+@79MfPdHQh/gi8Y`FBNKc*E&/a:WLqoP,MtJj%Vds+K!DbJk`?E>$o9=Wftl=:milV.D7plnW%$t`>9ECP+mpP?
%%m:q:'W[&CLd=#GK<KN]isQ7/On=!Cl2HOuUUf=r/sRbY:L#cb'eL[2:gk]H&-H:nM[gcsBGYLgr*o35:s!"Xs/YSeGR<]@gMiM<
%Y.$E!EJ`H-]O\GfBgdpG<ml9afduY]4=76:K\(s[@:'NnQt>0/`T;<9s7IT9Zo($"QN]&N9**G@S[eqm3\To.(3/:`&R@DJGekhM
%8258nZPCuGN?@%MGpZf8k6`ZD4h'\H"3g6;IE*MbUuF.f)!;g3+OYrL_=6@fWrOsV7U!5;WZY+CoHqIOiV%l:b6?coZV_,L7JbLe
%dP%s''$Z,WFir*s_^RQi3gDPeMhcu#/fc7,Gt\PG(a0H!5LJDtG#7+77pdXeb$+U-'Wm@g\"f5FCY'"ZNHL*gpLugR?e@!mI?3-*
%d`Jk_k9=S84C;>QJKgU_Nnb9K!MiJ%R84q=Vk!CMXU#,Jk:(YT%P6\6ATOe?R7,-4#u=2,VV+3OK3m#NdZaW<bH(8s6m>fTh1INE
%a<hosLUL.q!#$YB%#0@bCEB,"ajIrkDT41.,:mTN[OZqKd`aMMCPOg,iA6MkBq=3LlK7]"O>K->dQ([I[EckGn\#WFN`5`+Zh0@#
%ANpc`j`uE<`po*)7dEHK84o<H=g[?K^DVG@&F@$<i:bE/?\("Wqe-+/g5osG'TnE>W7o3iqMCS3!T3739M#Fg>akC-HC$<WpFP.o
%o@GS(mnqG@S?&VR`!-%K8b)%9Y97.uok%^<I]sOnqLHp#)dT``M!>Yibl(M'?6"B,1u>^`!#\\jFtA*#@_H*S$%!c=dZ&hTl!@Ba
%M]e/c)]ha%dn]X.Kb.[<*Kg^[5=<?7dQDmZTOp3BZ4IapS9L>t#f]bgg2W2M%_`Ub4e%i6EJ.+5.UbEJ0G\`NN7s!E]i\)26d&C"
%/UDq,\o9u^Qm'^Q<QsjJKVf.YShKU^34do7T:>K(ku:-n_[LEL0Z='l4O?HmRcVBt,@1_1R`-h2Kqe`WhWHcE6,c74afU\#1r'Ts
%$[H!eMKXrom>bDqprpUK]JmdaVAia-/h?)g":\"H$0qca";'^kbr=;+KdLHdV*Ig1lBX&]6*Z2-N8B1;HTRe-$DAnK!re@YaB^!D
%1(2i(=+(.CO8!aIk?_0+ECd""#ps>/!6/HPTW]`3(R#jTgOKZK_U'\D\dA/T"P0-(%5\(D0=+g#^$daF-c(bGDo`68"4$R]+m:S9
%F23OC:p<!KJRupp51&$s@Y>&NZ+4sEO)hu9UI6@XJs)m1L0q/h!<&*[K&@3caj[#H)N*9-KV0)6pL8^^X0.%k#eXf:5Yg#nBU:6_
%q0\)DmW^hXH,jA&MEE'LfEq9BT""4mc@DI#GW4\b-I=XBk5!XQmET?AGRNDiiR"q=GbEl&].Xu<Y<4A1'TnigngBbS7L4YD\OgN*
%h:C'Y/a\^7,nI*C#<iDQF5=l,e^%4%"#h8'ePM]>J[%Ae&>ag!O>R%OE?U]]O/9>'G+(t:?^ubgCAohA"-_rYjSbI>6g/cb-RZK'
%#:0[#85&m<,X"!qTC-loU@?WA&V)AEc;(PJD]]=3Z@HlWJUYr6Pr=>Sn67SJO?P-HN5<F!JC7#aN&n@(F>Nc8husKp0I@5p-Q#Pg
%ZhpD-:pYH@[aL:\Y5oEM8Mi(@A0K2F@GKgEqFt4BOn"K"Re0gIRXTmM_t=c@NUA>P7p3SY%qN;$P:EDkoc#lJ1p)u6)]4Q:HP$$j
%9l%r8C24F,2IH(q8qk2/FQitQ;Opt*!@U`1lqP6#TSj[FlSm<N2*$sr^QCX6cV=6F_E-tbhic@Y)edsAA=3!.)P`isZXs)iRWBX1
%GQ!8:A\rj^Dda(*GkIl[ii?o_N&)&'U#4cWGDV>+rJ%GVi>0m\Bbd"agR!i_[tdD:oGa9^FaCJf^EolD2nh,(f@8OnXuMVk6RCOd
%Jg76R[P?7`L2*hI6:njB6jKk>Rje^c'-sZVl4)cJjQEDs=<(*8:KMJqot!UjDb6,A>EYG$96W2bQ6)OF>C&G2Du>E7B(Zpd,-*Ze
%mZt7b)EZDcBonO%Mod[7Q=e@*gV_N).(<uT+e>ga-/jED)%c+U:)S9aTbOZ6/.Vk>kDp"mQ*Xa>_%%?YjNa*CZ't?'_D3gJ+/!l,
%J/$\k"sX7BRe.cX)'6i-dd1kFpDm'o?\B6b09X7W7>1F2Wi7Td^g3]b%p`iso(gfP<JIrC(F+Lq6;jcJL%i0i2&&+c97Dl5SBML-
%%!H=^^G?`'i@sp$s8V+r1+0lLbhIXB'8#%9`_'@0$K?Fk<Vb.?/[NA=IX_q[++pGCL\.PD:5ljD.8c6*aD]#]OZ?9tk)OaP&5!^T
%&"CP9G)eT19oRVoLEfn=iFE$1&=s_+.^B28e\AtI7E0K2#[#&p!*LM\7fDBkNN\5HDW/nXaBm17dV+_b_?E@(7D8nS71K]r!RKV(
%QJq!1X>&@'b:c9bmqGR\G=O)rD=U/USS@S/BXYaGdA%*nejj)\qd>T75jqEjB1oNW'qE?DmU?[]qho]T5n@*9X<5)<A*o=_aj_ZD
%IRqtW087-,XEQbYTl@<fb]!-35g%&hblBrn*F!a5&[pn2'`jYaE$M.*fTI%;!;9gt-u^u',iW?>lLi2O,T5(CO^*MA)9c`4SQSn%
%PPn&6\R7F*\&,MVQ4@JlBb-03kG=S&gF##kYV+9mqX[-<[BD<J;:5ph,L$?>f%r:^jj)>rJMDhE%Q&GK_9d.k3W`<%AD:4clpD<i
%i_AK,Vls"RP0F_,o%E^!Vt;n0cVaA]\ll\De9c`&jI3Mtf^!47l,[h/,k7is%<+re)t2n$KQ%\;5BVZUiBbsnEa1ATaK8INC[A3n
%MD)9BlVtlra!gb[(sKrc8D^YVf++:hT([9`o0Z5MGu%QnBdunQmm#%m_\p[=FQ.K=A2YJ,'RY\oj[:hC-SUHh=,LVR#*TN7hQ]eI
%28>B8X7_JQ/n)T'VBB%;QDVUg8XqUu>D\i0IMRP:E+ohu[Pp7m#B:F&4,eVOok]0qZV"6*-S#7!T<8f.O7rnV)^e@;`&D0qq,3Fl
%SPrmG4lWot5(tiPm<K=NX0$nSOdi=j@C6gu%U-t(B<]:JN?'qd:dt+mBD_6X+;JGh''luJD[C&q\$Q7FNjR?ZZA)O8C!2d\<B?ti
%^PM8N6Gc=%*db:-/i:qLg6O[Sd.gMfe;Et=_qP\`3K]]KO$W>Bp"V+HB9/,nOF56F5kH`;njeu#Ga]MSGMD[^PDCW=.M]]4?'%gN
%0+cN]3J3-2=[8l6ZjBFhWj]QS#>A)il_:t4.$>!hc:](RA1<[_g8kcu(fd02@QeGj'S]]1Y,`)`Ln%rhiThV;Kl&6JLqL3-<8\A1
%DY.V"3j)a/UMd8o9q-W']p:<*^\#s5h<>B1J/]E)X90#YCG.RSW)SOKXOTJQm1:7e."EF+M&d/UM,_O;(OV(qMk#Ce+&We>I80c8
%[N4tDM,MiN>8=0)\]:/bJZEPpTc,B,DldgqkhE):0WOEK;S1Xbg4"tY08].aFhrM983Z;>K!_Ch#!gB(XsSVt,3Coa/q`JuTCbO+
%8.^K&5!,X9Z`>]#^_a.UrJ0]T;&gjEIQ=DLL?[r-=^?Us8c=*q\6j\[P%4VI^=%SKJE4[qZ-+u3D9&\lVJG)"=#q#n;C$Lbh3'f6
%*,@_U9o;,sncqA04rlV&?Ad8/@0_B"p7\7cgW$U2#p8D8HR_Wn/g]K9Fs+#Z;Y=mQH1lH33E"MTQ)0Xk,F5*dZ.9DAMtBqmpEWIg
%@Kdn=qVj#:0sOOfOicUWe/sdC\kunm_o`"uc&]Cfi"CLT&P%1\gT$,B<\65UrOUN&?oEI(Q0Ie+mYORUHAMD<-X]>M@Bjm&#_b-c
%%P>!1Y.1V]'puGWbH`!o^h`3(EL:n:9q71MZsqD$pPg"%e5BYM^i.Tj7/Aj$5CQVCP)>%r+H/9:N*H_,Dq2-^8\D<Pk,FDE_FaVO
%>KXn[<>T$fU1CtMB=$f1]C$G*,s4SELo=u'TZ8BKAf#T@!+Dg-Hg5SN&<f.`82`!0XU]PtDeXn5M>Ck]JV/oPS05.,DDM3=\WIes
%?;a8!h=;3BoDW\K.r'/&>IH6Sr+iT35?r^+iZ:>Y>JdmZV071[&66u!:[\VYq7(lih_W7#g-0qrpU-!D?^aI5D]-Ha+.ah#h_S!&
%IF#g$MlnG"h:T)p/d=6PP1E4a[(+OISu(ZeGp/ogLE:KXS__6"+CaV<S[cmjUq)"^g,@$oX9"d[#bQb+<^fMo1L\4.!5-_OHC,8O
%LMu2hf!)]?\FbHpW`DW#*-TUH$$KS/".0R3ZSlFj:7R(K'UP\LZM4j))<WRoIqBD\EJnaSJ'!_ENem`*jhubM@n3S*$8[%.qckCs
%`hCs3$[aNXWg$Z6E70hJQ"R:n>ilro$kA#8I"%Oa'^agHlHXq'O#qd(Lp]f!hV"0c]$fd_C?@+\DJe'c:Hkd?kQ2NTaekYi+'`bl
%eEY7j*'f>Cl_VRq2CuN%,fES/dW";ZJO%*m6IEUgkS\^d_]A9Dr#f5"HmdH:H,Z]5pIe#0b)3DWEBm^:4iER(#G`gZMZ*fAg21>Y
%(s+Xa4AEkK\QF^3CM)uj<qa(^g#W7pL'j&Lm3s<6Y2jD_YTJ*[$k`q]O"O%t`mI#D,##.C'$:e">QH=Z>B]I1E,Qq1bCc20=d78d
%NB73mc(D="q629rV>]I*.b$>M`!/Gn+)kU==o240-DYXbKUJj'-M-Dd#N:Q*q#N8*QIhu!.*In]H8b;tVk\@qE(bi\*j-kfO#/^)
%%>Ee'4be@ldjN/QrE7nLld6o[X%2Zs03qcJ/[sfT^Q&SX<uGKF*5(;IKl.<_JlZ8cmU*6dc6cbkVL4Rre*9WDpK]bTYm(u'8'crQ
%7+tS/fu6dCI>nC3JRHEc,6MH1=8ee/0Z#cKBK9eL__4HJZ=^\1n^BP:-34#2TbJQ`Q:Bq/XE1&7VRpu+/;,:t'2X2HiesBb6tROY
%%=f[ULRTHGqJ9@@$eYFaQ#]Zq?WT&HPIh!*^,29WMnG)[S8!hS]*/@JC(6if&=3DI2q8.(EE]FR)iuP+#HWl-BS<rirX@!.Y^JPL
%2#7b)MH_BKeHo2[^ks4[TN1(qggh4X6M]r/U5k+P7ab-kW@L?SGf/fl"=$@u@ad+OIDV)M^s]N>1`HI\Jegrb@fgJ&Ajkm;=;^#X
%als)@PH"!o\H#Vj[]WG=b`.C4)XHa)GH_0=-%'0ip9u+'cl/KV3Md;nLd[PS&r3tU=]UjlgY[Z(V5Q%Vicc-l$$<+CNq^"Vc,jcY
%QK?YP7AbmKe0TA>ZOK"nCLWClkk;nE%qdrdJ>CaMDHmP,8[EL\6hjcMjm]/YWu1t:h$0kb6frPqSTFt+%^>o%"+rqKri2d+5n0"*
%QY^1;Q4o=$b7\L/&-@`+XgFk:AtmpmZC*XBhK=pJkccHu3u@Z,1L9+`7!42f[g0.A'_OH7ku;&bP;nu"Gdn!OT#GAN#dsLQDQ67s
%7@nCtP3GA#KuXG!B0S+Crc>[cBi`u_i(@aN:fj/"RUp/S#X_)pkB@*]ObO^f&LY>hOk]k.puQ4m?cj^gMI2sXjYC]RL:rTcOAf5I
%)=.g_;TBit#'7lNHU\erKl)2'q;92nh.='+I&sa<:.pJ*6#;AZMiWET`AXR3a'+tIM4hM8a2$mneUY$r=@4+(V9A4Zd'n;6)A3Jo
%oe/W,#+B<hd53lgfpM1mBQPduoCVYee+5+cdBP72kSQp*I%b=t%'mdFBFu8#]g]G2U1:!aYoo":"0JK6I<Z6pLT0GP1M\Qg"uSB[
%^,fje6u]68m_K,9Nfba2@VZl%,JT*<(+_A0Uj83YiTonNEJ2?;e3[XSQMfj1PC+#^=faJe^E,;=XZXAjnAEdC@q<?Zpi1u,Z8fTK
%A+k@n5)JmVJ(U_RHPmTbg3:[#b[QM\p+2'-O'"=7n_1cB(RAGJ;SgpbEXuSUh7cuq0ho(m5^[6"`O'KbP[q3q;+`S@qq/W><@YH;
%/)Tkk=?9-5-;-6^D!*mpQfc,sqW#q0h>Lj18/96gimgrHQ]XCZJq^H%CkK]EG#]N60e.WXEK:HQMWthl*9S@>AUhcHATS#5GFm,,
%N.7=u8_;q1kG_7n#eYrscr-r['2Ld_=&H[6JR/c-=s,"a\#Su7%YQ=[I&k))Gs+)fUd4L]H(E)ZPV*-XcnqJfRqWVuF#,J;,pT*^
%kf_Ul[][]Cg?o,k8D-ub5:K%/r6g7t:fB95#lL8HbsV'[JM<(iQj6cQ[&</5#Y&nKgi`3b%-k6W($Ysj+bgEj"bN<=!qbd+j2mN$
%rS2ii.)CF?BVoAbLBR69D45+41o]?RaL/JJT=&S!.Y]kF//01q2X!-.a+j3NoPNFM<h*733(LK=33QWi;.)Ae9bo^l(U8\[2R28S
%n0F]=%%J,INJ)?9bW)e4\taBVkCqO&[pi4j68oijBt$c$0+a2Vo:\E&nrEGr[*.F8[(,Fk%NEmVDKb!t!!e.&Fg<X2O"kGoN:=e#
%lEr2pKmIUAJ9j@1c(o8SYkXl02R,T^nB-LiXVC'NOl*5=EgCOWl5LWL19;9mT>cE+X4i:Y*&%ffCW%5,i":%LH?IT)=t2//?G/a'
%`NW[1=^p*h?CNKT#b+r$?G,CI<Em8"a0V\`jV$&NYM&Pi0W5dPkB$ih/@3"X,4Ld$.5!2M8#`u9CNA3)dfn6Z;e4j2NDFIkWDKdr
%=as=b8;f<c8m'N=4*ehh;J0u1mIO&d&O3113fa)Z;OUM.@T0;BIi/O5P\NjK2UlJ_<GP2ATIk4O9W<X15keMaWX,Xq4AqCnRgX$J
%<_%2nX+^`F3'X\7;Dd%?gaSC&7q0D'MP4"in;rnc<A[:pUX>?AQ6iB=Md<;oYpn3X*44Wr'o<e9FX3f@cFnsi25Q0i^W,#5W?O!m
%\'.GZ4D37MT'^qqkX\]b%g5GOWGqk5(>cj.e^2^<;t9<Mm>"G*kj@#&C0jr<;R7pRe;&aG<GG`h'hp/8MbU%B/D;<AVGcC;p+I=!
%Q1Km>FcG,@(J*mN=@o:).Fu"Q>^H3$FcC^Z^WR&)UeqAD9U]B;)AS>\[3f.RAm*Q\=_nuk\(#KM<%8q1!'aPapNp(=``4M&a';MH
%A9loUQ't/k/e(LBX&Li#%9Mc%k;btGV4($$;e[`S@Fh&M.Un;O6j`K:`96VT51-]beM!:ln3[TnGm&F/`0W"@?Fb+%m,&I>90,c<
%UB<ZK`EAh.^upV3T;9T<`@^6#K4c!I1a0*0i4^Uo'isZPpcQ;.Vs#B!Ju?TNY*>mU9@L_Vf\(,C"$?B:"Y]3IB6$Ec\!Y.#>D.sb
%eiuT@&U^gkZr:j^YWm-:%E$sF]'t$g6$%rlGOBXta=X,l[Y8'?[g:8[Tm_mT,03kL@2QOD[.\XPVrecJ6s)fsQ<QaQm&$[Vat9nV
%]VTC#[g8DB<A_1paWe4(M2+7mN'*is(=?[IPDG?*`&CiHMl%7E*2\m8&RaZ^8f$^rh8`kIJt+b]iAJ"KG#Pa;;eco7gnoBT[0Y2Z
%&,BsTEKbZ_&^Tu,XQL?XW?rFdC5,aT%"1fl=!f40nNE\/Po!nM&I[i'bAG-/$BaE;f<-J+fj2&A,3`,[4rUt#/@f4O?#tpo*fG5W
%DK1k/DK-=_DNT.MdL=APio(Z/8@c^%EZ16JP^XRL.:[63;B@?i4!b]R&?6(KZ^d.?YgakrTJbGc%Pb3bg3@:GENlpCk2A2*#aqUf
%4gg*b@;^Xm(*W9J;,`CBbYsF&C8jWc-ep/@T6N`HM5K&P.K0G-ceK^6i[$U<1%SQg2mW^fWO?7_/rXB#3sMo[!*pR*BW4GeArF!0
%3!Pl/XDQ-36909+0/AFs+0+*IZe2H3&1j8Qbd*I9`5=`#(7@V(WeEYhZRE#l/>S'F+r7!k=@Hg6hnCqK@[T[QVcl#tFW8OY_lueY
%Q&A:nB=oh&LlLjX`lK]oBKX_6bUdXEPm"4\Nj%7Q!I;9,Zm9>I-<;fFA>X/OoJj)F`I&/;,_QBM1)qU-TMt5'UU1+W,orEWc%O^^
%;/tj^VafJ41*BbH2Ti?-;^sFlcM4so1H/IP'/solT-n_*Z"3[`JW8IA;Gi\5f-o?nqsXStDI_aoVQobt`h;LMVs3a'9[d[Io.]41
%-:SHW7WS(i"-(5GlRthnR?qj^NVM2G+"a4kcr0T(,gQ-ONP;6D^(E</d,/2JngoM"R6h"aM1Gg8N=qIQ<1XeCacV4t'&Ld]L1t%1
%_BW(bI9%N_H4l4+ULV@R`.8(-d#b-;L`uA!X"(-0N>#*KQYDH&-65F/q(=W!_APbU@<8jU)P=r`I][V+GkA[GCp]F5;$-ueFI$S.
%&eO#NMNGNf<^BZLY_Od)hIHjq9"YJ(eVHftT/]4pU'gHgSC_)Yag9V8h#$\(Hs*ETI?f!_]:HO#59)KKgRu"8!I;j.m*WbS`M_Qf
%RSV<B[gt&\bW2tk^O7`TY/D$6Lsat2lke1MW'>rSb[OVoc>)=m5ieg;WP]B]0_"/e$ILn+Q4/p-SaneNUHQ6+.Cq)Z4PTpX'r5NS
%>K-`"8sj6s\A2"l[19:!))]/Uj/>C(P_n:A0gH>WIZ[AsrBlkX6O"HAK+fd^h5;ac3HP-0TeP[TFJR88c#9tR0G(J2q"(d[Ic]!6
%0RHN_NMBX8`u]Od>pBo(nDX32@&PjHI7f4N-<kLK]ZD,uXO0YSZ?5@l44*`@$[&Yi`R#jD%7Sk/]GZi;.9/u*\a"bI5hr\s1:>#[
%"J/7+OQ/:YO9<:W+`\ES3G8)"p6T$k:.EtG1GP)m:k1.>5fDiZ!/0_C^4_MC7pmh.bu]l)_bc\-e]>7-iW['<cb7'UO@\X5McbDI
%HT-U9=&9<9XqX>Vj^%5nm";`<&OuJW$[<>G"t68"]V<nON4Brg^kZFu]&"j0)F&mumgP$+5aE2'lhTI+*7/Qs_=H1Ial4WXkOojT
%:#*[B8#K$C;Oo64(NS06lk5(L'o7pT*$!`9]%(3+dj6);XsbmUh?a_]EEG"C9`@6]2sSb<*T`'4hQ>AHUCCHD`2W%LE*;3>DEoX%
%CKtS?lajgtR4'nJ*<;8Fj!@nkO2*1p.Vkd)jlrY'Ts?#Y@Z.?"PVpbm.iTmPU2f<5n#31dM:C$'^3Shgrh\UpShngkl.&GDP1ZT>
%+?3&R\f!8a"$.t`9@JUq<T<Zd1Qo]`QBfDnbC[s#edBThm,`LpjMPA.i84'_It;1U1LST76C>j\eM"_6ajrM"/L*`r#QBXkXGP*B
%lL>V,ARV<2[5`//QqrdG/t7tJ,23.Bb2PN[C^BX/Q8+:"R?aV'baM&MeFln_iN\(n!4ULH6;/"C]JkK'V\GLUY3nT7"O,$JX=19i
%o)R[(Zh='s<Hg6;Z5A!_l%;:,?BO^k.9JG@,)hAAM/HdB()Ui(D5mAd0\-BrF?64'=VE\rYU42G?qo:lRZ#+J%$5;,#npaLiKPV-
%RXfVToS_'CbhB`qa(Q.]R>PQNZj@BH'h_CRD$&o-h$C7pc;`=1<<,tlKgk4^k@"Q#Do1iiAfSGiP?fH2-T2NET'0Aq<A$$D8J\rF
%RktB`5i/Juo0qrt;5I!S"O,Taa#T_KlAH9l!`k:.4d@p6_RDAoY6KN]jpW,u@R[)MHn!:VaI2F/ZjC-.CiPsaD8IRmhD/C^k(LP>
%g;:t.?\VE9]/OC:0Z^ufK/N`HHQZ5R<':2W_!thLI:SYlOt^4^RXgM,ofsr10W@R*-=Eo<c5i\ePG#EsGR0HZ@&>K`CSV8u3Boup
%-=F&U>hSf./iF(U@S_/QqSgXOaMO?q@<'qgF!b8rK+UV\7Z5ouJ,.\>HE]NoBV#8sd??+V>)k2B^=I:Bic(s-RllU-oOJVNoE6pV
%"<'FSb^hnh4[Ej:2a'$E!ne;]SKSU7ZX0n`/:%@]iq=Rflt/"2K+9Xe0oP8;-B73q8WI9i1O=Z9^G(>F/(rR8#/3roZ=^_Q`'0CK
%a[C&b>t6>i1.P.d=nI@fi=;b?@J")oH1W@To>L=i$hRSjQ:/I+ZT&+[SlXgnTo-]Rr?/<k_P"h.SZ.MBF<iEiHMt0&<P%B5(L\hg
%2+dFU_4rUes-rTZRTS$)n&k<>\<:dK4Y4Q'^<O3Ba%]&I@'_(W"4h6`&mV.h0S*nSV7nSo6RRB?4MoU+hXTp9]^;g10@+X0?lZ_:
%+?$btd1'a5V$4CBdInqD[Du_i5MK0S]#[o\o)VXD0'nM:3%ces#LMZF>qjD5-p"^rD1Z+I7qc'>^Pg`F!Q]TK"bm[4>pQ@;=2JjX
%aiU&loH;Yg^c1)=@djOXM0H-j*4h[oWYiYfgaZ<-/`H;DE_\MS6Q\XU^n5GSN+RZe4B;*+nZ4pGIcY!:aQK3rdu"'E''?tkhI@tK
%7f+"pMngIaf^Z1-+9PpAd%P9>SK`F(N@HA@LNY3W.I4oim=kk6?<@L$<BOskGm9:ManXghc+kO-r?uL!BX"QacXEG=aXEfoo+:p;
%`0Q_KK)=FT]3j9XA4,j5V/Ru.H'jQ*%LsNnF2_i!Eg"_XC/[e\<>SF0U$XXkdp'*m$J5"D\2,!q&!>Np"DoO+LPmt>XGPhGakQAm
%K[C6S.8BLhoMmoYmA1_A94qO3Q[oc'SB!Y"]I^4+bAMH#[NRBYLG[,[P:S>gnbMp(O'+F_L=!HfLn.cGo>:ZMGklYi&s-7.K)IOK
%-3=3sja_/F!9V4bgVhoSl#<[-?$Aoi=&K\=]&F9^#&f"VL;CmA-\NQjVNNI+-hXm:0a.`+RcCo64&M`o&7a1?TGWoY9gd$q\cG[_
%=^jrYS1Vk`)8P@_F^'fi/=KU;L2'lj3_K@Ur6a0d6Pr^Z0E)G=G5E\repL&Ui[NHcqEaC[#%LnqrOZn=o>T+i:JoSC&_E7SfA]q?
%/:`Ej-\bQ3"Y1M).[0'W70gO5%r)_ud,&-J:lXE)@Otj$4<VKji4U\eR4"8g1)`DWM"c_)mSIf^_E;*WF7J05oo@CcV_m64?*(%=
%B\(o\_Jh>9B!,u2Rc<RC]aToo0p^kBHd^%Fr=9BKbcMl%>\1VVMFXpj'NFR3VUa7//GB<-X#-f*>*g];$Gp'Vce;3F^5/8MU54nF
%ar]A,\K]>`>d@0NV\6b<@+<K6K81;0Sq)aZUsENcRu5*5#=5qCfHTDddF&;"UkXST))3dM\<is7^eG!g".A8Pma(,4e;@D+"/A(>
%0odb@=lCs5l`J=DVegGA/,WHE:+KRTl*DZe^;k&FjbkZJ?.,o289*`/`Q#D4D&eMGqAtQ>&)H[d_Sg51S]!XBBo?Ks0]`ft=_V<C
%U/#MR5;a!5)H"0)7h9lALg%V91]nM#JShBTfej%oaHtp'Dr-,a/hRTj(32rf+V1rQ!P0R/AIru5Fr)*:]aMfW7f:"5o,]kW9rsel
%lNaY@T$;4CM]ajS?$cLFD=8XM&g0(J]N&K/a<I[F'*d`Rk&4=khC?FhgG[)ul#b['!N2sBO"GHi/SRCZn1?B"RM[0a!%S_7&j^:4
%(0,*'^p"[4A4BS3NDoKUb;Wm;(@TSMATs\_pWt/\\,)c3qg9!._[G?3!3OgbJN=iXJ-sLPfiTreQLk2+Z<Bpt'f<$A9F=A\mp^M;
%`P0=?mT=aJIL).5eOEee]V=Mk4U<ThpbaKa%l8&!WJV%^)cM3@GU6aW1hKh]#?oRCg<bp0!1^'&:^*P[0X1CmCQ^MH4DT&jj$Lhm
%mb;jt=*s`3"^AnP`]G*7E#h%h5,>CPWO\1KDKf4MZZnIPpE0b8<H[Ej3WoBAQ`d7g__$.CXPe]N1h1q'o+b7KpD#gQ8jY985^qHY
%]*qR5WgnQoj*sc#rZ[*gN[ElZnfnO19Kid+;`TrDM9M<Vdlh"'2sb@^,`C`p5#+J.2)j@f?$">Jm]Iah+;3h>4j6X:C`(kJGjn@,
%TiD@b_fHu3=Vnj&k0h1aE&)^<jYC4Y_6+t"CA;4Lf?E1P2t)\V^D^`t.oBFTDWY6q4uR(hkL0q(<XX4of\s+I!cO:K=q$;ta/-3h
%eqVkt(HW40XoebcZb_rPWt:3@Em`p]8.oVJQ4$n#+-U9kS,2.j^<edEn2UjHU0#QK*`]NZfn"i:qp[S!]IT6,$*t::B,SgqnYROi
%2f!A5K*eGKc`hAW[*XQa=k@)Z-k@WS41_X=(./M\:Ij$gA32V]K-IfBfM&c;?)BT?55HJ2c6NS!JHq:ki`Va^6dFRJV97>9P_n9d
%XHq$5Qn:/Zn<,2Q9H'D>)eK/coi6l$_'=oXKjHoQ5^kEs\%tc#,1M$$gOACm;CUC!bV1M-Pn`TncBC`&6bqR89BjK?+t`?(Sdqs[
%Ag3;=*5Xn;38P4!>&.qQc*";6eG5lu=qI^<FbUoWMICKnZ4hir.hg^RQDHjtOVV\t'iA^FPt?@\&b3SnQaqi5X`T?9f4gG=X]AC%
%?$pR#H)Zt/*UZFZ':\i*[.,JW@/YaGKBO`tG)\('1[i)E.ro6FU4BIME=D*u!>DX3nT!Z0"ZhcZR?N<A#'r]WTFl:Z*bD?lRY'3O
%Kj$GU=[k"J#oRX?,#JIOkiFqmY>WXAJIqrmbl+n[`*(*!=ShS46\`n!oBO_/-)YfA1JQI]\UNYab?L]1O=4E"(%^2n?oLKK+>GSo
%E_bRab['5hK=ois%QL,cKJC2$9%n*3,-?S_IO]@#IC1!gFK0=WeAH!EI;:t4U6KRh9>XG,m]g>umq4:C=05F[brfO0/OtAk?d\tF
%X41U!?!<1rQ4,:!("$ROghjR>*.F+!Z;?aAhnOuHU/c$&H#>BdnjncG&CI!u><%:Y*Q+5XIj`bNB%dm@p?`BCo\eT":&F6s!pO7c
%>Z!&Cip>kMO[oFp)kdt.YGed*_o!\hpU]qd<f>$dAoj(YnmLfA]N^97;ge?XXtS/XRB_QqXj(6*3?hh2"5>p^Nu+2V7uG>gdS([b
%nT]GoVS4W'?\*Ze_dDhuLGK]`/L?/#00T63f#VZ=n$)d0NsEG1d1f\F^7s=SfjZKR^W@Z@rutKF4\O&ZK.NG?1k+t6pV/j4?ZYEs
%j7.A@/)A[!4MF["4N6>2i"51HBKX"p-uEsH?=K[Ac!LO0m?]#`XcZD;a()\D*$4Wp//XG(CHT>^!39<d5-Md:O3]=7`T-RL[Wm0o
%/Yaj<O8WPTFAb4BhdkLh(6?KO1dnY<kqjZ";qI1sP$aZ`!?.$>^mi**ipdc5.-:kN4<Cfh-K%_AU56j.dYPq^@ZAFOF4qCjk:<t9
%)NX(9a-jkr4MOd'$V;^o<F7B`=c5*Xo!$KbT.f10<.JT5d\PcVkm8aIouoVXK+pfI>iupn,ma%0Jih>NrG%QGTR`s1ORACA3L5rQ
%pKg/t>o)li-/;i>=VBYCb<CRs]=j"lM_-gqA2O!qo]m).>kN(PUCt4s$L((3C-lOUXKc+^R]`Jc5:OS6buN2gh(T"kYJ]S,J..g]
%?c=YXc`8?&WQo4;Zk>)Ej>]Es)D]SC[O/^;M::Nc8%h"lo9r3/peIpVmJV;JmX[)hK"DU2Scd*0?Vd)PbTld#5\6L0LNsB;#:Z6i
%%\Pg@d%GXoRk-[W9cT`l(7XK;-Wr=9Gn-Y+ep(Ei*5JOk'Gfgki;G55B:_J%1J<S!--lV)gD5Q'cN1rUR]!1'?,Gt/R:!:-i,U\B
%c!:Q.79e%t\IN\Vi/Msk1BhL;F%EV'3Fm.)#^$:)l&43-Cipa@Zd[Bn#8!+=OuYN5(ap[d&a'12o\DbIVF&>19ZQ9X^qmK;As^dW
%mSN'ID+U'TXPl:c+RV&K!Kf*"UYL-^c(23-4O!&WnE`82O$nZmJ/Xnuh_\+J.6A&S<@%#66Z]sEq)EhYVe>&n+!kB2iBD4[>*Mh=
%#L&F+rR?7Ga>,j!H^N=cWS)XN`U5lSIqY/MpE!oQ,_`c>oCU"ch1p::%i+2W;?OP\5Q9t.4ZO'(=HE%KR`.i[@W@1XrZk6b2r3Ls
%Ra9S:[dt4Re8!>+q79UM%fC][afX.c'ql1Cm<3/LB:tF9q0JTW?g4C5D]h&I0CO_%SZc1dc<$h'@Ndg9r"i-1?,GcR7.?CP`01&H
%@66*efB$9k[dt4L@c/>=_lan)LRkUlgWnCr:6UIsS#t.0BjMP=(>jtt$2^q<pCe=\a=3mC"M0allRp*<04`NM#YXG(XonQCq)Z[c
%n;LG[oX&]SA@L--,bW_KRIE)ip*T@4qMIO)X!2XH4S$SC,\<Dn`_!B[Xe3RHLqkKW)8^=1pJ#nR^PX>aO0;1T58Q0@\*)CS+$r9\
%&LG%'3#4m=?/g]MoI[\sF/o[3E>%G94_Hsj+2g/YadG"jn3sucpreO[=_HOmo:J?,Xbo4&[&eM*g0Ca>*&-,PXTSf_fj(W^B9V"R
%Rk/BY9cQ&m(7WPPR?]e$c%W'"Hei4R23t!gF&lsq20PHPc,-INEurWo`T@6^n.9-$R9V!a<g^VS;6<=PFY^L2p$d01$Ea`DKZrKY
%+h+5^_W1do[`9lIjrttX*D^EkAQc=L2K9R8NPL\J2-^Noq[7.[@8P152k-k13h^kY95Q;_*T`=rRgU4tkHX@jTclk)B6/.2joT[N
%_MmcVbMn[sF#=Z,pMR^<o3@&RX#=$pRr_:=%U!hhm0LQGRB;Wg/kh(6s4-8Kj'T,q:E(b9>^9HtRgUafB#)>%^D'hFc%X,L%<RcX
%`MFL2#23=D)=<gF>b"WKjFkp7nT)!*(gSe(1V-+!+/(Ffkf_^VR*e?3Df[GHki)f&0,<l:_O9re?O,l4k\?cZ1NX6h6VcXegPF9B
%`jW+r5X?4NB.f,$mDW&q+XHZ>5Lo(GcSuSHBQ#Ue,K;LWS,R9E0(LRL1j]a6itntQ>0^6:I01B"SqShB71\?Um<u<))Wqp804]fe
%]k%;mK07FmH=WZF0`3R/b>eWYY+P\Bij>8$5KI(G'ZjCbCXX/OCV2*i\Z(1\e%=0]dMn_(Sh<cm$;_3ciWcM<8RU\a\Up_<!QY'G
%3rkum&p;YK8bhq(#NUt$B:CFbm@1WUMf?]T&=`Q4$5pu<Iu%47`^`U(h#hiI/&*h?L2X3)3#IYi;;%Ft]%+olq#*WTXO-kh7L]_B
%i_/J<<5OjLgCgfmHDJ7Ukn)!q7NU3r>GS),;[8))#*^N`$j>K(foA^0hS,8@'[S"c_(m95>LAQLgQc=F`I#uTY^Io#\BBUT\2Tfu
%Wt$oTqhl;Ij*N:si[e8ml6J!9bKDC*Suq9>\^`2j!LQ2UF;?8c"Ei4-P*gNg<'L)#>p%^HaNe1LNj':1j0!&+RJ1rN8oZ<RPssZI
%eQ/p+]MO7EUn_]!J<?Ono&a'$Vcd&@(d_bqi??i#0"DO#9/+NWS![:d>Rf@?^^/L/Fi"KV:t%a;3BHF4og.7VCbNf0LEB/ZPQ^n?
%*+9SGRGQd(l,-_p@N;L!+tS?mkS*B7__ZdRcH:RpB)`Kr2K,K$bdB>o8R1?@p_7O_Miq^moB;'gZ&EK4TlgFW/^&lZB=O%d=C"n-
%3887'd])Y91q\FpZGn`GBuejh.(uSQ3R2[f]W^AnE-Ct\Kld[=kAqFY*jm(UbIa3NFMN@nedN*G74;`.kU8>h7=mVu't2^mF.fmC
%5i-A2n$k3#2.KQ#o#i-.5k"")BCT*<!l7?EZ*J"^?E`EW%i[9^[7Hp&@?JI9#9]Ij+VYU(iY?fo%o2V$3t9Zk`2+;<.B/tuLNFht
%q_F*-e-3gJ;+(hs6.\7TH!7h]P*`/>fHY=\.j44\l'%dCIUM\)EK`?cq"5Zg4se5U-?P:d0?<;8K3RlJ:!bS=fT3:KKg=8X^-t$W
%(thjsUR/-R>+h(O(IE05[q4$"+ES*A/[NB,EXk7DW?>l_H&+HHl(:pqg/BZtcbqD\N9(WPMR$G*Jf$TcU=C?2N0e"fSu1O^>JkAV
%+>/8NJ2_kiLp:CVp"c%<VF2Cb#VI_+RA`E;Jra5r)b=AV!h'TSUUh>0/phP`WnCl;rk,d)*1$ln5Ao012qacd!k3+:3?1a7+-U73
%h>6F_[U8n@.hDICd7n525E<2U!t^K_r&$`Z,P7?fggiH`2F_\#N+Ld"%=<Q8:QN3N2RPGQYHog=!q1RAJC?'!r*WX82(?!GB<N]=
%j;[X4615fu:niEQQLSLb,)43RY=92"(GJ\,Bg4_RCf(Mt[.h3@WuAcSY0DhjI<P?j2bi&Q>a?P"[[!PI#gAF^5/QE?<BtUNnHo,s
%Na))pa>`*qgtKiH@#1?t(r<(BFOL,&AoQcQjWW!s01Ze+mFUDC#,]'6=ZCpM;St)ANHKp2Ybpo*c:U#<$C=b]]\>'s@Bn-6QK[)`
%eE92q#IRmH3g+_>0qrus\<6V21jZAk&i?P5*5)T(!L<'&a]VuFN)Z$^O)?[TJ+mUun!>Aa%m!`.r`B7^4_U,K9>f^r3e8_OGljb1
%T&_Dk0/Xa`&ZaaF5@$<D;%S`8?sNA<%SROD>ddct'8r)>],IKMDdntqc,\;414f`qT.3u[MKg3!:;c_s49?:`1cq\Z"GGik!,pm&
%K,bZ*>YlH4c]oB$1N@.%P<<a9S6]iUHAab@]k7_,m@TSQl!2o\p1qF:C@(l^UtO4$qB:s7`Xe""iV?_M@hb9L=N2rAYihp^$.AS'
%VjCc^0]RJbJ4&hF55pf$3\i+S/0Wkl?JOT\nTQ>g@'aHG7buWBf".u4+#;CK`p0unX/Y3^9ncd_41%im[lV/m*Bl"/l5(:*MUd/h
%iDrJ/5E.9tiDt`Vl;l(s+2,!@Scg$2h%lJ4=>?2oD6Z<X(A;Iu(.;K]*d([-mZ5okCY]b:#ok?#/^'l+CD5<E\ARpFE2tea3fVQQ
%$b,Uo`fY(k>CFaLBGV*3kW:8KUL*O9cqD!75$6cEa$b-T)RI:4d$(r;O^\rK0G37e1:kr(/./lU,X6@EE,-,&i>,rni+7UH=>E?.
%T*i's:"EUq$Fd7&c5ctW7jJ8jHYO5XQQe\(&4e8*_W!>_/6-RRCkdTWDK18'8'MNH#tYnd>FS_&[s5ei,7b>@A4F?TKj/dn6[:2>
%(Z06_TrHU[Fl5,/-Q$u1>R.0.0$7e:4>l5C>M/!Xl\W3TSo`=`\CIc2X0]YpXI!hZ1^^^r4KNmcQ#8m"oqPR![E0Ve]SX%<Mo>F"
%_6S.jDs=7f.,Da!*Kf>OkuRi,RY'Xa'$G1AZA?*\d0$J0.$PH6D=t\@7-,1B[B;'aggV@qEX[@jQ>Su[bc"mSdOd;Ad9rqRDF)bb
%#Qq?09bs!uSRGb,b!b>l:P!+.h3-C)/</!0/UV0:>/.#mlE%nsZmVo`\>db:bIJ'qZFVY=!DHQqX?I"oY]pP&h]jsT^;U1EnUsrW
%[2hs'b!2D)]?u=e.@qfAEX;<2\G"NA#E)PP_qdH%.aN.9;%57qj(maX=q*4%Chh()XbMAM%.@.)!LeCW.8i%A-mR`WdpBgg5@+dR
%8rIg0eIW:-oY[^Qn,hq2q2+V3R@ch3+kXT*DYuoh*F_Sjh%\Ug`r9D%LcY8\O0.gOR32'p3;XM@,.?esGCC`X\+%gDXbYP>;%N1@
%ep<-'2,25*6uD*7_S\N)jRj(#ARrqdlQPck`^Hm#&GSf>@mrN`7`0PLBfuUq@TZp9S^8T]@\go3$h<$JM(iXEMIH/hUSIuIl6/WR
%3`)l4i6nop:[91p.STLHH-N44LqLC&*eN.>m/09(1"Oc,eO/8a'&a;c+gAV>A*55^6]t2c[]:<.57n)[fa"U65k>UMJPnW6>Fj97
%T*V!C/7,(D&6T_?&=YNA+Z=>L=,Pk#<Y*#J$FOI<&:Ah#6.!dlH_a]-dT?,7U>SQqYDXeKb"\rY(hABB<_%#VTV+k/h-c03_]2+:
%*VY_<Mor\#aNR%H%cnflCd7YeK.&s%)&-Q7do2g!^$"m2\G2R>$chO$CqoZ_MPIUC3aB8oQKJ/-Y;%[bIs>u^o,,HC0pZh&2!k&&
%BnG\7\*90]q)[OXg*^I!P0"1[IdiFo9]GD!VOMrXrl1X"O,oNG11HZfp6H0l2XT:o^O[!?$o"_%4(Hh)@Duat3K@(T+]j\WU/kS<
%aK2\qBk9W@NCI8uVLKi9X>1>KJ=tZ_8#n6%Po5")SK>F![p&E9Yf81LHI(M_qO.M^MZt#Z386].d3-ca993?*7$&Pr=ZKY!Xipc(
%X?B*gAM?[c^/J2Qa;b4&Znb4c%9+i^8^UW0[[J8gb0+N<OfV7Hbq)?VPYH,4;.+$Z'<;1Fq8lPt],2FmJ<.Jt:g<;E;>6o/s5eem
%%:'pc*8N5AbnVe@4Q$2XRRlGb(q6mbYPC_j^mmQGh9gH^.p(=&84GD($G.9s?,UG=5t\W)cc7PLJc?#\3j);2:d"5"B,7]nCA=4`
%6^h3r:,"<fSg-K./,9)\ALeWcG$<@9QkEUHBU&a_(&AoKpPp&l[!?Y%Lr-q40u3@W5@5n3Z+ssl]e2$PdF#c[iE3S77P0Y\F4l>U
%YqQ0j?]+fW9Q;muZ+U\R0_>'[KFaM]BJ]rI`>gL"fjiKg%,PMp:-W"t.?%!5q-?%)3<$[m3PE`-4O(g9l\g](h;,O//%rgB8a3`R
%XrqFY<]]ZG-p9mHBA8>M4S,KLq2tQ(Ua!KC>]&Jt50g7_mh+k-iCf6N)[.3CL"OOUh$mOq,Qs,SZE\kJ/X=D&%g&S.h(Dt67l5li
%RMFtt@C#9a`Gc?Rs19h51QZ+Z)G^_-,7=d5$]>!2<Bb&k\,F_rTJMQSE'OK02LJ<NTECCBG913dGsBQn6ZQYA1#uC$%ME=Ab!h-n
%`G>Q0SZ7DX1c$6t_"27=iUJ9!cVIC-0(Y"36aA,5o3!!Qq'7iU4@IJ3Uqh7<fm4tli&k2(oH8*aoEt&)fP^l;:H#Vq?>30eA40]@
%6dDI#7L?"B:Bh6i"&bE?4G$C(/k,5ZlBIl>iNjfX^Hg)j'#8i]c;.Cp(n*dRo3%B@o:%]^nn?ifm:K\D<oKanH&RW3r<t]I-6^Bs
%R#poA39o'&Ede3,`4[%q/4j9.ino%"!jbOX(Mt+3ra+Cea^pH&9&aIqi&jL(MX3<dd2:i1dZ#i5aH:oPS7d0bj*"=Zjt-1jrUXG*
%-*<Qd7"W[i+%t;+(d'Ul%5s8eG'nVOk.+:jN'l5[VX=dQ#pBR4dP3+1@.P3RGI[f6rusAr.)[PE+Q%PWK424u2Esi$fEQ/`X$=<t
%oL;Ek!<2Xu#O4lhU"+a[_2#p\c65]BqtMOm32>*R9th3hj7&`?KcOF?p"mXPX$UFK2S*qVB#/5R_tRa>$r)JDS'4&*l@YHc%@PIZ
%o":gf_]&EK&ZLRj-EApc]gl!SHd<b(W;LG:/3M8qZ2NBp-m%dLkjX#l>FM%O^W,'nr8Gchc=7QT``U54e$/#5a8FS*DNcSLp3")\
%;;sB=.7nY.,jkeB=Y53#_W4KOq*t;<3ZQP"5#preicIDLLYH8//<3'BI#hoSWn?.G>-WuD'5*tq=g8@&kGG"`(ZHsTJ8sA=EJ$WX
%eRE#M$b'<a[R8r1F-f5#_D5X/"^a8aMatJK-B<CXggNSNSFsI<r$r@9?F*'4UM5.8LRXudl'^3HBQU#=L1dZ`?5Lj;4Q<(8Wen7'
%f]Y"UPcJqj1sK7.E@<qA[rpkXpdQ/Z\PFaFAW9H'ed=q9KU]sc)b4T,bE9-p]4%>2#5AVXbnJpc0,6pH1K2eAnu.4[8%Oqo*59-/
%V6#Y:V"`anDN]0oXB;L&9<eu\BP9H]I8\9/LaL?P>-,&>-Ok^A*HoK,A+I'LlQ2rc49uIgEl)X%!gf`:JD_kOK!W6b8k*Y`3HZrC
%RLA>/?jq.M_5TbRIq`t]cLarFAIePr&R.;nGG<I>0>t9TWtHEMP.s,q(*gTfp@aT=p\XL4aBr`RWM,WM%3h,2?9$=mA_eg99d?NC
%1et9t9F4ujXM#Fq>D]M.h\A:%N3+,fN3s+KMkJA'j[>9'p?ZKOrlO$%j-2G9lI2MFf!#o0-`fM7#rL;7kK+bO[dbkh=Qi.-4H+26
%*H`m21bg=O?#AH(KCKO(=]8jRanU<UpCZ`b_5:N]!C**]"Wqj@<caV$fUus1M:4K\9`4l6^@uIHT.EZO?.3Jl>M-LF15_7$JZV=8
%5'3/g)W$ZpQCBEO<R5>2L?=<HLoBZ-RSK6,+.$#$<1W@`cUK;-W=Bg/8EW?_"?MuWF\&tQNVfB@doCQ']^rK*A==@Gr?[faYlrW%
%FQ^WL27*YBoX3W5,s^:G<cIgPX8<,_(#&m6Y*IaDg#X]t&sQ(?gea[:"r]bs#PYs2Z4]:BM_0$tD;'K8`c(qS!@hjD'BFk'N'uP'
%k!+!`P(QfifQ>HLGG=(X]AOOV&0fD57(:8Dob(0S/4N_9-;W(Vgt@Md/mQE9pGGJjW%T7*)CWo_I;j2j?k.A'-lb4AJhias(b:r1
%9;A0UQ5ts+iU%ZUP_uTCb/Y:LrD&!W(!%=_Blq:3n+UA5)NFFGhc!>8iH70m%:=SQjiW<<(-P%dCV;<k9a8AH:MY#\rhG>-7;U#u
%I>>P8:(KjmG.."r3j7K+r@5u+U9_Dj<EmpQ3*)$fQR^*6TI0PtmS2t1a-E"=ks9Jgf#cHV7pfo`.@WsP-I`t6fZkf:oI`A"Nj.?'
%/!4$/=oFRk',If00m[VKb4q4HAE^--bSIFMMUYFq)2kaB@1YpJCo(R-rJh`f4\/_13bG>!2efIX`;&*aM\MDJg@`GY=X1gVA_S"i
%L-cK[ZFoR_G%Y8C1^mNoXG+7#jO`6skS0Tlft$<MX'gqp!cr=QSsO4s4&h)MdIR*3MK=iU9;eacBqd'41X)_rkYNl>"\i#KFG^9r
%YW0F[W&>:b"*,ruCl*%UPHHVeVKs_YN2H=khSn;J7dRldUdp8WXY,frn^+-_8>hGGk8h6.MsZ>T9HMo_jK]6>Fj<`&HM"$SJRPi!
%(70@?$F`EqK8iM\4G(P%eKPF[`V]R!>Rt/Pr!^,C[*;6)O4]S>Ih0kt2]643o@W0&=K1XmU<*%Jk_T?8`jP9(Vk''H:YX%="8>`?
%f[r$J(o(cI$YV]kf9,JHW^@[,K/2:.:+8S0=-HB)l?QfP1iu_Z*KGcSF5&IolEK*%h,MA^?c5>/qa,,u+SQd=HFeTbL5cF]("s;d
%&n82fZhPRI91%,unJ#bdrPLl`7%['lnO]&e4eFCe%KJ1@bD[5eEd3femGBC%Nj8_#j64B8iqJI'(Ci6&I.OX4Xm!I2cWea#qPF-!
%1DN&;VfY$m7N(+S9fel5\Fc.!<5Id5qaN]n,d*`iH4g#t">W"E.H9_o$fS=e%18B$N;^K#>6#5_im'n)QQF4pfI[I^7ZR1)bXe.g
%\8!cRIU^-Nbk$TKma+2q<7a.lP^$:2WC@-]@G7A[e=*#A'Q+eip(gL+1oK:DGZ?ubXMi_*^5$HY^[3(*^kWZ'(IZ/7iMoT'L/j',
%V/QH8iH$ns-Dj3sD*-J;g;&&C&9Rnf*Q'm>ZZ6+!:CY'rP;9g67n"NJj2P]]08sgcC8U+?@&MR"?;VV"FM$N(jZtgMjQf2rmH<.c
%'p863(>F:-s%Kg]I6W?eiNt9.m0lsEm5*MBXRgnoUFQdAg<M3.WVo`IN2g344($qtjR&JUH/Gp5UOChW8Y#N,9l(^F(U72OBff\Y
%UEoOh]02aTiQ_rl-'@nB)B6GU=H2`\+87Q\]=@7nq\^'BhQ(SY1kEB7pUTu,rNHFqL'I?L2c/5T8ST2jH8V(.BL52=08L(NJf!)u
%1f?E8<.1);9uaW8!WAt/(uoOb#iF!C)<;6t`-F`1%dK\?IL[P;hkhMT;&tkoo*YB:08r^!rL=':n)lND^7Y"agOB,_%hJOT]_YZ"
%<A"T]I!u["0O,d-:g$X/Y6pt!;q_+Hg..hc"o8PsH*M!KFI"IVQ@,O$/\Ao2+4;URR-<O-8'%N2L8D4>4<W>IT$]GC^1WZ"e+MlN
%Y"/EF2$`?a5e*GXc@TXSnP1_E"QR'@21JG6C:J-<DDE4m)lC-p7l0QMj1[Z=VC::WVD>mKl`A:h_!BbFB6m8'K>P4*HHY<*#0T>3
%O`0fM38Gk/6%^Umf62Uh4hMh^!(V*g+Z#r*b#rC$0Zr.,$>hkhPr&)U(lTenHbY=S<tu)Ap$lKg@8Of#n02Jn!d/1s.0_Yu#&',)
%hPdAG>0gg-1HJ1m\ItlC6qKA3=Vd^,9jHb;fYeo,bP.-NQ7^qp$2M@hF]..h2fM(3F-V.ZWd3cU@""=.5t7'O#sWq10.;:!&L0?9
%FJ`3"":^Z"M-pt5V#;-H+JHS$-r,c3@>[1MGY"<Id+nN87G+RG*PNC?-Mu.j'?g'M?5b*6'fA(^Niutt=WSp?O?(>&9QYMrI!6-M
%K_7[PH]qI_F`0$,,E<%N`&;U42+GO$18jFhN?S`A=7uu_XUH1?[fAKW1L,$"huK7$d<3+52LM?lK,st8h'P6NNnTJ4Ed?E5B4_dr
%o-H;hZXIbn<sBfLip[DIXjq3>)2CGVkjM^2&B4IbGH]E7!-*7B4Cfm%_D"0.1Pn2@e3b1KZtur;C<13O%$o<u2Fhc+E5lYL`NI#u
%1eof<d%\G9S3T(Z,5E\$-]A/X`7RN0K`G*@MiAdTX,]A4&TW8#"@eK'SX21%0h\cEN%OKI@(^?,nlEB`l0m?V`dE@h52@bF0ijIL
%=/V'_Q8K!$EucS^."5.m\W8QmWIfh;c+[R`_'2e=kon%m7L\.pS=pe5Y64`6Y-]m=m:?#,YnB/R,'QV$/Xe7.*#<u,Ch!$OYeBI?
%]8,ClgRontjHm%%)Y[mi;n<O-He<ET^'Tk67<K3NjJCnD?@qr4m7%YiC[!>+ZKfMjB(W.Z_K'@r-gco5FF,^V4>7\RlMT'J!P*NU
%NWui)3\I(aeL4W;kNt$q5jUQedR"f7=)jL>alN-e$?'J]G'7(cd#.L:dWT^+&;if5+/J:)m&IKM#%]-(UF541Z802!7KSD\R@VRq
%(.i8B6?6[bgYe((Q^)WY*,1t*?m]et7TlWQ=WBV!I6<48Z5E)!U*j[kT=RaC9:8.re@g?ma:R(W[hVrB?5O,nEBAo6fm,u<U%kE-
%P^?Q'hm7/KUF1&ip)^[-Mm\>iW,9kfRBJ,ZB''amLBi3a#ND/T+q=@UT4fA6[R-Rm*Epg%`MI5>0Ln5*!t:UKdVqO8BRdqG6_$=\
%1uJlXR`-$O0l_GUnd4KA%>"t=mmcTFBkQP,7SZ%2kM3=i$SV/_.lP`@M"9k6&/ZlmD:jOgD[42c0ugpHaRLFg4^p4OOo,a6Oh&4q
%ner'bqP-Y`i([h4`-Ka8mE$0cik1Qu<m&.B=ukU,RL&n?&J$q=&34R$8c#-S9%+F%7<Te;]K!Kj&Up7b?lD6LHEcJ^h)gW>(SuZf
%:bZ[Q-Z`-%,k,H]Sj"9H2V:Z/Z*d(QcnCq2\Z)#YC!Bk^<D@Uc#`#gk+ZPHl_60B)@ETfJ6>"msLC_u50()GjYs[6'=Cuf>SS4fN
%mXoW9b0UXqi*8Vebn%j-#e*\ZSTHgb8CIi=N8(L9SH0'_*GsplNmYZDBjUqu*)E[F8T#M=ZE9Uu?OG+LMNA]46fOAqo=E3)Yk_Hf
%0"%+ler\+uWs_3L%d:V<\]Na#f4VBFZ)ZR_o:T6P!f,.ETAR&A.ujZ`MDEs`OEO%:QCij:q@]/$Q=#[a)>@ecY*@uLKDY>)qnnT(
%Q&8cI6@m8LYl'T1&V%M=SToVf*'20bI6r&tokfj<!66E5VX3B?g)(,'L(F]n#m4aI`P^6Q]q^i&fXOW%o7P?"-*4PW(J1\j9R\FC
%#TghNGYsL677)oGj:CK9@#$CA<0g/"4uRK%&!R!#o!Z9CD0AN<lma`\P20jPj-]1.jqsOt7.!6?3k*Y8d=JfJ\b>brE]=)D4sWLa
%&&ZcrjmjtJB-bEMc*B-G3#thcO_BM]Lk9_<hE0JsF*:$IGLXg`a66@Ga6&/]_5Ch=>^.c:ZXEHb"9`:\jB%C5dK!VIMM'O2aM[9\
%$(9sbj,D4A4@C_erG#U`EB4N#f#c)QH%h[B02Z/M69f:(%\d`LQOY7_Fl`s(<E?0Y85d4Q0*RWRdTXGJ0#F&p'/MJ\K3qD%?m7LA
%O]B#Kdl_/P:hJ"&Q&s[gr&jdB4qsr4)s^iDA,!dXIMF@_%HPWc7'r`jpm=5)(\n529)Hs5d`^h1ndD6bf/8oc$X'"Wp$+PYr?TZ]
%!beO9;2hCZIj$cr8p>d]Vhe86c2;;7$9g$A75kb4ZPL#(Pl^a?G'njbP#(g@&,#N$QW3ot&EfKDT)@hZcENkhTC+8(E>T8cl&O1=
%K7SbAh4^)KX)%_,rA*fOq\te8DL6^*g,q+YQSPo2SdPF1aS_\AIl`M:%"Y,F_$nWKjA0]'oqrsK3Qo!/'"''=h>HMDF3][2FGE"o
%a+^J)?=H'QDT(bPkXI=2Rm4"B1reCI$/nWhRQNF'mPLds!K_Ffc3Thm4.X?9PQ8-Heak=emdqi,GIjE/"gG0k:JVe(cTd#neLisr
%Ud<P'`kJ^Q-Mc+nS6tmolIg*oC$S!#eX+P9UA%gIb\^tYP&Fq[5)?l\,P0]3m[sc$?c,NB@"d8e!PN9Lqc612`HFW&b,B1q(,qPM
%N%u/9RG1IX_bn3p-]aZ=iNdLDo!WQ;4pWYZ?f1uK8&>,O/*@g]-dNpIau_V?o;p3P9mn834#r49-^0R2=h[s\1.i`chbUtMB2Sl@
%Q"O!U\jT&1FA$CpGjC0q0G9VaQ.\(E9*'DjUQ-_oNGR\gn5A/dUH0GLDri7i_ZU0H?$Y=`o2a.GgWIG9DC-CFDQb^U&F^TB*(d=9
%P0+?:[ZfI'Hpuc28Y"\E<Bi:R&a,__YYSVLo%!YG0uW[]YlCQr#lER?U&ll1#+Uff'Qcq;^'j7s-#sQ)7K0G[]8I=W>8[!hp<dGi
%6MkFC(W;d/!gB2bs#e8VH4f$rZs658kN-D+-=)e5!1TS5=!e.7TQXUlN+!,m4XqG"W,_JRCmK82UPn;$;V&W-@gM!2K,2na\]l??
%4lJLo;f/`'ji_p_=$SEG7f7D_p5'gSbY0K)iZ-KLB+FQD`j]I'g]2`\,m=:K,bo9QMJgr.?gj>iJGGWm8!tjFjN_=V>1=fXdREqj
%3;IV0)lQ^63=naSnD3<SO[.&/\+&S%+ViN`o]P_OVF#A0O*XoR?J=W\WYb=e&-P$VV1?B"AO[*`*BFVB7GlUg,AEZ^3HaO>ED"-=
%*P*fI@oS'Yi>ZdnedlQXAMl?C,1#2<(GW`YUH&n@0JO+f?XAK5JGR=mE"$F_R2M6Da8p:D_4MBc#96BsWj,4oiR&X[AIkr0r,_ob
%eVj):mG>+c5A(WIIO.Ppl&tLJLm\,("J3_RBfMU[2$V+C+.eQUH&Ub2(e_VT)YX+$Qlpn)1lqW!%oY)H,CGdB]"lUQ>&8WCY">/8
%>e8$9ib.<^3.a7QjoN[Wm0p$&Dc1-?4&DUqqL^TT\5$IiS)(^#%^ePek$n59_@9ur?Y&s-Lt8\Wl%h=Dclu5(S^"r`191:"'POHS
%b6O'X%IM\ral7sh9n[<>M62A_id_bGZ,s+n^0k:C_(TH:LCi9$m_UXE`pZ5-RNILI?>]f^Lk[_7bg^1QEgtT3'rioCI7cfn_u.8^
%VB\=p'50?uJIrtj1mU`GH!o[=Xsh(:>2)T^*fC`,k;[s?Ai$"sIpB28BjDZb/o7+O,;]Y_Rc^SL6*7fee(:)=8Eobl3abQ#,p$UR
%JjkIa8f#?:JL%u-F9%/&H@M_85[_#ZiI^W`TSW>`kR>5[U]`N60[O<&aiIeciZ[MZ%^du(Gh-<Cd*O3FJ1tf+PF]XdA';CJ2?#Cm
%FE":*hHk&Y8/(A&a;g$Xp.,ssSMuUC&G_;Ffcq2$"IAc&A:q53m!l91OPnXT8[_,kQb%m;nZb8)\s0Af$Lm.q>?Gri@1CCQbn3q(
%L4s+!aE<6"U?9PY9\3^5UhS$78.oR+"fCVY`G<TTXL$>L^(K*lfoH>6b1IT#C)87l;7_TX$soVaQV8`gjJa&pdn1FmVdn+!.pW:M
%Nb,DrF>:s:l/IV'9,BOdAo-u[6g%S9,.XY@7J<j(&MIl99W_P&+d1@q>NI'Cd;.g<EcIh[o&5Bf<\D[^Re$teX5g;PhEi,uosS4R
%"ft:VPM)\!4k211SF;`s`S"E)ABJ:j=k#'9E@Oih&!pARlsa%G>.ZaeUjT:f&L.p3JsJ#ue_#.ZV2H!1d),tW>kM3@)IZ60c'cb@
%r6"9<Y>m3<f>pp-<%_WF]kUZun$>%Q\Q:CmODVJ(b/Hr^^6]F7jW^k9^n+OYiWUkrkF:L?++5EkXLp6]EY3qFe6S#!1rIHc(GXW$
%0N_MhaMk1BUfB$B#)F9S`l^`qWOYZ!\VL8j;4$4PGo%E-(1MKbRXOgnM]`;4`o,JN8sP=i!Wh^(jafg=kZn)_Y64H:"G3ktB.L9!
%@,TG@I$Q>d2iVC2IBn/-;OX]?P@NgC(2#t]Ct\.U2FuLVdR$BN*j]F>GudPDAX"&p26pdrS;_f6gS>,DP;m-s2R-l;B)c%@2uCaN
%#A3%IgF&7#bG?X7B\>/"^7u;b>F*8(>t:!]IO!.8_.]E$IhBFjprc55dRhu1akqOZdm8[]aV*EjSI@WI=-j_4,EX_LGg<7M2D9AO
%kBkA^pRDi/N([Y.q(5[T9Zg.$K,sV2r'a]&(]Au0R5pjACd)UJV>7Fml,i8905:u;rZH9Xo=$*>3tG7p)T*H%N03"h*g>Y<RO6KJ
%k[E=:A)O]I$RG:AVXu$*SAfcAVOMrXIWi<SZ'DC.p!G*%lD)=gdbLd^(ALi;d1k)#o*RiQWK/D')OHH[BS*J.mMOGDo;YYlW0"QH
%,"P)raROEW&hGaZc#m1T-"fE1lq=TAjs.s+d3C@f9kND>`dBUA:g'3I2N]d;D:153D2c9MI"Z_9jV?!0o/[m`B$<a^MtrMkT'SX^
%HuY.me)hrd^5cl[A'@FNLf^V\$g+2f0?Rr]Pkeu5,KbS&q.Prqo+@STq3tbUg;M-]"BfR_]@A8LekIAF+5r]hg2t>^KU!7n(HINI
%Lr=9qYP*Zi@A]XR`dEHYjac/p5/M\LR?KBJ60+tL@6WC5_0iVHQ2-4pe/:%(UNq.Vq945>f///B1*=akec"."M9b$_JKN*+*&S2N
%)"S=Dh*VjuI"Y5^lk9Di_ZKAe:cRY?Z(@3]/+X?RN3TZ7js)DgVts9Q,KSZW<T^&N(?K;#=IG6>U`RMV@=*5l\!VdC#iB>-4_$[m
%GSp%'),08<V>791>?qh(Mb=-dA^!Z3aV5=Ejs+b[6YL->/eii$oGR64'STOl-0Cs/aHW%`+fYj*LOPK_BTiVi&bMd5bS'FX`9tue
%5"XVfd@MUI_H0dE$\S4f7X$g>5/JGEn9.2iVX_mU'"%X@p+*?5I1]P;h/>HhK(t-,Nf=[.O1%tYCQtG$Yh^"#WOmFJQpFuoL,VfD
%3k]+*K,RbsqKuAHV)n;nPjg0ZcR<(EKu'a]L0M4O\eG6(5jT5+MJ?8Wb,bul:^me]S>sqhC05FT0!E60Ep<K'3a-[4ir.tY]"LoY
%XZ!M#-)pu$7l1FM+cDPhEUTGGYX90R<5U%`<5ZSp@6?K+C4Ij$B+3=p=s?d@<5[^8[["=0;!a2S?!HN"ZU6c.d$?1:<5Y_2&"QQ,
%Qm[ND(odTl,I"4,+!n4\!G]^84A%#slsC12/5Djm9rt"B7F]j'10f[N."+6dFLLo8_D>$'L2+N40f(&J)R;?;kZOLYfITe[lI/LV
%0ir^]d>Jp&9e8.?MrZkJlkBY-(*L%$Lp.5GL%%^qLM78N\><dGBo0i=A7o%W`OsTP_rl!>NA7R>#k:Q<D2g+^l[/&no^::o^X50P
%<G3q&,?nh78i.<.1t9+D&rec$YfKEn2Hc8X]SJH*P,23RYu2(Q8i5*-.`PG^Z"CB4YS%DX^0)^^U4KMT>G`$m21e*78i5*9;%';B
%1<9!?^k=p:4g3t6if%_\C!S"*1L,mi/4qb'6Cd789/Q5!Z4`.`F_E'>:WkQUYZ?f3)Nj"&;Cg/1.j%5%X$mr-LG><^2HYL)HCU-6
%/J__'"sP,$H,.i?NNmo6h7t#_>.#Q62'PS`MDWlmL/0>JJBVHE>,79lg"+AV/^iQ/%g,(SYm6Hbjm1]:2"7(gpeo(sfLn59WTCf0
%r]qU%\294lX3ok@)[A[YBQ0!3UJEOG.qsaG7cRq.+(Bp3Y'MkC28Qh[2$^NeNuDLs>,qj^3bXZ,$9C/A79XB/FmMqsFWFhHb4,!Q
%Yde[e:S:Lh,2FS=E-ML9;AQ0PcNTq;L]&034t=o86B@rZZ)&b!'FF5o&<mT6XXgE=>pEUp([;Kj<fDuE\tZfkOWneLLYK4+MBqfQ
%KVDqfV"lfEUmJ&=;P^3*OHg&sX&rg`PXgld.2(LiZ?f-#FItuC_[]QiHu>sn^\HP69(b'M\umi)"$cRB[@OpS>pDu22%5sU5mkMA
%E?[j2*=QDZX@R_:hf>E<Vr9'l1L]eH4,,88UTl$)d7C?0H/+>nBcD0c35/-Um,u.$G!:Bqr:AZ-i1KH;s,V['n&CDQs,.u6rEoTk
%hu-XR0=UoMj$2?!K7r`6efUja^O;19")Kg')%4Q+RpGb#HGC#E3K'-hH0\0%ji;<>!NY7qrE8<-:hcY=h)_-lBYWcjT0Xp<INoNk
%;UF[^Pt2)9K<`PDmbL1#`'82"_C4-!GYGB_U_e()#N2]_qB`g&^rNqPSllJ`V-PR38Ws"?:ZA!jZ$g;3NXs4[LrqR3;gd8/hLGPI
%IeQ)*ofrEHhu)NT5QBbnq;;21TDn??0.Hec^OQ9q^\sWDJ,/-Ns7jA/nc/IGs8C"<kE#Z++9.D:q!hEMrqru"p,meJs5s=TJ+;QK
%`79?ks%0\b"X7T3r&OQXdp34a3B@$(Rk2&Vd!r;4CD+CsLpau[`/'Cp)JS)b$a?ke:pE7U)f^=;m"G:"U`a7s,:Z5Hp%FT'q%!M`
%Mh*,i(I2f?0)+KO"?sRnR`[r$<NO]"BTTR!TujId]$UA[3L*9%>=WV;,42VknFInh]hNSa+4?d`0_3ZfStP+Ij;8$lPP.'t[b*qD
%6Q"k1qZ,&r9ZH)HZ`OUGjAWVaQ"<k"'lq&^UN-bK>Mh`ZUif^(e:k/JLsVIh1kKQ=';?!kA8)RVOB/f.f4V<,+^VS&Fm?S\D2!PE
%C?RbjEL!,-@,/>+\*?In*4"cjUgqE6E-&Q,4%fW)TXeP;oWM`LTZds/2*f14L6,.*f-&C,#7[*VHP[G:+Z=,#V8lS</iJ_o\ieX&
%""S8^'j?djk?"`;'j!<hel;uE]J+A:-^lMH[IH9?oUPJMQh5]**j\LHPb"nV2*$ff@K4_6).m+Ai*NuiAO:1\?5X9;<]G=fRl>1G
%j6J$a3W-66.YI3'b9#t5$RWk9N_-,]?c8!Q$0@mQbp>'>UF-lC-!pnoHgF'S:_'?W\2)F0O0bi9iOHO%#]>.F>q]8<Rs;2jVb5XX
%`jQaufa_-_IHWTLG/ngZ$9IfPC]i=V(=aDgA8dh2f7+g>O+0`J$%#L:=]b,d5"3]'.I(Y5/;.Q6Y)4c3aK"O*U?rpT5/;m,e4X9s
%/qLk:Q;9<gTWR@DHEO@d1%l=9:Wa\h^eX:8,VRYHgL+)@ZsU/acp5QlMCt)=>/p@^@tP?kGnN(3,]7^P3Z?]-PK]qG>XW@4<VlWE
%Ul66[Q:@?RO9iu=/Zak"l7l7Rb?csWRg_Cu<$q/4MthH$]-%VB0etH8\1$:BjbD"0.F`fJpSE"5M2"BFkT7crXKD$+fJQEi&NcJF
%+KpWJ1"h<n=`Gk\V<9.qguOdfG=RfSeN/I6!hJF?eJh`CinY2hZOPDP[r/KhD/jj\q1m^"91!mE?mB.$a]A$_m*Jj3Mi6.tqMmul
%Y"<\;8.YN&X?%suO`@Xg=&:62kDses'd^E_Qsr9_NmI`0hUh+-Q5eNE"m?tI,=&U!f&]-LZdPX\N.A8eO">Og&dkI%X5M9@Tt<F=
%?Y,hGCBM"PTc_B=-R-XiQX=@tb]ZgP_F`VQncj`_Lg^/%9!"cqY"IBWres43>We$+";HP0oHi*o)O<QsgIR`+ei%t*f@HhaU8oF.
%Ak2>GoW'EeR/l!.'FN9Sfu(<K0\Pi$'F;Wj@)`@I)tD4;Cs.L=\_+f(*P3\8SpY+[$^\au?coO]cVhl(>'\6-e=g\2(RugX$MUOP
%5ioC'EM=TD;Q#7k]##M&.XlY-P#[_qpB4Ok0"2c4H*EuWa[[%Qd$HaPYjZf/0GQL:/))GX7\R`"oU$j:3OhXJ/H"=I):Uro[DF#L
%l$.i.V^r[-l[gN6M<IO5S@!W7k+?ThP\V@$;*)f_$g^7e,s<9)AKA\<-8L2IP]u0Q/<,6`Mg*e"[&/UgE3N0j4E'R'Y59&ZY\,bF
%.N3B`KmA,JnZgGUW]Ajc>KS;JQ;WpQ0dASgL*DX5@R9XH[=?k]0VjJFTB#eDgukV:.Z=Xh/^#-1.8&r:mju8Ded:X49i^o^Y\/NB
%l<BJh&d?SWCiX(H_q8?4e_ubceqB/$)cOKHYSM&9Xb"oGfZk(POU"A1!E`R^H9LWHX'J@gHNeR%]a5X9'Uq>R?ob[CO,Z1OOrput
%"OW5bA7EQ$,Z&p)Vn,fFi5C01*;A\WZiMKZ[>_.D1jYIc*JSlcAY46aYPVX>D[_P3"V/MbK'MFD&7MIN4UGX8:s14rCtR3.lJe)\
%iIftT0[&5+"X]@k^MN+H.HkAKC(fl)8k#^Wi[o%I&?93K]E7u0UC:.I)i"/8GDAGKI]Q<UdIJPOn+:!NIcK^&XkjTsM$uk=MX*#H
%U'VlBfs'AtdGm16&g[3[s69:!qW9i3L/[!m'9)SH'>:cB2[Y269+?'@#c^4j_+p7eqpV<p'`4,p<6&./R6$g2r>>,#5]80Z`S'l#
%O(W;MXnMai&*frr+q@:5ADZrb2_pPmI+f`OEmYrb.WbFJU.9i>4&)H`:l2+ugGEaHN-[qK[+$H!]Z1'tQFkWd3`$IVkm#G-+p"J*
%fCKqV#/$E1\K',MT+lF08h+G.-aXQ-m-,Z)'8<kuB"&NN8_?X<M[AL=H6p'+Ot.b0_/qIjO%;o"\@*];KbubWF_7jG/ul4RO_&Br
%,o+@"6T3"P=ns8ErkWMAaa*G"AaeYbeo]UeC7"1a\Z#IS""WJ`d2Ws;2_r]j=ua^q%Z,2C#A<_>^pjN&JG"LS*Rm)ictiMU1)!Ng
%F:K>7%2@>/Q-6QU-=(G./p5f=@?p5>)H>j!J;&PqnA']2n"j4<niq6T"odKrQf8+ai8pdSO7V.'5+u+0>IK7BaXQPc0fIducFXBF
%OnR/+c.9sjkTmc#,I3i'mq'mm<<$/;^QMsFX,BdAhO8q#oup5YbZ*H!B1C=AlF*^=!fAr5jL"PiJPOa:b1M-Vg<eR)O_Lh.Y&ugk
%[d**cIu`Fo<d!<sYWlF`,O1<$KoHVOk(uuVWbF-21S\-mWDVYrl`#iW(L!)#l7pY"ZDr438pf+[h?(?<-m:q19Xa=*cY,*VegW-/
%#S-g3KN,uO$E0A:bW3[?6S4[<7NLM;U.,s>(Y^Zn@,!Db^tUU3@<IM2.OkqQ0ohSRVnmP8ZVm5!*:o,qrgOq.l5@WT(3>%FcSu91
%7Ig7-cT!E!W=*:>'cQ%u1:%c30tAHSB0p43H*%V&3K=/T:,t2pGTL]Pj6@W1UG&OK3laDESDsje^#1:OB6*YL2BT+_a$C;PjBl`d
%3""qJank#dNe9sn@=5>Nj"/5`>*VZoFIQ,<W#+aZg)O]lOgStpW6XoqS2IjJiui%pVmg@^,Fak%SDt`uSK6!9%RM&Z46Li0Fh.P%
%3KEipleF>k2Ni-A42140E=g/k@0q#1nsUJmc>eqmq>.O@S@iT[L-!A[JuT,1k;]\g]PQajLpLonm2S@KjW"MOR@1#!EDYG.0$H<c
%iYVn\k;_%4I;(P&0t`(<?iQ9cpCA<OGlRI"0<VkcnDZM#k/t;3Y+D]8]]j3,T(ecH1eP9<T6ak:FMr$?X-7(7dnLVjDi`<4EEnZu
%kYPf@+oW4iSSH%6,@g/hCiJ[]3m+,idMqeHoQ061a'M!n+FER&&!!AI!S:'3k>3\mk.M/^rLcl(U&-Xsce\D'=bKlES8Wsc^AI]U
%=24RnRu`'piPXP8r9F$K^Amuqf+19A55s#dhuEN.?Trl1e_e.=p.sRnq#3LlHiB\id4]qs4T+KRhgTn@^\?8[^]!ldViU;\q9T*$
%h4ME2p['>VFq4J_n%S\]B'eP:hnB'YJ,T.p^#=;4eN\G+G<>(3^AIO4n,;pg?[lQ16`bLPrn!3\qXissN;<>]+2@gHV`.uY]8n%_
%s68A6TDU3D7]T9\qq`!I+27^GiVWYP@r"AP1"PR]Z2aU0)>rXO5Pb'Rm>E:eh7N.54ob#oT?e@+5=e&\]s&1+G\P<Z$QF$,pj))G
%^+1e$N.'<\q:CRE'A7mE3C&RT!E[%nG7Km-P`sc>grp>Er#\#hmX8`pHYF'11Cg`S&-h>`qYC-$%6=E3..10?J52j4F.o?UE#jDb
%)2)YS"S]_1)=-HlIdb%^I>:p_0r=m4p>0$6rf-?\nbO+/ANsRD%>j#3[MO7.iEiacMZ6q,lIOUY=(Lt1GX*,?KoMJAZqs@+82X,d
%AqljE!&'R_qQpA:3VGn+TN*_(E)5<,#ss'$^i1*ZMC9C!7VkoN%i"d8LqZ$D7fX$Zn.U1(<U\.^$bO1ZM5Jh*8ZhiLB(e*#n4AS+
%8M0@!jG4#.a,B-<['-EPPc7n6R3kgHk's4&nODIFS$,>Yes`7I7^9]a/%%i9Tgglk8m3kZ79PahrrkHZ;H5.;S&<PR>*M4Ylb\mn
%"/7,s97pCg8dba+Zi%?<rI/Lp$tB/:X];R#INmjt,&Ze@pHVT,/%u3_1Lbo8,jm0*gMe[2iQmeNL3pG($9.,'i1<:TlsAE(#>Qkc
%4,Ch+muPE?"&[PPat%oN+'9@9"Bu8;SW'Lh73/bVf-8%n"4o<%96ZbA44gfNYoiD8ZK"$l!.hQUCT1L;H@m$t*Ee**`i(6b\KB]b
%/Oc40Na8^^ia,QDMMaB(4:=OEdVkTO]9,FH&l#(o@d;/DqLKda4J/\P*'_oU$nb2RZ%.F"'op8!Mj^GQg^^o)\ZRFghtD;;c6Y/0
%IR3lAh!4QP$qsPhNDL$XBu&q;]\j-["$g<M#Cr#K:^tp:'U9;GIs=Q]c[2r)U(L94qFjX@f0"A1e0qjIeaEb:\?9Q0U4RVa\]]<D
%XX:+QT-=^e2D:+ipnE@]l2neO47MS^r^^1bX!s$!$Zm8UXMM4&&i.5t)_LZ]8+73p*ShG.\0A'`f`q\e"](DV*)^h+U=Vd!Dgk'r
%=(8^WG!Y2U:9?*m#f?'D.<2)j&Nks%74`sQ`#m4bb8I-l;8Bh'NbX_QbLrQN6W[klSJAZhQWMF#"P!@GcAuI?"/T*LP%IVEFg7ul
%$LPte]KUg+GYq'$<V2C"rC`E]2D.tB,G<u^)+EUBjDn*%*^Q,SW?[N64&?I@EDKF5*c-S[jRFkkGsN)$,V&3D0QAK]!A`2NJ.J>k
%9;!om2tVhE]-snmSaJBI*ur:p7<7TcF4:lET_D>'S[n]J?rg=HYI-"K_DFhee"2dc26DM[K)bmL7TU)aXcroc;Wsm1U0(EZJb*r?
%aJr9FOOj]A@@Q>9.m(gV=X:CDEWbq"A-3)bXmMniag?l0`dr.[R8Hf_&`"RLQfA-&Z08OE:2rsgkDEIuPj/P=iQfmN"A+l:'\q\;
%QsrSOVJE^qnu4#Ri*kaaDf3SJ/qik%&)LtCq12(o7$JI:NlC)B0).3n^'jDs;LAJ("sf3FX&%9M,d$1JeaEU4%VTWk?+dl]Kqt3L
%4iIV'IH8bbO('$&em#M2R4(j.k!GADSM&"'i">ER+l')fB+mhgC2A3nbnl#^V3B#?%0pcuPQan5cS2\HpM8^<Pjl2Ii4B#.(A1BZ
%ZQS-;Bol9"_GSQs/-l#3<*&-PYG4N'o]c:-]4aO(WEd/`[#:>WR/U2]/#^fbd"8P-'dGGk-pXFuCW3df,.]<OFfboF'"=HM(63*M
%.3/MCBu2FDFVR5kagcX+dF^A"NaqX&kdXQHXp:0g!):q@q$ho!]JsfT$e>lfa1.")J%Ct5%Y51t[BZ!AT_$:"2=.j28AH[Q9p)`E
%+A`_n&2];?2m,N/<=4oZs!m;7hu1Dt<13%9*iH]rR!i0I:-.@&J-e8@3jD_23R6@(!pK0/`mZJK0aTcM(IL1n0:bo[M6X!c3h^OZ
%9\i@>#u)/9H0GH&1_;%)(?c(SE-osOX/M@Z%Q2qh1kX,ZDV%KU-]c/X)r%&1j+:&$b(LE]UTSnfS2TZ1fF\Q*D^E:jSKpPe8a60W
%GdFDgE^<-NT.5;A.AELn4eLrF2QsY'.rR/"g;J&Ne-@f9&Aa$kJloARGgu.KTISH*CWpd^)bO,t!UPi,!t9:>8.tS6`'dDAR[Tn'
%HMD/oCBYu6Ta('5/i3!)%.VH>iEJQ7$lFe;/"0"Z@L-Z40%nPC/f-AF-2JZjB[Dt$CIcZ6e`fK\kTD]#^S3l,./GM#I0VQnWJVC5
%6)Y]6!Q-'>ob5\)1LZm[hD(gXei!jbm'865n$X9&@[8;/"6\rkj7aNK<i>5":LqH=-H319CT3`%<$Coa![Y,hjj`)+!HBJ@`Xjd0
%bjJa"dtuAhR^4,H1sp6pWL>K^R\p<eEU2kU7)g-6RQiNg=dV7bFZE5$VtApTGRUeI_6.YKCU@(KDrlm,Q0CogBQ$BjME5ifZtW.#
%8igECTIq8l>;nt_VE\_/T0iV[0u%+3iOqh4&X94lHO%!-0cP8(]nIEAbbn)l6=mK&>($_M4sdjoCX2DiTWn4ESjRYp.!>c[U1QEf
%[n[E&0Yc8)j=hgp"^+OZ$-biK'C*7ifq^1B`b2o:51=[hTp%?KkUHh!&*ji"p*eI_1_f\f=^EhGaehY,5UN'"X+oRqATc"H(D.kE
%Y"AmodVaN+/Ke$ZrUum+_q\2V&/snS.gT5b$c]IRi`']5aUmDP<cEUeL'/s^*+QjrF*Hf0<C`L4JNfJI?k-Pdr+."i'^Kd*c.N@p
%!#.Ep#1??-E9NLY4TndEEeS\Q$*3Z;c:krDU/n#]Zr@Oa,87Xf*S_='*6+\IS$Nn[UdM?+5g6e&iDr5l0O7Xp0N\A@M%(a<3].+%
%/F<:b22dp^0+XLQ09>Q]aEq;0jJ#O!8Ki`r-Ctl>.`MV9"+18@p/+PCWU2Mi.7F^\&Kl24);8dnnnBp\6p2!TGKJhf`pW+qlj7eX
%kab!f%A&4U&>'VgGpbs?Ls^0>\AEe&5FVEfIn]74/=$_$WeP1tW/eU"9$4_)7q#nO32tn.Rpc0Fjno2NG`T#QU#H"W+lB-/^o!Nn
%UtN,5S#Nte0nhI71RUF@KuudSLf9e*eSB!tD<P+nk8'^kW.?,%1YtC,W/TE$<>8UioO%?65rXmP0AJs!T&*0QWGs@[#qnH>nF<>6
%dZ%]/!_#uD*,Q+4\kB<S?UCF"<=kEK:b;^1ZN``.C^oK?+:Eu"JV/3,:tfZaL"ScQ,ZJW<a$B!E/E^E*A&!((;PAeJJo-+cg8Nmk
%ka.LMlR5*AFRMK6'p\.h6gd"]TGL*=enC/9JI&L&Z<WR9Jqp6VS,%n@-=kJM+V2IUrP5?l02^0=-6k(YL+Wu+a#he"F+I0fCg<<A
%6;]A34G^da0F>oP<McQF:,)nUF]c"5%18#j?n6uL"Z=_3dEAV:7cI"AW^aj%dDDY,Hs1ShapsYD.N4*&aFK1hL>j6G.N3Kp#D2fk
%W8B>i18Hi5-PtsSij5^VXVT$4TKC`1P(gd_9hG#.<'bttC-!<9fM,-H$ND#lSXj>_/lU[I$YBQ@Y+_V$XX)"FO/VIm(1G%\V*7I]
%aF-k^2Y.eD&_BX.2Y7.;K/L=nFIrg(21j2Yf'FNU4eq]+5^87-d!'$=Rrm69'XJD'+'*l/.\kTNFs:\)C^*Kt$$\-BFb[q`m,u?/
%mRn*AFe91$Z%SE:<A+s;ee?P%8A$oW&eddIIAY`kd._KsK>eZ>.c1@lcBCempJNeaE`,"(<oZXH*3/4qn<(Y.o"?Bg;+IoleRdD\
%*RL`^56J"G&>b(EBcu`$EEKBGX'A#W7(b@7(Q1bj`/8&J/AF\mB+\0lK>^f3!sgEZrF?J3>u]JZ;02'OBDZ@/j(r&9d'?\OKQNBh
%431],fPq;@UT6W7=kh7aS3)$IL7tdDLc`N;'.m\6THI:J7-5Vg*)`^ZCnF@]0+(hiM'5?U1kLh)NJgc19?iBX2?e^Q6XJo^![$G_
%YaIh;T=_<B&/-Vk9G$4eCl_?;J^+IDLic;2]apR3I=i_?(_"`Ji`5I/kFP"?]HO+b-^:8F#TpNmV*L3=c5Bkf9qW[h#G&]hi_V2l
%1''9"Jun_gG\Q5XA?E!_A^_n_'5s7"Bc*fqHN:Ai/6g[nKchQh<<^]LF'=/I*pq@N%f^e<nVfAs[G)Kb,bp<ehD4W.%##c9]=CQ@
%nO%9?'>cK.9!Mq^UMqFfBSo[#HcTstJUkG5J$6YYJE>;0)QF+.%u29'9pJS2+uaF2"\AD")0aCQ#)WT3:pD=,;%7Lb&Eg?dFU_kS
%f.akm#4M;,,IY-Q\sM,t,>G.3:[jnqk<b*s.LGl5"S>/lo>;r,V4'd$E1]Hgpa05th[%AZF%C1g1+Q5^];JE)o!omiPgpO>pQ0:5
%.?WmMY\EA?I<>fRn4O>S)Z!\U]DL05OYdnGObg8i8Mhlj9EON>4%)#b\G,a%@&j]MbUj28Qn(!%[1tqV#-CgO7S"dpjslhN*QnBb
%nMuK+RSFHM%q$rBNJ]\F68Nt%ldlQ]^=C+55-4MQCYWLAhpTD>+?IPVkCMpW)tb+nL[XSU*VG!r7IQSO\3[B8]c)oOcls/t%7`R_
%DW4_C2u@S`&&"<UDp7loj,1+kd_[qG]c-m%fPg'6iu6+CXC(rXBMlMt[da3/5Z32chC*V8!D+Ub>uo=\*q=&f'V<&pk.m_E:eOt#
%"MCPX*tGQ-\qHj@ILJW!7+7cD\6\RmB1EP=<Jl<jAgl]-QhH),a7;Ab,@dB_GU,m8_gAADB.-]3YuG#sb/GB(9AsZe\kBH5YYJ=S
%"sOs&B)/lWfc>?mb@_q?-ahm*7j2pfQ_^<N-ONuj_^u3M1pqpdPb8po:9[DOT[8<P[\s$q1.N>C\mJ(lC/,49<KaC^Xq9omCl$DK
%-TcEXOq`$]FL@-eh/(WVEcl*)!O>6gddjsXjr;]L#L>M[Z5u=:7TeaZc.B/_dtqgA&/Rq9Z7,R#HWNHqRTdgZRU"bo"VPMW:*snr
%<u9EP0I68lZ^FEb&L`o!j@bT>f[LKg%>RIuk\4K&F3k@T]HLsAY?*^g%Ps)@NX!4[&[$9/?!g2]ciLUZN@)alArQA$M)<"gcd*>^
%=chVL;RY:-mX&=H5+Un"jY7NIPuU=>$@aat4U_4^faiDY`8_lciJ]2ScEtXbn4+#ojiXAsar:F)9&;KS'ahBA>?3;t!U)0%G1Vp[
%/>86W`P\70h#=f8K$B;RI^@-u3`G0I,usF;USK[b"s-Y<+I$XUO._>NCaukO$C=/__V(qoA\"9M9UIBQBa)XclR%.;0t9lIdRL$:
%;L\Vh*V=W9]T9%)"c$5m1^`a*fX<#l_ZIiqTVFDk'4]sl-^d2<0mF[e%.l1*U4IdaM1g"'(<Bod&N5.Q+`]:oFb"9@5E0W(g_,U2
%V51bqSoQVHaLYM]b4pjF5W[li4V)^P+#e7pTC6Oo$O/)XkS<*R65:&qpL2TH8OAR#:qm*/2-$`fq^B*:QS^5bBGT;(d`a.d8*;cI
%]YGsG^FbXYd.*K_MObGKA!'TYV?]G0NNLtS+Xe[KmG'r`TO3#r2=2kE^pN0%J'.$Z!.(&3R>i,hFAc3L?P*A(+3j)&)4[M`X@#-b
%cm(6ap*pE$NEgDL.,,=tHBGJu;rA*cUYgJUaJhB"2)&\JjO1$4)k(GMVL1VN*`:E_0d,g1]oHu9nE%rB>6.*eN@Y8Xi.A><44,QQ
%K4McS..QQ+P#.kn;!;&W!a/M<?XHo4>VAY^')DgT@b7d:b^=60GU_'OL_/C;HoA1dl(Nl#M,H%!@Sr.+\48DA*:ZdMA>-2+dMn7-
%90",2(A3AdTA\pdn"s2\E%u21?):$A/]2[pOgbE"Fg\K/%a&7Vo@]*uk/<fE?P8>K+p)[;("T^W1\Qt[>C;opHJgK;:]ecRI5uSF
%$V7*1EF,0N(L!t_i%Wb/IP,-&emMqqmk(Q$U&IeGriFRn*9^='b^aC0kCnOFciEu(hk=IBL-D0,AigKG^o<V5^mC_X]Z)bfoTG":
%T[tlmOZ0o1Q]UU3K5NY="Qurj^R.p-#""OgrA_fK"&`>AB2&`XLgP1(P[W3L&+s]cM=C797VfuQ(2fg/Fa;R+Cl02LGd"]<&-``Y
%/iqF;S#YX6_tb03'`a_3^rI?]r'7FrE@nbtruaj;2T&YEjA#QhfY+hc%TP2LhV&/$!!`Dp(>lpmpjgSdNBl$em#kDB+Zp]F,'.E3
%$K;h?1%1fQgNYQ5F+l8ED5(Sior-b3/i0G*WMu68*h_ILaPR:&Ps@&[cOeeXQY5086X?*lpXD5X/QYW4YR7JaV=@4D@l,naqu];"
%%ZA/(^eOLOGerZ1jc^GXbml6R$`XDpTjmjt'EC^a4R-PK7*s7Nc7@K9aUW\2YZ`kRJ1-a5%o_f@U'-Rfj`%:2.<gQNXkd5h$%:,c
%'6BS@+5[`M48^P/dhRmoQuY"%)(p'9h5(/<\B@]c&e[aWP,1FX5>"`UOdu"%bk[UD%"qHXE0;%TO;Q:N?aXY$"iKU-;Q_ZmQ8/_b
%1@`9q3g=;;7F/8*UkdSK&LJpK2E.=Op0=;jh#4=SY;nh%nSsXq:)5cFQrAp6mKTo;3E%&9=9XoDpc.QdoO51)RU7GuDHgJ73H:RV
%L*/YMnHG[Q=H^OD#E4SbMndtHi-ph#H=B5N\KI"H1+CFDo^F"V>5!VZQOo`MTlHgf?F_Il+0Dh>&u&^X8&W89qmXWQKd%9W#qD)6
%#0Fd:qo4]8F^gQ.<I-0:2)W/Q[8`@.<H6uC7-i@ujV8(5juo[))@rF+&2fQf6srdr[NjJpPJT@0S6uo]dO@pXG*o\iK1tq&B$+>4
%$CfpTE']hp$>HF]6#/I#EF*pJoTd]ig9GqJ0iCZqMU,Z;.k\gu:A)\@i1<&ZBaZ"(G=\3d[?S=VW)Ynh%.S8a501Y"]-6A:!CmGF
%QT+.<D\;/soENk(V^g(L18u[7)`Ij>2UYfAABSV:.cU2m@IcC8-^C0p_hB[b1_(\bV6??+/WI0soiAQ\;D--r<_ZSE+*3AGcO)"9
%*q'K12\k`U^fZ_?;(c:LDr=8@P),MeeKn49g,d\::aH=t1L7J'e'c\"iB5%TbX3jD$hGQ9Cgp=p[&d[D(.1&i"ILZ'ch5?Q2T5#0
%`=eJO@\'J#)recFHWpNO3jM7mOt/!rVr"c5.F=nk?6Z+H,@M-#L]'4V[al%g-[<jFN$-3aNX))XW9ia+/7o[&U9U(aLC=>#69Pi6
%jj81O=.<.9\i\snR(o/=OAc1304t#L.I"fJpDA$%=S%4TL#<`Fhii$;`Y+;1!Q=?h`;tS!_,n;fROm8-SaT0fZFUIM,h$[7h(BK/
%'4hC!jM>$=k]q+j03'(^1T,;knXWr1&=)%s2fOM_W`.IKKIT1?$0?:OeKcEZ4ud75/MbBqU0CnA'V#Y]*:u![*_1Bs/]Z3ZPY^h-
%o72qAU*_NH06T8HA0rD0*DI_B&2Pc!--6)$PVDg@-2nCbKU&1r`@_V]]L+!C@=cQGkKPLHZD]fRe+7q1#Um],Hf$7t?bV?W7cII_
%Y?q](kq8)eGkml!5-F<lc?%:659)21H3@qEgfsEs48qS)Q!#tk\479T,E$nGk1jdjijpNSo;ZGpLhmll:9cR/c,E>K#Z(6G%TsNl
%gQOL*X5M!'0[\o'=csKNol(BRiVc/h\_LPCnKX_e=S==."(][XQ11R*\%org5D3'$@lA?@B*i#<+JC.p%a0+57?A7r"uca<bV_Ri
%0s2g?-.]BVct^*Tn;&s-2Nnk,J8p`Bfbi=enHe%88i=dZNcHE'Q;A4c^bM:,mpT"i\]iJnn5\*Xj68bB]R>gGP!Q;:%_8Gc9a5[C
%s*;/E]`%X.0!Y_RDLUY1N4?3pj?#%iDdmOR.g?7,\;?odQ&;CTFQio&^]\qEO`^hBR6h"@3]5)L>.P5P$SpU,[DfX`OaIC.;uQLo
%B>#_'%d"s,0fm0Q[EoEe,4J#u'\%7X@@gWOG^kAi@X>EQZpS5D(MSM#&Xbf#64S=?;XKRdUZGn!0Z29=M!dcrNh2@8WtI,^W)"pk
%X;qXaW]p:eI.5,SOo)BQgs^[Pr!`&R>\VuJ[PaWk%UI[1+XVoi,q8(te&.=T:c,Sk#TJDR7kTU>DC`JaCrkNqb:M,-?iXZ][u1HW
%;]PTQ>3o!2CIbl7!A,T#R5Ik70G6DU4bbbWlQA-kh,<bNPX(;[<E%q.;6^is$6=l$bFmDg%T7&I\Z*J<dgLf((Kj'7YMoWdhUSL5
%V#3K>HhA3q-Br"e?U+2IKFqeDjBhb7g$Y]ZP-Ar%Gj]OAb4Xu/Wk(:a%[c`B)H6i8[c-74dgpEJT&i>uPIS3Aj@fAJ3;1^2P.F1R
%&JoN3IWIL^epLZBq7neD`>a]+>E![=_3jicW/Hnp!C+8J0AI#[g1bY)7H9adS>4JKR-9fP;VAEo/2#ZC$0/9<#p%-=1o?bLS&<+a
%\_?ArT'\ZKLTBOIeH+kiCI`<f+fP_C(^f/IYQVVYT;2d/M7SYLON/4mTsSGd7Za"uTI5+QF>C*DHF4.\oe9Ql_G5BfJPk,(`Z,F%
%i<SKo_hZ1jVH_l9*#C\`Gj?q7KoXdP=nc_Q0/ta9P+nf3m?8g3LK-/lL:9-Q@$U.6i):&B\nr_)RqJilhNJa;/K%H6CquT+FhhCi
%Uf'1W=i.\&kmC2r,o\;\&7hA%4L)1Sl3FDg#r,BTRq*M%$WC?-%]6M<f[)loc&)3%nN;G2OSC1OdSoU)\;*"i\1f4"d2Q`l7.tN,
%F.\f2`-O'P,+5j4,7<k,g<e>ELhQC]E=l3f5)?&fXE;V8FCiTeP;N&+iM:N`0YU5RRW?[Mn6?+&M?7'=1hBS+qlZ6&I3kG7oH%GR
%WU+P($T&7G,-UgAC0uS/Bh3hL6+CBrC7Cs<!LS!;*^bk=D0Q_NS0o[eI>#8/3oY9\2-*:2rc!b(W3g'/nUX-F85BHqE@!`<0_QZ7
%PunD[YB:]Nc*sS_o\uhDU]`tRJYhu!/<drY^VtLG]SU"+e$_k"We]\N^1b4V%OeT,%?n4M/jW6@O[HFks&b>5L#-S[bMi`HP"Vd&
%.Hjn$iG(C79`IiJDKPLg>)b$t-hD`,Hhn;=4Vu]gr1pPP386!(O39DNRQctnE(3I:$$-Tr@P1Z7+=RLP;!c$H%KkKb_qF;t>\KF%
%@meX$+^6_tBZb94dfkZ7)a/5H7,k0$j11=N,7-<l1uC5;NMof2go+32H9+>=n)Xe&8Ppp!/aoD)d0_%qUL7+-VS;-i'Tk\+@or\,
%M=a\j]d`O)oJMQXG$&l+54ii:Wf\-Nf3kfJ]-"Qo+'.1uX&W5Zl,_VZ6T&4"J9k=?LbI@(2J1L5Vu=$'X,3g1fQ8XuZ]2OGadU78
%,Z7`^ZCWFd\CrstVVCTKe"M>Rau?Zk.O%XJ3(+f[lc\\:+WYQb;T!4te\"M0/=R-YC;U"+9ug(_<G[[R*UfQ>C"#)dgN4Au<Xs=#
%`O)h\nA,k:8++9M:%se_5@`/bD'1DhGJuPn_$-DPcj2Ma27pIkcpL(MhQE:_C?M)=J_Mr&NRiaUJYDC1$28ueeI<;IDi1B#$<V(*
%3`-X6<jh*M`IXtc%=&FX:Sg]O9.$1jb)Gne$oEs(N;&[o)e^?N[HL334/'$?%A[f2'bCYL9R4G)$XGnd>rIe^THpNVh8<5,(O8km
%)I.:@T].5nr]<"/h!FR:&sbECK[cr@)7U3RL@EUFZ`AjmiiRcNonHHMZVt%3eU7XUB]MEddpPboO@j1kntcN+-qI;`*@:e*O30-p
%Ha.Vn%ho3YmR_rR"'j.Zh0pbG0?JPt3_.sI[-EsUd_M*HDT%baBi2d?>q#Ualcm3l5u(eR)eEuSh:iX#/Wn)S'p++QLL_W4*Nar#
%,*[1Y9pE]+O:$2'!g'&(E2Fcc+L,7T*b8uCNH!F0ntAAns%Ee.>^A+/C04jL>R2Wm_F]8&fNiY.*;j9^@pAH6".Z%I]>#FQ951MF
%K$D;d`O$"@F$rD?J.]^/QFOKr@O!IDM-H7(9.]_,%cSjK":![J%eC_V#:!uO\i=#lVAk\Mkrlfr,sVhFFso9?[)rRt>+_O!&nCQU
%C<16<'d(I"DCe7:*D_Yr+0&#Dc4^Jm>qN)%DJ@V+WJ/$)MX^HJRpU*:'<>FfG$,Bqk[f[4<0lDjW8O),`PQo=3cl4%Vkg7-VdpO6
%'Riq^bOXR-\Cik;X@<mk&c%P)^k!ssf@Xmf_8\I7Ru!j=AT"E[[&N<Y\1$lg3JVeS,1T6rG]s:lXb>k@_H:SVN(Tch4bE$&_?T6`
%R%@\M2'0dhepg,bq1OZ/[8Qk/><H.FREB=7'AIbE,G`.qZsZ7`J)"3j0OIB-_73d%SYeWnmWdYdG%TBF?eFBnf*+C4dqM(0h!@P/
%\;NB$Rlog[j^FXnqoSN%pF,^uHGd<S4$q6=_r8Bk4,PV:!^/iB3-aecfRcsM&([]Va`rSMnNOqO8MP"1)]cog,(mVO@jf52D"Dj8
%)=C<P3/ZOee:$HH&$IkkprEF(oS;?']8*R2Iei"gs7h(mr4bJq^E<LMO8nO,iK&K[n@&qCr:P!GouHm\*-0Vf^D"X7]ji^]8?bb`
%WD+,\"mFlU,mT5iSS/i6##U_!IifF58V9M,_H1.>`]'>k?I1(]k7OKkrTj7`ed-&#lHk=X)Q23*RWb=#HT6mIA\rjAY6E$3Ri"a^
%<fLePq2m:o.U7O#6`[Cb(_7&b]]*?_Z2+9tSdF4W'3g6a@IeZL$l(^CW%*e&P/=bj'sNQHYG0j;YH`,5m4s#taHdLaL_cdR<f-8I
%lPaTJ5ut_Nho]-sQsEWF4*5(tdOK&^-unm4Y@'4&A!b6DIA*,*3QT7kDP7rT&qphO8nV'jAPsMme#bH,mSg=t)'r,60R5d`B\#<\
%9a4WE:&+=ifR8GTO('YjR`S!('N@.W=!?F&#^J+s-&^U>b9nqoU$51oC*WHD$,b#IVH04mL2Si@MtBL"7Yk73JpF<g`L9P<GuWk:
%@WAa`Grt4i<YufJX+g6%cu'iG.u:"%V>6!BR-Dc$j-lF&h3XB]pHPp.i9U+oe=Q/s;8sY9\;Fp'IPP\H?q&leH$P6MaHWC*`[Vc'
%#SSs-@28H\KuI_@_\jds)i`WDoRXK0Hq&u!eY<jV[6iob5aKo!U$<]b>GZS\]f#i&"+J[+Pro,Y@&lEI^`%2_9_tMUWY2-Dl96!,
%0Mb(!*3RK5@j"Rq>f2Ce;_aWk$1+I381f*,(OXiZcu-gX&F0Zr.><:f02(6!gPDbJ5k*oI.3_(+K-m*>$KW#TdP5[ubW<G)"7GSG
%a?o?NgOq6/1qoJ*Yt@322>.;g\LX'b8jFXRVbp=UF(3+9cA'I$aYJY,d"j;`6SNg1-5KEf0["7#(0oq+1eHYiIcZgWh(D,m0r/?2
%Pc`nSf=5463a7m5XsYf-V9Wm^#@';7/^'77o57-cZrck'&[Ne6P+cc,Za;`W41&!gTaI]%$>E@9"$g9LjU6aV&9M`4:`1i&%]kLo
%jA@!X\4X8lI*m>p\29_;hE9*4C_W)up`tjsp'6+XBK$W7VHNR[3<69R1uQfS!8L=YiiEf$D`\fnLdf(f6f0t&O#L8?RhPH)L8]#O
%[qV74mRg3r5?c1E$X8#4p>N8SQ*@'L87J%h12jIWM5I7I>h6QNCMdTh7G+oA?6-)@Fm3f[b:ZM*Z21CKJsgp1Dn8X=-j(2W3EO;1
%P6SA]J^G5t7bcfO?Y[.]n#oERFhO9l@(V'X<A_=79CWZ@E.F!?g/Xg#*^Z<fDd^L=j2_OHQQSn`Y=C-:I@h'Pq$t8IP.k''EaZ0:
%Eg,4/Og-m!L*UL^,S-XVGohDW,:9B:m,&KVdYh1*PnTk*Ar3$-Xf&P?`aS`&p@sBcHJEt4V4;J\Xpn1nELUX(iaBh$'[^QR0/$PM
%nMJre2_Fc"DR0/K]+nK_4Vh-akiJNHX)S'dHZn(&chbPJ7Hr&=#9RU4rfL8ipEOUD567*7_u7`aK!l>F"C(E:=gNHgiBNp/'8r;k
%^X$naNKS^6*;RZ*$fNd3Qt)fj4TW[E?*S"H5HN4"Ts<R/4;jmWH3:V<1^d@;OenR+0pB=N#dBu4C86!p19#RjA]3>-N[L$3q6_!M
%COudmlq9oT&dg"Z2WS!CK6EKpcQQVF2"$O8#1n8T.\Q@`K5eLsFXsR.XN3JOm^R/N/Zd'oL7*Z).RAB9r!%Q>ed\[ml>u`Wm8a2:
%h&Xlq183Bbl<hfD<__rG_kf0a)o09nmk/iWZSdt]WoJU>J'CX]RhJ9AiW1'G^F60"m5Za,^Uh0&po,#se$3Zfre48$a0%?]bg5ql
%r65Q&a6ja\RbXU:Loo:"VQsYAJcFpHS[QbJP,d^N>afhMIpbb=Tk?\a-k<.$Bi1u=8nY.0*GEIF71\X9/'Vgsc8h)o2'Z1^>Nh7)
%1QRsq6lt5>7/38WJ'ohB'tIA8=ORcO&DX?i,`h!$DgGkJh3&kU2b%tJimTcn`uVVq5'_uuh?3)DXq;r^I:D$6nrTYFSif0[-]]\:
%c<%o'UrQ;t`b?(o-4g`P/Rg*4$+JK0An`)KG$&pM6lnZ=M"E^dRtEOh1&0u;mW(.)mT"@:OLN*'R;g=r'jZDlNg0"3dNr*m<[8ND
%6:k-X6sn,(3a1Zg2*0](,ok^ebHg'rP9FujOUOY"%!#n#[HBlVY:+qI@M:B$9CsR1i<M7l?IPYtNf@7Oq8H>tK=RJ!\TCW69"O;M
%_E?A_ACP>TV['9gK`_U+n[KjQ/nOB2W!3PVBBA!UA0$fR>%JLV8H_M%JZ]`;e:P@SNWq'j"kOXap;G6"?%\#:<L6h::fX:ke\5-W
%RoWX#RkW-&W?imla4/:DNuP1prphD<2M`2+@H5O72W,W(6sFhF8S/@KX-[]JXX1Xh[)@="lFhA\2']PQ%_YoFq(ALH\<pHn+#ch2
%.4\:^Y&)cG:cO,rg1hZ$#/:TmMUd1"Eq<q\-\lNWU_4IMi?srr/OUc&L@c,Q;;Z4tWUS@G*2Sl90e<3gQ9ZCi<[2>q>alJQremlg
%@Do#a9/Glr24Xo,mAa`6h,$YLA4mfOn7L-%>$7:lg/=rK#Mqs3d_W4moTe,%]ptIUB/"UE0X:k-B&G&E_Y'";9A(2OD$A6VYn'?l
%<7`$$%!n6.$!MHtaiX2G&:;mWRs^,WFa7ccq$&ap#[#J`;.`&o)o<fUesb#%4&AX41!>)]9944c^t#PRd@EA4>A;_QE+i5\pN'iI
%;Le6!WSI^!in9M`2dNt!hB1c3BB>\'=c_<5RdoIrmd)J`:UA.?f9k[^^Y9WOSjIefVW@`u:%[K-H[YTMrUQ8^AiEAc7NSG1-1/C.
%LBk1\Vq8F!lnr\T,HnmIc,`O&CNVK&!HtD%JC?b!J5lgg#B3#iemqh(EW@J_m-0(<%cE#oN`)iiR<Y.%G/LF>R*hp$66G"0.8Q:)
%.h:KrG.So#BcM0o"4#U&_bk$g!lPE&da>nf!USb+!7!.9[mCGd!7"ZT&jkFUN9TVMa)V1?Za<T%3H[,Ne"qiKr<oo9<ucZ7aX8Rf
%ErRJnlB0:]n,<L`/[*=P^K@EbAM(tspFk)Rac3-@s2rg=>gE.pnLetMRK#3QQ^)_u:0i7oFqZP/Dl,n6eoPLok)_c5A<Dd1J%YfJ
%`0:HSbQ!Jh2FYFZ^E.Iq?Oo6u043;So.U)Mb\7Ej6P1H)joZ8H07Mb=!t/f9<ReEhh'1OTc'JB2G#QuO1?/>iRr5cd?g^\XrPeZ6
%7[Q:+YCk*sMrhRP9!^L,!KCjem$I;[hdr3ik56Mm9"fn#U1:%%2j6?$6,BG]miGZW[Ti0,^F7D+lX92\`@k?`<-/*!9i`f')#p7P
%a`ZWK_<b1BZ%;gD9g19*0Bpl:AdU*`Y>B,(f7`R!:Npm[hH>c/i;T:#T$N0r-X3J8AS!-RP:a]!l6aBdad1m,C?NQ>#48-"QeZTr
%$N$iVX@!X>?s7h1nZi0gX&I@8Z8pR0:DrC_-+s>+0,rkdeID0ZlEVh^ad1W$2eh^FEjB7W0=9:koWd@ZMdP4t^k?6p#o=7_SMeN+
%%1LG>0c/SL9-h5R@_TD*5ko*'&)q""Ut<ZL@,n8D&`XmJ%R(.$V..Q3Hgl;S]jR)6ch1P#h8HS-8BeqR/3VJ4KMbm0qLa'YW"H"1
%-=7/lOUep+]^$Vq^+dqia\^f%6H'Eb=$CrIGk\B$%]ofb<EHsp,%Cf*bPiUbI#n-6_?XXm>Mar.0Ra.1'5lb[2)k;1(:UPZ(2BY!
%nNsmRZl\*lo4j;PV<8;eDrsq35K'<LMSdD=;/%Si>@#Oj#D\ODrS\O+=n'aV8A@hGn>D%o;-GkeM%Q;S7jXH/+$FJ@.pGBh($:Vt
%R)-q+1<alMfqOuqdkhgA*k2'tE2tdTqq#*#Ra-fOiNoaO>Ufp#TTQf)[N6209MJRBmM5L>HEGadj+R/$JEiR)GIpN#C+5/*ESPp1
%He#Xr&fIL-.nhn/IbF'(R?]&9:.JGfH$WR]D!Q"]/8>cViF\e:;"X;WqYMZbcD+SMdUa;@\>"gHQRShGF^?@b-.?U8\#EZXH[KfS
%QBf5eSeFb?/hPc3:gRhjT&fCpFmB)O"6"=M!sOO5jkpW=1!'C-i=7G<BFAKN:!cBDfk\95`@>joh.23!pGI(P1nt,6C4,CA-Ic.7
%/",I1gI9R2OA:a\3hF.6hQGKQm]FHVjl31CYl%/os7CM"s4K&SrS-n`hgG=!Vg&14_tRMc0nE^0mbQJ:rlb')5(<+^qk*oTlQ>!^
%dt`^&hgYIYVg"asr+5lliToqsr:&s_mlrr4nE99>$3UmA#Cc3$hu'C%s7;l]Iu#;3C&~>
%AI9_PrivateDataEnd
